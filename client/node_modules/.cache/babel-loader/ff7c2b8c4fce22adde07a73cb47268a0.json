{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/ViewContent/Syllabus/MaxReact/Lessons.js\";\nimport React, { Component } from 'react'; //import Task from './Task/Task';\n\nimport ErrorBoundary from '../../../ErrorBoundary/ErrorBoundary';\nimport student from '../../../../containers/Student.css';\nimport Lesson from './Lesson/Lesson';\n\nclass Lessons extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickToAddDelete: null\n    };\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n  //rendering current lessons headers\n  renderAllLessonsTableHeaderHandler() {\n    let clickToAddDelete = null;\n    showLeftOverLessonsFromSyllabus ? clickToAddDelete = 'Click to schedule this lesson' : clickToAddDelete = 'Click to Delete Lesson';\n\n    if (this.props.showLeftOverLessonsFromSyllabus == false) {\n      this.setState({\n        ClickToAddDelete: 'Click to Delete Lesson'\n      });\n    } else {\n      this.setState({\n        ClickToAddDelete: 'Click to schedule this lesson'\n      });\n    }\n\n    let header = Object.keys(this.props.lastLessonHeader);\n    return header.map((key, index) => {\n      //console.log(`this is the key: (${key}) and the index: (${index})`);\n      if (key === 'id') {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, clickToAddDelete);\n      } else {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, key.toUpperCase());\n      }\n\n      if (this.props.showLeftOverLessonsFromSyllabus == false) {\n        if (key === 'id') {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Click\\xA0to\\xA0Delete\");\n        } else {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, key.toUpperCase());\n        }\n      } else {\n        if (key === 'id') {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \"Click\\xA0to\\xA0Delete\");\n        } else {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, key.toUpperCase());\n        }\n      }\n    });\n  } //rendering current lessons\n\n\n  allLessonssHandler() {\n    return this.props.lessons.map((lesson, index) => {\n      return React.createElement(ErrorBoundary, {\n        key: lesson.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Lesson, {\n        lesson: lesson.lesson,\n        completion: lesson.completion,\n        particularKey: lesson.id,\n        click: () => this.props.clicked(index),\n        changed: event => this.props.changed(event, lesson.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    });\n  } // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Tasks] getSnapshotBeforeUpdate');\n  //   return { message: 'Snapshot' };\n  // }\n  // // componentWillUpdate() {\n  // //     return\n  // // }\n  // componentDidUpdate(prevProps, prevState, message) {\n  //   console.log('[Tasks] componentDidUpdate');\n  //   console.log(message);\n  // }\n  // componentWillUnmount() {\n  //   console.log('[Tasks.js] componentWillUnmount');\n  // }\n\n\n  render() {\n    console.log('[Lessons] rendering...');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" Syllabus\"), React.createElement(\"table\", {\n      id: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.renderAllLessonsTableHeaderHandler()), this.allLessonssHandler())));\n  }\n\n}\n\nexport default Lessons;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/ViewContent/Syllabus/MaxReact/Lessons.js"],"names":["React","Component","ErrorBoundary","student","Lesson","Lessons","constructor","props","state","clickToAddDelete","renderAllLessonsTableHeaderHandler","showLeftOverLessonsFromSyllabus","setState","ClickToAddDelete","header","Object","keys","lastLessonHeader","map","key","index","toUpperCase","allLessonssHandler","lessons","lesson","id","completion","clicked","event","changed","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Task from './Task/Task';\nimport ErrorBoundary from '../../../ErrorBoundary/ErrorBoundary';\nimport student from '../../../../containers/Student.css';\nimport Lesson from './Lesson/Lesson';\n\nclass Lessons extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    clickToAddDelete: null\n  };\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n  //rendering current lessons headers\n  renderAllLessonsTableHeaderHandler() {\n    let clickToAddDelete = null;\n\n    showLeftOverLessonsFromSyllabus\n      ? (clickToAddDelete = 'Click to schedule this lesson')\n      : (clickToAddDelete = 'Click to Delete Lesson');\n\n    if (this.props.showLeftOverLessonsFromSyllabus == false) {\n      this.setState({ ClickToAddDelete: 'Click to Delete Lesson' });\n    } else {\n      this.setState({ ClickToAddDelete: 'Click to schedule this lesson' });\n    }\n    let header = Object.keys(this.props.lastLessonHeader);\n\n    return header.map((key, index) => {\n      //console.log(`this is the key: (${key}) and the index: (${index})`);\n\n      if (key === 'id') {\n        return <th key={index}>{clickToAddDelete}</th>;\n      } else {\n        return <th key={index}>{key.toUpperCase()}</th>;\n      }\n\n      if (this.props.showLeftOverLessonsFromSyllabus == false) {\n        if (key === 'id') {\n          return <th key={index}>Click to Delete</th>;\n        } else {\n          return <th key={index}>{key.toUpperCase()}</th>;\n        }\n      } else {\n        if (key === 'id') {\n          return <th key={index}>Click to Delete</th>;\n        } else {\n          return <th key={index}>{key.toUpperCase()}</th>;\n        }\n      }\n    });\n  }\n\n  //rendering current lessons\n  allLessonssHandler() {\n    return this.props.lessons.map((lesson, index) => {\n      return (\n        <ErrorBoundary key={lesson.id}>\n          <Lesson\n            lesson={lesson.lesson}\n            completion={lesson.completion}\n            particularKey={lesson.id}\n            click={() => this.props.clicked(index)}\n            changed={event => this.props.changed(event, lesson.id)}\n          ></Lesson>\n        </ErrorBoundary>\n      );\n    });\n  }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Tasks] getSnapshotBeforeUpdate');\n  //   return { message: 'Snapshot' };\n  // }\n\n  // // componentWillUpdate() {\n  // //     return\n  // // }\n\n  // componentDidUpdate(prevProps, prevState, message) {\n  //   console.log('[Tasks] componentDidUpdate');\n  //   console.log(message);\n  // }\n\n  // componentWillUnmount() {\n  //   console.log('[Tasks.js] componentWillUnmount');\n  // }\n\n  render() {\n    console.log('[Lessons] rendering...');\n\n    return (\n      <div>\n        <h1 id=\"title\"> Syllabus</h1>\n        <table id=\"students\">\n          <tbody>\n            <tr>{this.renderAllLessonsTableHeaderHandler()}</tr>\n            {this.allLessonssHandler()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Lessons;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/UI/Modal/Modal.js\";\nimport React, { useContext } from 'react';\nimport StoreDataContext from '../../../context/StoreDataContext';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux'; //import Backdrop from '../Backdrop/Backdrop';\n\nconst Modal = props => {\n  const storeDataContext = useContext(StoreDataContext); // let displayModal = null;\n  // if (storeDataContext.contentChoice === '12') {\n  //   displayModal = (\n  //     <Aux>\n  //       <div\n  //         className={classes.Modal}\n  //         //bind style here to something dynamic, needs to be js object\n  //         //If props.show = true\n  //         // -transform to translateY(0)\n  //         // -which is the position defined in css,\n  //         style={{\n  //           //set transform property -> vh = viewport (slide it outside of the screen)\n  //           transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n  //           opacity: props.show ? '1' : '0' //is show true = opacity 100% if not then 0%\n  //         }}\n  //       >\n  //         {props.children}\n  //       </div>\n  //     </Aux>\n  //   );\n  // }\n\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, storeDataContext.contentChoice), React.createElement(\"div\", {\n    className: classes.Modal //bind style here to something dynamic, needs to be js object\n    //If props.show = true\n    // -transform to translateY(0)\n    // -which is the position defined in css,\n    //set transform property -> vh = viewport (slide it outside of the screen)\n    //is show true = opacity 100% if not then 0%\n    ,\n    style: {\n      transform: storeDataContext.contentChoice === '1' ? 'translateY(0)' : 'translateY(-100vh)',\n      opacity: storeDataContext.contentChoice === '1' ? '1' : '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.children));\n};\n\nexport default Modal;\n{\n  /* <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? '1' : '0'\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux> */\n}","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/UI/Modal/Modal.js"],"names":["React","useContext","StoreDataContext","classes","Aux","Modal","props","storeDataContext","contentChoice","transform","opacity","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB,C,CACA;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAMC,gBAAgB,GAAGN,UAAU,CAACC,gBAAD,CAAnC,CADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMK,gBAAgB,CAACC,aAAvB,CADF,EAEE;AACE,IAAA,SAAS,EAAEL,OAAO,CAACE,KADrB,CAEE;AACA;AACA;AACA;AACA;AACA;AAPF;AAQE,IAAA,KAAK,EAAE;AACLI,MAAAA,SAAS,EACPF,gBAAgB,CAACC,aAAjB,KAAmC,GAAnC,GACI,eADJ,GAEI,oBAJD;AAKLE,MAAAA,OAAO,EAAEH,gBAAgB,CAACC,aAAjB,KAAmC,GAAnC,GAAyC,GAAzC,GAA+C;AALnD,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBGF,KAAK,CAACK,QAhBT,CAFF,CADF;AAuBD,CA/CD;;AAiDA,eAAeN,KAAf;AAEA;AACE;;;;;;;;;;;;AAYD","sourcesContent":["import React, { useContext } from 'react';\nimport StoreDataContext from '../../../context/StoreDataContext';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux';\n//import Backdrop from '../Backdrop/Backdrop';\n\nconst Modal = props => {\n  const storeDataContext = useContext(StoreDataContext);\n  // let displayModal = null;\n  // if (storeDataContext.contentChoice === '12') {\n  //   displayModal = (\n  //     <Aux>\n  //       <div\n  //         className={classes.Modal}\n  //         //bind style here to something dynamic, needs to be js object\n  //         //If props.show = true\n  //         // -transform to translateY(0)\n  //         // -which is the position defined in css,\n\n  //         style={{\n  //           //set transform property -> vh = viewport (slide it outside of the screen)\n  //           transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n  //           opacity: props.show ? '1' : '0' //is show true = opacity 100% if not then 0%\n  //         }}\n  //       >\n  //         {props.children}\n  //       </div>\n  //     </Aux>\n  //   );\n  // }\n  return (\n    <Aux>\n      <div>{storeDataContext.contentChoice}</div>\n      <div\n        className={classes.Modal}\n        //bind style here to something dynamic, needs to be js object\n        //If props.show = true\n        // -transform to translateY(0)\n        // -which is the position defined in css,\n        //set transform property -> vh = viewport (slide it outside of the screen)\n        //is show true = opacity 100% if not then 0%\n        style={{\n          transform:\n            storeDataContext.contentChoice === '1'\n              ? 'translateY(0)'\n              : 'translateY(-100vh)',\n          opacity: storeDataContext.contentChoice === '1' ? '1' : '0'\n        }}\n      >\n        {props.children}\n      </div>\n    </Aux>\n  );\n};\n\nexport default Modal;\n\n{\n  /* <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? '1' : '0'\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux> */\n}\n"]},"metadata":{},"sourceType":"module"}
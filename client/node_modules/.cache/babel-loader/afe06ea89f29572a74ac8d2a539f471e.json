{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/src/AgendaView.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport AgendaResourceEvents from './AgendaResourceEvents';\n\nclass AgendaView extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const schedulerData = this.props.schedulerData;\n    const config = schedulerData.config;\n    const renderData = schedulerData.renderData;\n    let agendaResourceTableWidth = schedulerData.getResourceTableWidth(),\n        tableHeaderHeight = schedulerData.getTableHeaderHeight();\n    let resourceEventsList = renderData.map(item => {\n      return React.createElement(AgendaResourceEvents, Object.assign({}, this.props, {\n        resourceEvents: item,\n        key: item.slotId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    });\n    let resourceName = schedulerData.isEventPerspective ? config.taskName : config.resourceName;\n    let agendaViewHeader = config.agendaViewHeader;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"scheduler-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        height: tableHeaderHeight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        width: agendaResourceTableWidth\n      },\n      className: \"header3-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, resourceName), React.createElement(\"th\", {\n      className: \"header3-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, agendaViewHeader))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, resourceEventsList))));\n  }\n\n}\n\nAgendaView.propTypes = {\n  schedulerData: PropTypes.object.isRequired,\n  subtitleGetter: PropTypes.func,\n  eventItemClick: PropTypes.func,\n  viewEventClick: PropTypes.func,\n  viewEventText: PropTypes.string,\n  viewEvent2Click: PropTypes.func,\n  viewEvent2Text: PropTypes.string,\n  slotClickedFunc: PropTypes.func\n};\nexport default AgendaView;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/src/AgendaView.js"],"names":["React","Component","PropTypes","AgendaResourceEvents","AgendaView","constructor","props","render","schedulerData","config","renderData","agendaResourceTableWidth","getResourceTableWidth","tableHeaderHeight","getTableHeaderHeight","resourceEventsList","map","item","slotId","resourceName","isEventPerspective","taskName","agendaViewHeader","height","width","propTypes","object","isRequired","subtitleGetter","func","eventItemClick","viewEventClick","viewEventText","string","viewEvent2Click","viewEvent2Text","slotClickedFunc"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAaDC,EAAAA,MAAM,GAAG;AAAA,UAEEC,aAFF,GAEmB,KAAKF,KAFxB,CAEEE,aAFF;AAAA,UAGEC,MAHF,GAGYD,aAHZ,CAGEC,MAHF;AAAA,UAIEC,UAJF,GAIgBF,aAJhB,CAIEE,UAJF;AAKL,QAAIC,wBAAwB,GAAGH,aAAa,CAACI,qBAAd,EAA/B;AAAA,QAAsEC,iBAAiB,GAAGL,aAAa,CAACM,oBAAd,EAA1F;AACA,QAAIC,kBAAkB,GAAGL,UAAU,CAACM,GAAX,CAAgBC,IAAD,IAAU;AAC9C,aAAO,oBAAC,oBAAD,oBACC,KAAKX,KADN;AAEH,QAAA,cAAc,EAAEW,IAFb;AAGH,QAAA,GAAG,EAAEA,IAAI,CAACC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAIH,KALwB,CAAzB;AAMA,QAAIC,YAAY,GAAGX,aAAa,CAACY,kBAAd,GAAmCX,MAAM,CAACY,QAA1C,GAAqDZ,MAAM,CAACU,YAA/E;AACA,QAAIG,gBAAgB,GAAGb,MAAM,CAACa,gBAA9B;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAEV;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAE;AAACW,QAAAA,KAAK,EAAEb;AAAR,OAAX;AAA8C,MAAA,SAAS,EAAC,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwEQ,YAAxE,CADJ,EAEI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BG,gBAA9B,CAFJ,CADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,kBADL,CAPJ,CADJ,CADJ,CADJ;AAiBH;;AAhD8B;;AAA7BX,U,CAKKqB,S,GAAY;AACfjB,EAAAA,aAAa,EAAEN,SAAS,CAACwB,MAAV,CAAiBC,UADjB;AAEfC,EAAAA,cAAc,EAAE1B,SAAS,CAAC2B,IAFX;AAGfC,EAAAA,cAAc,EAAE5B,SAAS,CAAC2B,IAHX;AAIfE,EAAAA,cAAc,EAAE7B,SAAS,CAAC2B,IAJX;AAKfG,EAAAA,aAAa,EAAC9B,SAAS,CAAC+B,MALT;AAMfC,EAAAA,eAAe,EAAEhC,SAAS,CAAC2B,IANZ;AAOfM,EAAAA,cAAc,EAAEjC,SAAS,CAAC+B,MAPX;AAQfG,EAAAA,eAAe,EAAElC,SAAS,CAAC2B;AARZ,C;AA8CvB,eAAezB,UAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\nimport AgendaResourceEvents from './AgendaResourceEvents'\r\n\r\nclass AgendaView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n        subtitleGetter: PropTypes.func,\r\n        eventItemClick: PropTypes.func,\r\n        viewEventClick: PropTypes.func,\r\n        viewEventText:PropTypes.string,\r\n        viewEvent2Click: PropTypes.func,\r\n        viewEvent2Text: PropTypes.string,\r\n        slotClickedFunc: PropTypes.func,\r\n    }\r\n\r\n    render() {\r\n\r\n        const {schedulerData} = this.props;\r\n        const {config} = schedulerData;\r\n        const {renderData} = schedulerData;\r\n        let agendaResourceTableWidth = schedulerData.getResourceTableWidth(), tableHeaderHeight = schedulerData.getTableHeaderHeight();\r\n        let resourceEventsList = renderData.map((item) => {\r\n            return <AgendaResourceEvents\r\n                {...this.props}\r\n                resourceEvents={item}\r\n                key={item.slotId} />\r\n        });\r\n        let resourceName = schedulerData.isEventPerspective ? config.taskName : config.resourceName;\r\n        let agendaViewHeader = config.agendaViewHeader;\r\n\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    <table className=\"scheduler-table\">\r\n                        <thead>\r\n                            <tr style={{height: tableHeaderHeight}}>\r\n                                <th style={{width: agendaResourceTableWidth}} className=\"header3-text\">{resourceName}</th>\r\n                                <th className=\"header3-text\">{agendaViewHeader}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {resourceEventsList}\r\n                        </tbody>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AgendaView"]},"metadata":{},"sourceType":"module"}
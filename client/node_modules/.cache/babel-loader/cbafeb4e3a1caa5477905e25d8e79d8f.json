{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Cockpit.js\";\nimport React, { useEffect } from 'react'; //import rocky from '../../containers/App.module.css'\n\nimport classNames from 'classnames';\nimport classes from './Cockpit.module.css';\n\nconst Cockpit = props => {\n  useEffect(() => {\n    //can do anything that componentDidUpdate can do\n    //can send http request here\n    console.log('[Cockpit.js] useffect'); //getting rid of timer\n    // const timer = setTimeout(() => {\n    //   alert('Saved data to cloud');\n    // }, 1000);\n\n    return () => {\n      //clearTimeout(timer);\n      console.log('[Cockpit.js] cleanup work in useEffect');\n    };\n  });\n  /*\n    setTimeout(() => {\n      alert('Saved data to cloud')\n    }, 1000);\n    return () => { //don't have to have a return statement\n      console.log('[Cockpit.js] cleanup work in useEffect')\n    }\n  }, []); \n  */\n  //if 2nd argument [props.tasks] it doesn't involve tasks -> it won't run this again\n  //[props.tasks]\n\n  useEffect(() => {\n    console.log('[Cockpit.js] 2nd useEffect');\n    return () => {\n      console.log('[Cockpit.js] cleanup work in 2nd UseEffect');\n    };\n  }); //styling the 'Things to Do' using strings for classnames\n\n  const assignedClasses = [];\n  let btnClass = '';\n\n  switch (props.tasksLength) {\n    case 3:\n      assignedClasses.push('bold', 'red');\n      break;\n\n    case 2:\n      assignedClasses.push('red');\n      break;\n\n    case 1:\n      assignedClasses.push('orange');\n      break;\n\n    default:\n      assignedClasses.push('green');\n      break;\n  } //console.log(assignedClasses[0])\n  //add multiple classes for <p> w/ strings\n  //const classesFinal = classes.join(' ')\n\n\n  const classesFinal = 'rocky.' + assignedClasses; //console.log(classesFinal)\n  //\n  //console.log(`This is classesFinal ${classesFinal}`)\n\n  const cockpitBootstrap = React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.specialbtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block dropdown-toggle\",\n    type: \"button\",\n    \"data-toggle\": \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"2: View Options\"), React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"dropdown-item\",\n    className: classes.specialbtn,\n    onClick: props.clicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"All Tasks\"), React.createElement(\"a\", {\n    className: \"dropdown-item\",\n    className: classes.specialbtn,\n    onClick: props.todayClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Tasks Today\"))))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.specialbtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-info btn-block dropdown-toggle  \",\n    type: \"button\",\n    \"data-toggle\": \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Task Creation\"), React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"dropdown-item\",\n    href: \"3_2_buttons.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Syllabus\"), React.createElement(\"a\", {\n    className: \"dropdown-item\",\n    href: \"3_3_navbar.html\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Errands\"))))))); //{classes.Cockpit}\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, props.title), React.createElement(\"p\", {\n    className: classNames({\n      [classes[assignedClasses[0]]]: true,\n      [classes[assignedClasses[1]]]: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Things to Do!\"), cockpitBootstrap, React.createElement(\"button\", {\n    className: classes.specialbtn,\n    onClick: props.clicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Show Task\"), React.createElement(\"button\", {\n    className: classes.specialbtn,\n    onClick: props.todayClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Show Today Schedule\")));\n}; //export default Cockpit;\n\n\nexport default React.memo(Cockpit); // </div>\n\n/* <React.Fragment>\n        <div>\n\n      \n        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        <label class=\"btn btn-secondary active\">\n          <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Active\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Radio\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Radio\n        </label>\n      </div>\n      </div>\n      </React.Fragment>     */\n\n/* Radio Buttons\n<React.Fragment>\n            <div>\n                <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <label class=\"btn btn-secondary active\">\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Today\n                    </label>\n                    <label class=\"btn btn-secondary\">\n                        <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Week\n                        </label>\n                <label class=\"btn btn-secondary\">\n                    <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Month\n                    </label>\n                </div>\n            </div>\n        </React.Fragment> \n*/","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Cockpit.js"],"names":["React","useEffect","classNames","classes","Cockpit","props","console","log","assignedClasses","btnClass","tasksLength","push","classesFinal","cockpitBootstrap","specialbtn","clicked","todayClicked","title","memo"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n//import rocky from '../../containers/App.module.css'\nimport classNames from 'classnames';\nimport classes from './Cockpit.module.css';\n\nconst Cockpit = props => {\n  useEffect(() => {\n    //can do anything that componentDidUpdate can do\n    //can send http request here\n    console.log('[Cockpit.js] useffect');\n\n    //getting rid of timer\n    // const timer = setTimeout(() => {\n    //   alert('Saved data to cloud');\n    // }, 1000);\n\n    return () => {\n      //clearTimeout(timer);\n      console.log('[Cockpit.js] cleanup work in useEffect');\n    };\n  });\n\n  /*\n    setTimeout(() => {\n      alert('Saved data to cloud')\n    }, 1000);\n    return () => { //don't have to have a return statement\n      console.log('[Cockpit.js] cleanup work in useEffect')\n    }\n  }, []); \n  */\n  //if 2nd argument [props.tasks] it doesn't involve tasks -> it won't run this again\n  //[props.tasks]\n\n  useEffect(() => {\n    console.log('[Cockpit.js] 2nd useEffect');\n    return () => {\n      console.log('[Cockpit.js] cleanup work in 2nd UseEffect');\n    };\n  });\n\n  //styling the 'Things to Do' using strings for classnames\n  const assignedClasses = [];\n  let btnClass = '';\n\n  switch (props.tasksLength) {\n    case 3:\n      assignedClasses.push('bold', 'red');\n      break;\n    case 2:\n      assignedClasses.push('red');\n      break;\n    case 1:\n      assignedClasses.push('orange');\n      break;\n    default:\n      assignedClasses.push('green');\n      break;\n  }\n\n  //console.log(assignedClasses[0])\n  //add multiple classes for <p> w/ strings\n  //const classesFinal = classes.join(' ')\n  const classesFinal = 'rocky.' + assignedClasses;\n\n  //console.log(classesFinal)\n  //\n  //console.log(`This is classesFinal ${classesFinal}`)\n  const cockpitBootstrap = (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <div className={classes.specialbtn}>\n            <div className=\"dropdown\">\n              <button\n                className=\"btn btn-primary btn-block dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n              >\n                2: View Options\n              </button>\n\n              <div className=\"dropdown-menu\">\n                <a\n                  className=\"dropdown-item\"\n                  className={classes.specialbtn}\n                  onClick={props.clicked}\n                >\n                  All Tasks\n                </a>\n\n                <a\n                  className=\"dropdown-item\"\n                  className={classes.specialbtn}\n                  onClick={props.todayClicked}\n                >\n                  Tasks Today\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-6\">\n          <div className=\"dropdown\">\n            <div className={classes.specialbtn}>\n              <button\n                className=\"btn btn-info btn-block dropdown-toggle  \"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n              >\n                Task Creation\n              </button>\n\n              <div className=\"dropdown-menu\">\n                <a className=\"dropdown-item\" href=\"3_2_buttons.html\">\n                  Syllabus\n                </a>\n                <a className=\"dropdown-item\" href=\"3_3_navbar.html\">\n                  Errands\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  //{classes.Cockpit}\n  return (\n    <React.Fragment>\n      <div className=\"\">\n        <h1>{props.title}</h1>\n        <p\n          className={classNames({\n            [classes[assignedClasses[0]]]: true,\n            [classes[assignedClasses[1]]]: true\n          })}\n        >\n          Things to Do!\n        </p>\n\n        {cockpitBootstrap}\n        <button className={classes.specialbtn} onClick={props.clicked}>\n          Show Task\n        </button>\n\n        <button className={classes.specialbtn} onClick={props.todayClicked}>\n          Show Today Schedule\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n//export default Cockpit;\n\nexport default React.memo(Cockpit);\n\n// </div>\n/* <React.Fragment>\n        <div>\n\n      \n        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        <label class=\"btn btn-secondary active\">\n          <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Active\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Radio\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Radio\n        </label>\n      </div>\n      </div>\n      </React.Fragment>     */\n\n/* Radio Buttons\n<React.Fragment>\n            <div>\n                <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <label class=\"btn btn-secondary active\">\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Today\n                    </label>\n                    <label class=\"btn btn-secondary\">\n                        <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Week\n                        </label>\n                <label class=\"btn btn-secondary\">\n                    <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Month\n                    </label>\n                </div>\n            </div>\n        </React.Fragment> \n*/\n"]},"metadata":{},"sourceType":"module"}
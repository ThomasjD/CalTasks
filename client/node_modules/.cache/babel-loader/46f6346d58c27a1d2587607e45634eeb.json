{"ast":null,"code":"import _defineProperty from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/Store/SyllabusData.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport Store from './Store';\nimport EventsData from './EventsData';\n\nclass Syllabus extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      maxReact: [{\n        id: 'xvlwil',\n        lesson: '90. (for props Changes)',\n        completion: false\n      }, {\n        id: 'bbbskk',\n        lesson: '91. (for state Changes)',\n        completion: false\n      }, {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }],\n      maxReactWorkLeft: [{\n        lesson: '93. Controlling the useEffect() Behavior',\n        id: 'this.state.contentChoice.lesson.bind(this)',\n        completion: false\n      }, {\n        lesson: '94. Cleaning up with Lifecycle Hooks & useEffect()',\n        id: '94. Cleaning up with Lifecycle Hooks & useEffect()',\n        completion: false\n      }, {\n        lesson: '95. Cleanup Work with useEffect() - Ex',\n        id: '95. Cleanup Work with useEffect() - Ex',\n        completion: false\n      }],\n      minReact: [{\n        id: 'xvldddwil',\n        lesson: '936670. (for props Changes)',\n        completion: false\n      }, {\n        id: 'bbbnnskk',\n        lesson: '93531. (for state Changes)',\n        completion: false\n      }, {\n        id: 'kjhsdhck2',\n        lesson: '9100. Using useEffect() in Functional Components ',\n        completion: false\n      }],\n      lastLessonHeader: [],\n      crunk: 'Hootie and teh blowfish',\n      showLeftOverLessonsFromSyllabus: false,\n      TasksData: 'd',\n      nothing: 'nothing',\n      showData2: false\n    };\n\n    this.syllabusDataHandler = () => {\n      let sendBacKminReact = this.state.minReact;\n      console.log(sendBacKminReact);\n    };\n\n    this.lastLessonHeaderHandler = () => {\n      if (this.state.maxReact.length != 0) {\n        this.setState({\n          lastLessonHeader: this.state.maxReact[0]\n        });\n      } else {\n        this.setState({\n          lastLessonHeader: this.state.lastLessonHeader\n        });\n      }\n\n      console.log(JSON.stringify(this.state.lastLessonHeader));\n      console.log(this.state.lastLessonHeader);\n    };\n\n    this.assignLessonFromSyllabus = () => {\n      this.setState({\n        showLeftOverLessonsFromSyllabus: true\n      });\n\n      if (this.state.maxReact.length != 0) {\n        this.setState({\n          lastLessonHeader: this.state.maxReact[0]\n        });\n      } else {\n        this.setState({\n          lastLessonHeader: this.state.lastLessonHeader\n        });\n      }\n    };\n\n    this.deleteLessonFromAssignedSyllabusHandler = (event, taskIndex) => {\n      alert('Are you sure you want to delete this Lesson?');\n      let currentScheduledLessons = [...this.state.maxReact];\n      currentScheduledLessons.splice(taskIndex, 1);\n      this.setState({\n        maxReact: currentScheduledLessons\n      });\n    };\n\n    this.deleteLessonFromOriginalSyllabusHandler = (event, taskIndex) => {\n      alert('Are you sure you want to add this lesson?');\n      let currentOriginalLessons = [...this.state.maxReactWorkLeft];\n      currentOriginalLessons.splice(taskIndex, 1);\n      this.setState({\n        maxReactWorkLeft: currentOriginalLessons\n      });\n    };\n\n    this.addLessonFromOriginalSyllabusHandler = taskIndex => {\n      let currentOriginalLessons = [...this.state.maxReactWorkLeft];\n      let lessonToAdd = currentOriginalLessons[taskIndex]; //add to maxReact the picked lesson\n\n      console.log('I am inside addNewLesonHandler');\n      let currentMaxReactSyllabus = [...this.state.maxReact];\n      currentMaxReactSyllabus.push(lessonToAdd); //currentMaxReactSyllabus.push(newLesson);\n\n      console.log(currentMaxReactSyllabus);\n      let currentShowLeftOverLessonsFromSyllabus = this.state.showLeftOverLessonsFromSyllabus; //Showing current left over Lessons from Syllabus (after addition/deletion)\n\n      this.setState({\n        showLeftOverLessonsFromSyllabus: !currentShowLeftOverLessonsFromSyllabus\n      }); //adding to redefining what maxReact is w/ new lesson\n\n      this.setState({\n        maxReact: currentMaxReactSyllabus\n      });\n      this.deleteLessonFromOriginalSyllabusHandler(taskIndex);\n    };\n\n    this.lessonChangeHandler = (event, taskChangeId) => {\n      const foundTaskId = this.state.maxReact.findIndex(currentId => {\n        return currentId.id === taskChangeId;\n      }); //createnew task item to put into array\n\n      const updatedLessons = _objectSpread({}, this.state.maxReact[foundTaskId]); //using updated values to define the lesson of the particular pulled out lesson\n\n\n      updatedLessons.lesson = event.target.value; //pull out of states maxReact array\n\n      const lessons = [...this.state.maxReact]; //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n\n      lessons[foundTaskId] = updatedLessons; //final update of lessons\n\n      this.setState({\n        maxReact: lessons\n      });\n    };\n\n    this.leftOverLessonChangeHandler = (event, taskChangeId) => {\n      const foundTaskId = this.state.maxReactWorkLeft.findIndex(currentId => {\n        return currentId.id === taskChangeId;\n      }); //createnew task item to put into array\n\n      const updatedLessons = _objectSpread({}, this.state.maxReactWorkLeft[foundTaskId]); //using updated values to define the lesson of the particular pulled out lesson\n\n\n      updatedLessons.lesson = event.target.value; //pull out of states maxReact array\n\n      const lessons = [...this.state.maxReactWorkLeft]; //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n\n      lessons[foundTaskId] = updatedLessons; //final update of lessons\n\n      this.setState({\n        maxReactWorkLeft: lessons\n      });\n    };\n\n    this.showLeftOverLessonsFromSyllabus = () => {\n      this.setState({\n        showLeftOverLessonsFromSyllabus: true\n      });\n      this.lastLessonHeaderHandler();\n    };\n\n    this.TasksDataHandler = (a, word) => {\n      // console.log(word);\n      // let TasksData = word;\n      this.setState({\n        TasksData: word\n      });\n    };\n\n    this.TasksDataHandler2 = () => {\n      this.setState({\n        showData2: true\n      });\n    };\n  }\n\n  render() {\n    let displayWord = null; //this.state.TasksData ? (displayWord = <p>{this.state.TasksData}</p>) : null;\n\n    if (this.state.showData2 === true) {\n      displayWord = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, this.state.TasksData.word);\n    } // let triggerWord = null\n    // this.state.showData2? triggerWord = (\n    // )\n    //data={(event, word) => this.setState({ TasksData: word })}\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(TasksData, {\n      data: (e, b) => this.TasksDataHandler(e, b),\n      showData2: this.state.showData2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(RightCockpit, {\n      displayWord: displayWord,\n      dataHandler2: this.TasksDataHandler2,\n      showData2: this.state.showData2,\n      data2: this.state.TasksData.word,\n      syllabusWord: this.state.TasksData.word,\n      syllabusEverything: this.state,\n      dataHandler: this.TasksDataHandler2,\n      lastLessonHeaderHandler: event => this.lastLessonHeaderHandler(event),\n      assignLessonFromSyllabus: event => this.assignLessonFromSyllabus(event),\n      deleteLessonFromAssignedSyllabusHandler: event => this.deleteLessonFromAssignedSyllabusHandler(event),\n      deleteLessonFromOriginalSyllabusHandler: event => this.deleteLessonFromOriginalSyllabusHandler(event),\n      addLessonFromOriginalSyllabusHandler: event => this.addLessonFromOriginalSyllabusHandler(event),\n      lessonChangeHandler: (event, taskIndex) => this.lessonChangeHandler(event, taskIndex),\n      showLeftOverLessonsFromSyllabus: event => this.showLeftOverLessonsFromSyllabus(event),\n      leftOverLessonChangeHandler: event => this.leftOverLessonChangeHandler(event),\n      data: this.state.TasksData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Syllabus;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/Store/SyllabusData.js"],"names":["React","Component","RightCockpit","TasksData","Store","EventsData","Syllabus","state","maxReact","id","lesson","completion","maxReactWorkLeft","minReact","lastLessonHeader","crunk","showLeftOverLessonsFromSyllabus","nothing","showData2","syllabusDataHandler","sendBacKminReact","console","log","lastLessonHeaderHandler","length","setState","JSON","stringify","assignLessonFromSyllabus","deleteLessonFromAssignedSyllabusHandler","event","taskIndex","alert","currentScheduledLessons","splice","deleteLessonFromOriginalSyllabusHandler","currentOriginalLessons","addLessonFromOriginalSyllabusHandler","lessonToAdd","currentMaxReactSyllabus","push","currentShowLeftOverLessonsFromSyllabus","lessonChangeHandler","taskChangeId","foundTaskId","findIndex","currentId","updatedLessons","target","value","lessons","leftOverLessonChangeHandler","TasksDataHandler","a","word","TasksDataHandler2","render","displayWord","e","b"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport Store from './Store';\nimport EventsData from './EventsData';\nclass Syllabus extends Component {\n  state = {\n    maxReact: [\n      { id: 'xvlwil', lesson: '90. (for props Changes)', completion: false },\n      { id: 'bbbskk', lesson: '91. (for state Changes)', completion: false },\n      {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }\n    ],\n    maxReactWorkLeft: [\n      {\n        lesson: '93. Controlling the useEffect() Behavior',\n        id: 'this.state.contentChoice.lesson.bind(this)',\n        completion: false\n      },\n      {\n        lesson: '94. Cleaning up with Lifecycle Hooks & useEffect()',\n        id: '94. Cleaning up with Lifecycle Hooks & useEffect()',\n        completion: false\n      },\n      {\n        lesson: '95. Cleanup Work with useEffect() - Ex',\n        id: '95. Cleanup Work with useEffect() - Ex',\n        completion: false\n      }\n    ],\n    minReact: [\n      {\n        id: 'xvldddwil',\n        lesson: '936670. (for props Changes)',\n        completion: false\n      },\n      {\n        id: 'bbbnnskk',\n        lesson: '93531. (for state Changes)',\n        completion: false\n      },\n      {\n        id: 'kjhsdhck2',\n        lesson: '9100. Using useEffect() in Functional Components ',\n        completion: false\n      }\n    ],\n    lastLessonHeader: [],\n    crunk: 'Hootie and teh blowfish',\n    showLeftOverLessonsFromSyllabus: false,\n    TasksData: 'd',\n    nothing: 'nothing',\n    showData2: false\n  };\n  syllabusDataHandler = () => {\n    let sendBacKminReact = this.state.minReact;\n    console.log(sendBacKminReact);\n  };\n  lastLessonHeaderHandler = () => {\n    if (this.state.maxReact.length != 0) {\n      this.setState({ lastLessonHeader: this.state.maxReact[0] });\n    } else {\n      this.setState({ lastLessonHeader: this.state.lastLessonHeader });\n    }\n\n    console.log(JSON.stringify(this.state.lastLessonHeader));\n    console.log(this.state.lastLessonHeader);\n  };\n\n  assignLessonFromSyllabus = () => {\n    this.setState({ showLeftOverLessonsFromSyllabus: true });\n\n    if (this.state.maxReact.length != 0) {\n      this.setState({ lastLessonHeader: this.state.maxReact[0] });\n    } else {\n      this.setState({ lastLessonHeader: this.state.lastLessonHeader });\n    }\n  };\n\n  deleteLessonFromAssignedSyllabusHandler = (event, taskIndex) => {\n    alert('Are you sure you want to delete this Lesson?');\n\n    let currentScheduledLessons = [...this.state.maxReact];\n    currentScheduledLessons.splice(taskIndex, 1);\n    this.setState({ maxReact: currentScheduledLessons });\n  };\n\n  deleteLessonFromOriginalSyllabusHandler = (event, taskIndex) => {\n    alert('Are you sure you want to add this lesson?');\n\n    let currentOriginalLessons = [...this.state.maxReactWorkLeft];\n\n    currentOriginalLessons.splice(taskIndex, 1);\n\n    this.setState({ maxReactWorkLeft: currentOriginalLessons });\n  };\n\n  addLessonFromOriginalSyllabusHandler = taskIndex => {\n    let currentOriginalLessons = [...this.state.maxReactWorkLeft];\n    let lessonToAdd = currentOriginalLessons[taskIndex];\n\n    //add to maxReact the picked lesson\n    console.log('I am inside addNewLesonHandler');\n    let currentMaxReactSyllabus = [...this.state.maxReact];\n    currentMaxReactSyllabus.push(lessonToAdd);\n\n    //currentMaxReactSyllabus.push(newLesson);\n    console.log(currentMaxReactSyllabus);\n    let currentShowLeftOverLessonsFromSyllabus = this.state\n      .showLeftOverLessonsFromSyllabus;\n\n    //Showing current left over Lessons from Syllabus (after addition/deletion)\n    this.setState({\n      showLeftOverLessonsFromSyllabus: !currentShowLeftOverLessonsFromSyllabus\n    });\n    //adding to redefining what maxReact is w/ new lesson\n    this.setState({ maxReact: currentMaxReactSyllabus });\n\n    this.deleteLessonFromOriginalSyllabusHandler(taskIndex);\n  };\n\n  lessonChangeHandler = (event, taskChangeId) => {\n    const foundTaskId = this.state.maxReact.findIndex(currentId => {\n      return currentId.id === taskChangeId;\n    });\n\n    //createnew task item to put into array\n    const updatedLessons = { ...this.state.maxReact[foundTaskId] };\n\n    //using updated values to define the lesson of the particular pulled out lesson\n    updatedLessons.lesson = event.target.value;\n\n    //pull out of states maxReact array\n    const lessons = [...this.state.maxReact];\n\n    //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n    lessons[foundTaskId] = updatedLessons;\n\n    //final update of lessons\n    this.setState({ maxReact: lessons });\n  };\n\n  leftOverLessonChangeHandler = (event, taskChangeId) => {\n    const foundTaskId = this.state.maxReactWorkLeft.findIndex(currentId => {\n      return currentId.id === taskChangeId;\n    });\n\n    //createnew task item to put into array\n    const updatedLessons = { ...this.state.maxReactWorkLeft[foundTaskId] };\n\n    //using updated values to define the lesson of the particular pulled out lesson\n    updatedLessons.lesson = event.target.value;\n\n    //pull out of states maxReact array\n    const lessons = [...this.state.maxReactWorkLeft];\n\n    //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n    lessons[foundTaskId] = updatedLessons;\n\n    //final update of lessons\n    this.setState({ maxReactWorkLeft: lessons });\n  };\n  showLeftOverLessonsFromSyllabus = () => {\n    this.setState({ showLeftOverLessonsFromSyllabus: true });\n    this.lastLessonHeaderHandler();\n  };\n  TasksDataHandler = (a, word) => {\n    // console.log(word);\n    // let TasksData = word;\n    this.setState({ TasksData: word });\n  };\n  TasksDataHandler2 = () => {\n    this.setState({ showData2: true });\n  };\n\n  render() {\n    let displayWord = null;\n    //this.state.TasksData ? (displayWord = <p>{this.state.TasksData}</p>) : null;\n    if (this.state.showData2 === true) {\n      displayWord = <p>{this.state.TasksData.word}</p>;\n    }\n\n    // let triggerWord = null\n    // this.state.showData2? triggerWord = (\n\n    // )\n    //data={(event, word) => this.setState({ TasksData: word })}\n    return (\n      <div>\n        <TasksData\n          data={(e, b) => this.TasksDataHandler(e, b)}\n          showData2={this.state.showData2}\n        ></TasksData>\n\n        <RightCockpit\n          displayWord={displayWord}\n          dataHandler2={this.TasksDataHandler2}\n          showData2={this.state.showData2}\n          data2={this.state.TasksData.word}\n          syllabusWord={this.state.TasksData.word}\n          syllabusEverything={this.state}\n          dataHandler={this.TasksDataHandler2}\n          lastLessonHeaderHandler={event => this.lastLessonHeaderHandler(event)}\n          assignLessonFromSyllabus={event =>\n            this.assignLessonFromSyllabus(event)\n          }\n          deleteLessonFromAssignedSyllabusHandler={event =>\n            this.deleteLessonFromAssignedSyllabusHandler(event)\n          }\n          deleteLessonFromOriginalSyllabusHandler={event =>\n            this.deleteLessonFromOriginalSyllabusHandler(event)\n          }\n          addLessonFromOriginalSyllabusHandler={event =>\n            this.addLessonFromOriginalSyllabusHandler(event)\n          }\n          lessonChangeHandler={(event, taskIndex) =>\n            this.lessonChangeHandler(event, taskIndex)\n          }\n          showLeftOverLessonsFromSyllabus={event =>\n            this.showLeftOverLessonsFromSyllabus(event)\n          }\n          leftOverLessonChangeHandler={event =>\n            this.leftOverLessonChangeHandler(event)\n          }\n          data={this.state.TasksData}\n        ></RightCockpit>\n      </div>\n    );\n  }\n}\n\nexport default Syllabus;\n"]},"metadata":{},"sourceType":"module"}
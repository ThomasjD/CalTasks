{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/Template/overview/Chart with Zoom.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass ChartWithZoom extends Component {\n  constructor() {\n    super();\n    this.generateDataPoints = this.generateDataPoints.bind(this);\n  }\n\n  generateDataPoints(noOfDps) {\n    var xVal = 1,\n        yVal = 100;\n    var dps = [];\n\n    for (var i = 0; i < noOfDps; i++) {\n      yVal = yVal + Math.round(5 + Math.random() * (-5 - 5));\n      dps.push({\n        x: xVal,\n        y: yVal\n      });\n      xVal++;\n    }\n\n    return dps;\n  }\n\n  render() {\n    const options = {\n      theme: \"light2\",\n      // \"light1\", \"dark1\", \"dark2\"\n      animationEnabled: true,\n      zoomEnabled: true,\n      title: {\n        text: \"Try Zooming and Panning\"\n      },\n      axisY: {\n        includeZero: false\n      },\n      data: [{\n        type: \"area\",\n        dataPoints: this.generateDataPoints(500)\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: \"ChartWithZoom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"React Line Chart With Zooming / Panning\"), React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChartWithZoom;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/Template/overview/Chart with Zoom.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","ChartWithZoom","constructor","generateDataPoints","bind","noOfDps","xVal","yVal","dps","i","Math","round","random","push","x","y","render","options","theme","animationEnabled","zoomEnabled","title","text","axisY","includeZero","data","type","dataPoints"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACnCI,EAAAA,WAAW,GAAG;AACf;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA;;AAEDD,EAAAA,kBAAkB,CAACE,OAAD,EAAU;AAC3B,QAAIC,IAAI,GAAG,CAAX;AAAA,QAAcC,IAAI,GAAG,GAArB;AACA,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,OAAnB,EAA4BI,CAAC,EAA7B,EAAiC;AAChCF,MAAAA,IAAI,GAAGA,IAAI,GAAIG,IAAI,CAACC,KAAL,CAAW,IAAID,IAAI,CAACE,MAAL,MAAgB,CAAC,CAAD,GAAG,CAAnB,CAAf,CAAf;AACAJ,MAAAA,GAAG,CAACK,IAAJ,CAAS;AAACC,QAAAA,CAAC,EAAER,IAAJ;AAASS,QAAAA,CAAC,EAAER;AAAZ,OAAT;AACAD,MAAAA,IAAI;AACJ;;AACD,WAAOE,GAAP;AACA;;AAEDQ,EAAAA,MAAM,GAAG;AACR,UAAMC,OAAO,GAAG;AACfC,MAAAA,KAAK,EAAE,QADQ;AACE;AACjBC,MAAAA,gBAAgB,EAAE,IAFH;AAGfC,MAAAA,WAAW,EAAE,IAHE;AAIfC,MAAAA,KAAK,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OAJQ;AAOfC,MAAAA,KAAK,EAAE;AACNC,QAAAA,WAAW,EAAE;AADP,OAPQ;AAUfC,MAAAA,IAAI,EAAE,CAAC;AACNC,QAAAA,IAAI,EAAE,MADA;AAENC,QAAAA,UAAU,EAAE,KAAKxB,kBAAL,CAAwB,GAAxB;AAFN,OAAD;AAVS,KAAhB;AAeA,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADA,EAEA,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAIc;AAC1B;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAQA;;AAzCoC;;AA2CtC,eAAehB,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CanvasJSReact from '../../assets/canvasjs.react';\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n \r\nclass ChartWithZoom extends Component {\r\n  \tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.generateDataPoints = this.generateDataPoints.bind(this);\r\n\t}\r\n\t\r\n\tgenerateDataPoints(noOfDps) {\r\n\t\tvar xVal = 1, yVal = 100;\r\n\t\tvar dps = [];\r\n\t\tfor(var i = 0; i < noOfDps; i++) {\r\n\t\t\tyVal = yVal +  Math.round(5 + Math.random() *(-5-5));\r\n\t\t\tdps.push({x: xVal,y: yVal});\t\r\n\t\t\txVal++;\r\n\t\t}\r\n\t\treturn dps;\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst options = {\r\n\t\t\ttheme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\r\n\t\t\tanimationEnabled: true,\r\n\t\t\tzoomEnabled: true,\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: \"Try Zooming and Panning\"\r\n\t\t\t},\r\n\t\t\taxisY: {\r\n\t\t\t\tincludeZero: false\r\n\t\t\t},\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"area\",\r\n\t\t\t\tdataPoints: this.generateDataPoints(500)\r\n\t\t\t}]\r\n\t\t}\r\n\t\treturn (\r\n\t\t  <div className=\"ChartWithZoom\">\r\n\t\t\t\t<h1>React Line Chart With Zooming / Panning</h1>\r\n\t\t\t\t<CanvasJSChart options = {options} \r\n\t\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t\t/>\r\n\t\t  </div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ChartWithZoom;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/RightCockpit/DatePicker.js\";\n// import React, { useState } from 'react';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// //import moment from 'react-moment';\n// import { compareAsc, format } from 'date-fns';\n// const DatePickerComp = props => {\n//   const [startDate, setStartDate] = useState(new Date());\n//   //const [finishTime, setFinishTime] = useState(new Date());\n//   //let Sunday = moment(startDate).format('MMMM Do YYYY, h:mm:ss a');\n//   //let Sunday = format(startDate, 'MM/dd/yyyy, hh:mm:ss a');\n//   //onsole.log(JSON.stringify(Sunday));\n//   const startDateTimeHandler = date => {\n//     setStartDate(date);\n//     //props.startDateTimeHandler();\n//     //alert(`startDateTime: ${startDate}`);\n//     props.startDateTimeHandler(startDate);\n//     alert(`inside startDateTimeHandler --> startDateTime: ${startDate}`);\n//   };\n//   const handleSubmit = () => {\n//     props.finishTimeHandler(startDate);\n//   };\n//   // const finishTimeHandler = startDate => {\n//   //   setFinishTime(startDate, startDate => props.finishTimeHandler(startDate));\n//   //   console.log(`finishDateTime: ${finishTime}`);\n//   // };\n//   //console.log(`finishTime: ${finishTime}`);\n//   // {\n//   //   \"name\": \"State\",\n//   //   \"value\": \"Wed Jan 08 2020 19:45:00 GMT-0500 (Colombia Standard Time)\",\n//   //   \"subHooks\": []\n//   // }\n//   const startDateTime = (\n//     <React.Fragment>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label>Select Date: </label>\n//           <DatePicker\n//             selected={startDate}\n//             onChange={date => startDateTimeHandler(date)}\n//             name=\"startDate\"\n//             dateFormat=\"MM/dd/yyyy\"\n//             //locale=\"pt-BR\"\n//             showTimeSelect\n//             timeFormat=\"HH:mm\"\n//             timeIntervals={15}\n//             timeCaption=\"Start\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <button className=\"btn btn-success\">Add Date</button>\n//         </div>\n//       </form>\n//     </React.Fragment>\n//   );\n//   let showStartDate = null;\n//   if (startDate) {\n//     showStartDate = { startDate };\n//   }\n//   // const endTime = (\n//   //   <DatePicker\n//   //     selected={startDate}\n//   //     onChange={startDate => finishTimeHandler(startDate)}\n//   //     showTimeSelect\n//   //     timeFormat=\"HH:mm\"\n//   //     timeIntervals={15}\n//   //     timeCaption=\"Stop\"\n//   //     dateFormat=\"h:mm aa\"\n//   //   />\n//   // );\n//   //{startDateTime}\n//   // <div>{finishTime ? <div>{finishTime}</div> : null}</div>\n//   return (\n//     <React.Fragment>\n//       <div>{startDateTime}</div>\n//     </React.Fragment>\n//   );\n// };\n// // const [startDate, setStartDate] = useState(new Date());\n// // return (\n// //   <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n// // );\n// // };\n// export default DatePickerComp;\n// import moment from 'moment';\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { compareAsc, format } from 'date-fns';\n\nclass DatePickerPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //startDate: new Date(),\n      showDate1: false,\n      showDate2: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(date) {\n    let currenShowDate1 = this.state.showDate1;\n    this.setState({\n      startDate: date,\n      showDate1: !currenShowDate1\n    }, () => this.props.startDateTimeHandler(this.state.startDate));\n    console.dir(`inside handleChange datePicker dir${this.state.startDate}`);\n  }\n\n  handleChange2(date) {\n    let currenShowDate2 = this.state.showDate2;\n    this.setState({\n      startDate2: date,\n      showDate2: !currenShowDate2\n    }, () => this.props.finishTimeHandler(this.state.startDate2));\n    console.log(`inside handleChange2 datePicker ${this.state.startDate}`);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let main = this.state.startDate;\n    alert(main); //console.log(main.format('L'));\n  } //name=\"startDate\"\n  //dateFormat=\"MM/dd/yyyy\"\n  //dateFormat=\"PP\"\n  //locale=\"p-BR\"\n  //timeFormat=\"p\"\n\n\n  render() {\n    if (this.state.showDate1) {\n      // showDate1 = <div>showDate1: {this.state.startDate}</div>;\n      let currenShowDate1 = this.state.showDate1;\n      this.setState({\n        showDate1: !currenShowDate1\n      });\n    }\n\n    if (this.state.showDate2) {\n      // showDate2 = <div>showDate2: {this.state.startDate}</div>;\n      let currenShowDate2 = this.state.showDate2;\n      this.setState({\n        showDate2: !currenShowDate2\n      });\n    }\n\n    console.log(`typeof for showdate1 ${typeof this.state.showDate1}`);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Select Event Date & Time: \"), React.createElement(DatePicker, {\n      placeholderText: \"Choose Start Time\",\n      selected: this.state.startDate,\n      onChange: date => this.handleChange(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 15,\n      timeCaption: \"Start\",\n      dateFormat: \"MMMM d, yyyy h:mm aa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      placeholderText: \"Choose End Time\",\n      selected: this.state.startDate2,\n      onChange: date => this.handleChange2(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 15,\n      timeCaption: \"End\",\n      dateFormat: \"MMMM d, yyyy h:mm aa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Add Date\")))));\n  }\n\n}\n\nexport default DatePickerPicker;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/RightCockpit/DatePicker.js"],"names":["React","Component","DatePicker","compareAsc","format","DatePickerPicker","constructor","props","state","showDate1","showDate2","handleChange","bind","handleSubmit","date","currenShowDate1","setState","startDate","startDateTimeHandler","console","dir","handleChange2","currenShowDate2","startDate2","finishTimeHandler","log","e","preventDefault","main","alert","render"],"mappings":"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","sourcesContent":["// import React, { useState } from 'react';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// //import moment from 'react-moment';\n\n// import { compareAsc, format } from 'date-fns';\n\n// const DatePickerComp = props => {\n//   const [startDate, setStartDate] = useState(new Date());\n\n//   //const [finishTime, setFinishTime] = useState(new Date());\n//   //let Sunday = moment(startDate).format('MMMM Do YYYY, h:mm:ss a');\n\n//   //let Sunday = format(startDate, 'MM/dd/yyyy, hh:mm:ss a');\n//   //onsole.log(JSON.stringify(Sunday));\n\n//   const startDateTimeHandler = date => {\n//     setStartDate(date);\n//     //props.startDateTimeHandler();\n//     //alert(`startDateTime: ${startDate}`);\n//     props.startDateTimeHandler(startDate);\n\n//     alert(`inside startDateTimeHandler --> startDateTime: ${startDate}`);\n//   };\n\n//   const handleSubmit = () => {\n//     props.finishTimeHandler(startDate);\n//   };\n\n//   // const finishTimeHandler = startDate => {\n//   //   setFinishTime(startDate, startDate => props.finishTimeHandler(startDate));\n//   //   console.log(`finishDateTime: ${finishTime}`);\n//   // };\n\n//   //console.log(`finishTime: ${finishTime}`);\n\n//   // {\n//   //   \"name\": \"State\",\n//   //   \"value\": \"Wed Jan 08 2020 19:45:00 GMT-0500 (Colombia Standard Time)\",\n//   //   \"subHooks\": []\n//   // }\n\n//   const startDateTime = (\n//     <React.Fragment>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label>Select Date: </label>\n//           <DatePicker\n//             selected={startDate}\n//             onChange={date => startDateTimeHandler(date)}\n//             name=\"startDate\"\n//             dateFormat=\"MM/dd/yyyy\"\n//             //locale=\"pt-BR\"\n//             showTimeSelect\n//             timeFormat=\"HH:mm\"\n//             timeIntervals={15}\n//             timeCaption=\"Start\"\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <button className=\"btn btn-success\">Add Date</button>\n//         </div>\n//       </form>\n//     </React.Fragment>\n//   );\n//   let showStartDate = null;\n//   if (startDate) {\n//     showStartDate = { startDate };\n//   }\n//   // const endTime = (\n//   //   <DatePicker\n//   //     selected={startDate}\n//   //     onChange={startDate => finishTimeHandler(startDate)}\n//   //     showTimeSelect\n//   //     timeFormat=\"HH:mm\"\n//   //     timeIntervals={15}\n//   //     timeCaption=\"Stop\"\n//   //     dateFormat=\"h:mm aa\"\n//   //   />\n//   // );\n//   //{startDateTime}\n//   // <div>{finishTime ? <div>{finishTime}</div> : null}</div>\n//   return (\n//     <React.Fragment>\n//       <div>{startDateTime}</div>\n//     </React.Fragment>\n//   );\n// };\n\n// // const [startDate, setStartDate] = useState(new Date());\n// // return (\n// //   <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n\n// // );\n// // };\n\n// export default DatePickerComp;\n\n// import moment from 'moment';\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { compareAsc, format } from 'date-fns';\n\nclass DatePickerPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //startDate: new Date(),\n      showDate1: false,\n      showDate2: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(date) {\n    let currenShowDate1 = this.state.showDate1;\n    this.setState(\n      {\n        startDate: date,\n        showDate1: !currenShowDate1\n      },\n      () => this.props.startDateTimeHandler(this.state.startDate)\n    );\n    console.dir(`inside handleChange datePicker dir${this.state.startDate}`);\n  }\n\n  handleChange2(date) {\n    let currenShowDate2 = this.state.showDate2;\n    this.setState(\n      {\n        startDate2: date,\n        showDate2: !currenShowDate2\n      },\n      () => this.props.finishTimeHandler(this.state.startDate2)\n    );\n    console.log(`inside handleChange2 datePicker ${this.state.startDate}`);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let main = this.state.startDate;\n    alert(main);\n    //console.log(main.format('L'));\n  }\n  //name=\"startDate\"\n  //dateFormat=\"MM/dd/yyyy\"\n  //dateFormat=\"PP\"\n  //locale=\"p-BR\"\n  //timeFormat=\"p\"\n\n  render() {\n    if (this.state.showDate1) {\n      // showDate1 = <div>showDate1: {this.state.startDate}</div>;\n      let currenShowDate1 = this.state.showDate1;\n\n      this.setState({\n        showDate1: !currenShowDate1\n      });\n    }\n\n    if (this.state.showDate2) {\n      // showDate2 = <div>showDate2: {this.state.startDate}</div>;\n\n      let currenShowDate2 = this.state.showDate2;\n\n      this.setState({\n        showDate2: !currenShowDate2\n      });\n    }\n    console.log(`typeof for showdate1 ${typeof this.state.showDate1}`);\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label>Select Event Date & Time: </label>\n\n              <DatePicker\n                placeholderText=\"Choose Start Time\"\n                selected={this.state.startDate}\n                onChange={date => this.handleChange(date)}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                timeCaption=\"Start\"\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n              />\n\n              <DatePicker\n                placeholderText=\"Choose End Time\"\n                selected={this.state.startDate2}\n                onChange={date => this.handleChange2(date)}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                timeCaption=\"End\"\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <button className=\"btn btn-success\">Add Date</button>\n            </div>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DatePickerPicker;\n"]},"metadata":{},"sourceType":"module"}
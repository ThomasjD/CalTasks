{"ast":null,"code":"import _defineProperty from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/Store/TasksData.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\n\nclass TasksData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataBaseName: 'tasks',\n      unAssignedTasksForWeek: [{\n        id: 'qrwrwq',\n        task: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      }, {\n        id: 'egewhw',\n        task: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      }, {\n        id: 'asfasv',\n        task: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }],\n      Monday: [{\n        id: 'morning1',\n        timeOfDay: 'morning',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon1',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch'\n      }, {\n        id: 'evening1',\n        timeOfDay: 'evening',\n        task: 'play ball'\n      }],\n      Tuesday: [{\n        id: 'morning2',\n        timeOfDay: 'morning',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon2',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch'\n      }, {\n        id: 'evening2',\n        timeOfDay: 'evening',\n        task: 'play ball'\n      }],\n      Wednesday: [{\n        id: 'morning3',\n        timeOfDay: 'morning',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon3',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch'\n      }, {\n        id: 'evening3',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      Thursday: [{\n        id: 'morning4',\n        timeOfDay: 'morning',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon4',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch'\n      }, {\n        id: 'evening4',\n        timeOfDay: 'evening',\n        task: 'play ball'\n      }],\n      Friday: [{\n        id: 'morning5',\n        timeOfDay: 'morning',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon5',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch'\n      }, {\n        id: 'evening5',\n        timeOfDay: 'evening',\n        task: 'play ball'\n      }],\n      Saturday: [{\n        id: 'morning6',\n        timeOfDay: 'morning',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon6',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch'\n      }, {\n        id: 'evening6',\n        timeOfDay: 'evening',\n        task: 'play ball'\n      }],\n      Sunday: [{\n        id: 'morning7',\n        timeOfDay: 'morning',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon7',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch'\n      }, {\n        id: 'evening7',\n        timeOfDay: 'evening',\n        task: 'play ball'\n      }],\n      TodayTasksHeader: '',\n      word: 'red',\n      reRenderTasks: false\n    };\n\n    this.lastTaskHeaderHandler = () => {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          if (this.state.unAssignedTasksForWeek.length != 0) {\n            //alert(`Inside of lastTaskHeaderHandler if statement:`);\n            this.setState({\n              lastTaskHeader: this.state.unAssignedTasksForWeek[0]\n            }, () => this.context.dataReceiverHandler(this.state));\n          } else {\n            //alert(`Inside of lastTaskHeaderHandler else statement:`);\n            this.setState({\n              lastTaskHeader: this.state.lastTaskHeader\n            }, () => this.context.dataReceiverHandler(this.state));\n          }\n\n          break;\n\n        case '2':\n          if (this.state.Monday.length != 0) {\n            //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n            this.setState({\n              TodayTasksHeader: this.state.Monday[0]\n            }, () => this.context.dataReceiverHandler(this.state));\n          } else {\n            alert(\"Inside of lastTaskHeaderHandler case 2 else statement:\");\n            this.setState({\n              TodayTasksHeader: this.state.TodayTasksHeader\n            }, () => this.context.dataReceiverHandler(this.state));\n          }\n\n      }\n    };\n\n    this.addTaskHandler = e => {\n      console.log(e.task); //need to fix this in newTask so that it automaticly picks up the default value of the radio button\n\n      let location = !e.task.location ? e.task.location = 'Popblado' : null;\n      console.log(\"target location is \".concat(location));\n      let newestEvent = [...this.state.tasks, e.task];\n      this.setState({\n        tasks: newestEvent\n      }); //this.setState({ showEvents: true });\n    };\n\n    this.deleteTaskFromUnAssignedTasksForWeekHandler = taskIndex => {\n      let currentUnassignedTasksForWeek = [...this.state.unAssignedTasksForWeek];\n      currentUnassignedTasksForWeek.splice(taskIndex, 1);\n      this.setState({\n        unAssignedTasksForWeek: currentUnassignedTasksForWeek,\n        receivedData: 'YES'\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.changeTaskFromUnAssignedTasksForWeekHandler = (taskValue, taskChangeId) => {\n      //Find the index of the lessons that matches the id sent in\n      const foundTaskIndex = this.state.unAssignedTasksForWeek.findIndex(currentId => {\n        return currentId.id === taskChangeId;\n      }); //createnew task item to put into array\n\n      const updatedTasks = _objectSpread({}, this.state.unAssignedTasksForWeek[foundTaskIndex]); //using updated values to define the task of the particular pulled out task\n      //updatedTasks.lesson = event.target.value;\n\n\n      updatedTasks.task = taskValue; //pull out of states maxReact array\n\n      const unAssignedTasksForWeek = [...this.state.unAssignedTasksForWeek]; //update the new lesson w/ ID of interest from the copy of MaxReact (unAssignedTasksForWeek)\n\n      unAssignedTasksForWeek[foundTaskIndex] = updatedTasks; //final update of unAssignedTasksForWeek\n\n      this.setState({\n        unAssignedTasksForWeek: unAssignedTasksForWeek\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.deleteTodayTaskhandler = taskIndex => {\n      alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTodayTasks: true\n      }); //get tasks array\n\n      const Monday = [...this.state.Monday]; //splice task of interst\n\n      Monday.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        Monday: Monday\n      }, () => this.context.dataReceiverHandler(this.state)); //this.setState({ showTasksCounter: false });\n    };\n\n    this.todayTaskChangeHandler = (newTaskValue, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      const foundTaskIndex = this.state.Monday.findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state.Monday[foundTaskIndex]);\n\n      updatedTask.task = newTaskValue; //pull out the states tasks array\n\n      const Monday = [...this.state.Monday]; //update the task with id of interest w/ new task description\n\n      Monday[foundTaskIndex] = updatedTask; //update the state\n      //without the () =>() -> dataReceiver will not wait till things have been updated in state, it will exicute rightaway\n\n      this.setState({\n        Monday: Monday\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n  }\n\n  render() {\n    if (this.context.dataRequestDetails.typeOfData === 'tasks') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '2':\n          //alert('case 2 tasksdata');\n          //TodayTasksHeader\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '3':\n          //delete from contentChoice = #1\n          this.context.resetHandlerChoice(this.deleteTaskFromUnAssignedTasksForWeekHandler(this.props.dataRequestDetails.index));\n          break;\n\n        case '4':\n          //change from contentChoice = #1\n          this.context.resetHandlerChoice(this.changeTaskFromUnAssignedTasksForWeekHandler(this.props.dataRequestDetails.value, this.props.dataRequestDetails.id));\n          break;\n\n        case '5':\n          //Changes on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(this.deleteTodayTaskhandler(this.props.dataRequestDetails.index));\n          break;\n\n        case '6':\n          //Changes on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(this.todayTaskChangeHandler(this.props.dataRequestDetails.value, this.props.dataRequestDetails.id));\n          break;\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, this.context.dataRequestDetails['handlerChoice'] ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, this.context.dataRequestDetails.handlerChoice, \" \") : null);\n  }\n\n}\n\nTasksData.contextType = TasksContext;\nexport default TasksData;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/Store/TasksData.js"],"names":["React","Component","RightCockpit","TasksContext","TasksData","state","dataBaseName","unAssignedTasksForWeek","id","task","deadline","location","Monday","timeOfDay","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","TodayTasksHeader","word","reRenderTasks","lastTaskHeaderHandler","context","dataRequestDetails","handlerChoice","length","setState","lastTaskHeader","dataReceiverHandler","alert","addTaskHandler","e","console","log","newestEvent","tasks","deleteTaskFromUnAssignedTasksForWeekHandler","taskIndex","currentUnassignedTasksForWeek","splice","receivedData","changeTaskFromUnAssignedTasksForWeekHandler","taskValue","taskChangeId","foundTaskIndex","findIndex","currentId","updatedTasks","deleteTodayTaskhandler","reRenderTodayTasks","todayTaskChangeHandler","newTaskValue","taskChangedId","updatedTask","render","typeOfData","resetHandlerChoice","props","index","value","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nclass TasksData extends Component {\n  state = {\n    dataBaseName: 'tasks',\n    unAssignedTasksForWeek: [\n      {\n        id: 'qrwrwq',\n        task: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      },\n      {\n        id: 'egewhw',\n        task: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      },\n      {\n        id: 'asfasv',\n        task: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }\n    ],\n    Monday: [\n      { id: 'morning1', timeOfDay: 'morning', task: 'comprar comida' },\n      { id: 'afternoon1', timeOfDay: 'afternoon', task: 'eat lunch' },\n      { id: 'evening1', timeOfDay: 'evening', task: 'play ball' }\n    ],\n    Tuesday: [\n      { id: 'morning2', timeOfDay: 'morning', task: 'comprar comida' },\n      { id: 'afternoon2', timeOfDay: 'afternoon', task: 'eat lunch' },\n      { id: 'evening2', timeOfDay: 'evening', task: 'play ball' }\n    ],\n    Wednesday: [\n      { id: 'morning3', timeOfDay: 'morning', task: 'comprar comida' },\n      { id: 'afternoon3', timeOfDay: 'afternoon', task: 'eat lunch' },\n      { id: 'evening3', timeOfDay: '', task: 'play ball' }\n    ],\n    Thursday: [\n      { id: 'morning4', timeOfDay: 'morning', task: 'comprar comida' },\n      { id: 'afternoon4', timeOfDay: 'afternoon', task: 'eat lunch' },\n      { id: 'evening4', timeOfDay: 'evening', task: 'play ball' }\n    ],\n    Friday: [\n      { id: 'morning5', timeOfDay: 'morning', task: 'comprar comida' },\n      { id: 'afternoon5', timeOfDay: 'afternoon', task: 'eat lunch' },\n      { id: 'evening5', timeOfDay: 'evening', task: 'play ball' }\n    ],\n    Saturday: [\n      { id: 'morning6', timeOfDay: 'morning', task: 'comprar comida' },\n      { id: 'afternoon6', timeOfDay: 'afternoon', task: 'eat lunch' },\n      { id: 'evening6', timeOfDay: 'evening', task: 'play ball' }\n    ],\n    Sunday: [\n      { id: 'morning7', timeOfDay: 'morning', task: 'comprar comida' },\n      { id: 'afternoon7', timeOfDay: 'afternoon', task: 'eat lunch' },\n      { id: 'evening7', timeOfDay: 'evening', task: 'play ball' }\n    ],\n    TodayTasksHeader: '',\n    word: 'red',\n    reRenderTasks: false\n  };\n\n  lastTaskHeaderHandler = () => {\n    switch (this.context.dataRequestDetails.handlerChoice) {\n      case '1':\n        if (this.state.unAssignedTasksForWeek.length != 0) {\n          //alert(`Inside of lastTaskHeaderHandler if statement:`);\n          this.setState(\n            { lastTaskHeader: this.state.unAssignedTasksForWeek[0] },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        } else {\n          //alert(`Inside of lastTaskHeaderHandler else statement:`);\n          this.setState(\n            { lastTaskHeader: this.state.lastTaskHeader },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        }\n\n        break;\n\n      case '2':\n        if (this.state.Monday.length != 0) {\n          //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n          this.setState(\n            { TodayTasksHeader: this.state.Monday[0] },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        } else {\n          alert(`Inside of lastTaskHeaderHandler case 2 else statement:`);\n          this.setState(\n            { TodayTasksHeader: this.state.TodayTasksHeader },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        }\n    }\n  };\n  //dynamic edit task for Today (Monday)\n  addTaskHandler = e => {\n    console.log(e.task);\n    //need to fix this in newTask so that it automaticly picks up the default value of the radio button\n    let location = !e.task.location ? (e.task.location = 'Popblado') : null;\n    console.log(`target location is ${location}`);\n\n    let newestEvent = [...this.state.tasks, e.task];\n\n    this.setState({ tasks: newestEvent });\n    //this.setState({ showEvents: true });\n  };\n\n  deleteTaskFromUnAssignedTasksForWeekHandler = taskIndex => {\n    let currentUnassignedTasksForWeek = [...this.state.unAssignedTasksForWeek];\n\n    currentUnassignedTasksForWeek.splice(taskIndex, 1);\n\n    this.setState(\n      {\n        unAssignedTasksForWeek: currentUnassignedTasksForWeek,\n        receivedData: 'YES'\n      },\n      () => this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  changeTaskFromUnAssignedTasksForWeekHandler = (taskValue, taskChangeId) => {\n    //Find the index of the lessons that matches the id sent in\n    const foundTaskIndex = this.state.unAssignedTasksForWeek.findIndex(\n      currentId => {\n        return currentId.id === taskChangeId;\n      }\n    );\n\n    //createnew task item to put into array\n    const updatedTasks = {\n      ...this.state.unAssignedTasksForWeek[foundTaskIndex]\n    };\n\n    //using updated values to define the task of the particular pulled out task\n    //updatedTasks.lesson = event.target.value;\n    updatedTasks.task = taskValue;\n\n    //pull out of states maxReact array\n    const unAssignedTasksForWeek = [...this.state.unAssignedTasksForWeek];\n\n    //update the new lesson w/ ID of interest from the copy of MaxReact (unAssignedTasksForWeek)\n    unAssignedTasksForWeek[foundTaskIndex] = updatedTasks;\n\n    //final update of unAssignedTasksForWeek\n    this.setState({ unAssignedTasksForWeek: unAssignedTasksForWeek }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  deleteTodayTaskhandler = taskIndex => {\n    alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTodayTasks: true });\n\n    //get tasks array\n    const Monday = [...this.state.Monday];\n\n    //splice task of interst\n    Monday.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ Monday: Monday }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n\n    //this.setState({ showTasksCounter: false });\n  };\n\n  todayTaskChangeHandler = (newTaskValue, taskChangedId) => {\n    //find the task that matches the taskChangedId\n    const foundTaskIndex = this.state.Monday.findIndex(currentId => {\n      return currentId.id === taskChangedId;\n    });\n\n    //create new task item that we will put into array\n    const updatedTask = { ...this.state.Monday[foundTaskIndex] };\n\n    updatedTask.task = newTaskValue;\n\n    //pull out the states tasks array\n    const Monday = [...this.state.Monday];\n\n    //update the task with id of interest w/ new task description\n    Monday[foundTaskIndex] = updatedTask;\n\n    //update the state\n    //without the () =>() -> dataReceiver will not wait till things have been updated in state, it will exicute rightaway\n    this.setState({ Monday: Monday }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  static contextType = TasksContext;\n\n  render() {\n    if (this.context.dataRequestDetails.typeOfData === 'tasks') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '2':\n          //alert('case 2 tasksdata');\n          //TodayTasksHeader\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '3': //delete from contentChoice = #1\n          this.context.resetHandlerChoice(\n            this.deleteTaskFromUnAssignedTasksForWeekHandler(\n              this.props.dataRequestDetails.index\n            )\n          );\n          break;\n        case '4': //change from contentChoice = #1\n          this.context.resetHandlerChoice(\n            this.changeTaskFromUnAssignedTasksForWeekHandler(\n              this.props.dataRequestDetails.value,\n              this.props.dataRequestDetails.id\n            )\n          );\n          break;\n\n        case '5': //Changes on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(\n            this.deleteTodayTaskhandler(this.props.dataRequestDetails.index)\n          );\n\n          break;\n        case '6': //Changes on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(\n            this.todayTaskChangeHandler(\n              this.props.dataRequestDetails.value,\n              this.props.dataRequestDetails.id\n            )\n          );\n\n          break;\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {this.context.dataRequestDetails['handlerChoice'] ? (\n          <div>{this.context.dataRequestDetails.handlerChoice} </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TasksData;\n"]},"metadata":{},"sourceType":"module"}
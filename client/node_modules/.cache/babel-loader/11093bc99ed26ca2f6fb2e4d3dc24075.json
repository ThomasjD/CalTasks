{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/ObjectiveData.js\";\nimport React, { Component } from 'react';\nimport StoreDataContext from '../../context/StoreDataContext';\n\nclass ObjectiveData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataBaseName: 'obj',\n      firstTimeData: true,\n      dailyBudget: null,\n      activityWeekCategories: null\n    };\n\n    this.dataForDisplay = () => {\n      this.timeBudgetDay();\n      this.setState({\n        dataLocation: 'new',\n        dailyBudget: this.dailyBudget,\n        activityWeekCategories: this.activityWeekCategories,\n        firstTimeData: !this.state.firstTimeData\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.pickedDayHandler = () => {\n      let pickedDay = this.context.dataRequestDetails.info;\n      this.setState({\n        pickedDay: pickedDay\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.initialRun = () => {\n      this.setState({\n        dailyBudget: this.dailyBudget,\n        activityWeekCategories: this.activityWeekCategories,\n        firstTimeData: !this.state.firstTimeData\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.addHourToActivity = activity => {\n      let activityWeekCategories = _objectSpread({}, this.state.activityWeekCategories);\n\n      let currentTotalHourCount = activityWeekCategories.totalHours;\n      let currentActivityHourCount = activityWeekCategories[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let updatedTotalHourCount = currentTotalHourCount + 1;\n      activityWeekCategories.totalHours = updatedTotalHourCount;\n      let updatedActivityHourCount = currentActivityHourCount + 1;\n      activityWeekCategories[activity] = updatedActivityHourCount;\n      this.setState({\n        activityWeekCategories: activityWeekCategories\n      }, () => this.context.dataReceiverHandler(this.state)); //this.deductHourToActivity(activity);\n      //this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.deductHourToActivity = activity => {\n      let activityWeekCategories = _objectSpread({}, this.state.activityWeekCategories);\n\n      let currentTotalHourCount = activityWeekCategories.totalHours;\n      let currentActivityHourCount = activityWeekCategories[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let updatedTotalHourCount = currentTotalHourCount - 1;\n      activityWeekCategories.totalHours = updatedTotalHourCount;\n      let updatedActivityHourCount = currentActivityHourCount - 1;\n      activityWeekCategories[activity] = updatedActivityHourCount;\n      this.setState({\n        activityWeekCategories: activityWeekCategories\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.hoursInWeek = 168;\n    this.hoursInDay = 24;\n    this.activityWeekCategories = {\n      sleep: 49,\n      exercise: 7,\n      work: 49,\n      free: 7,\n      errands: 14,\n      getReady: 28,\n      totalHours: 168\n    };\n    this.activityDayCategories = {\n      sleep: 7,\n      exercise: 1,\n      work: 9,\n      free: 1,\n      errands: 2,\n      getReady: 4,\n      totalHours: 24\n    };\n    this.daysOfWeek = {\n      Monday: {},\n      Tuesday: {},\n      Wednesday: {},\n      Thursday: {},\n      Friday: {},\n      Saturday: {},\n      Sunday: {}\n    };\n    this.dailyBudget = {};\n    this.firstTimeLoad = true; //create a seperate object that contains activityCategories\n\n    this.timeBudgetDay = () => {\n      //alert('inside Objective Data timeBudgetDay()');\n      Object.keys(this.daysOfWeek).map(day => {\n        //give each day the categories w/ hours\n        console.log(day);\n\n        let updatedDailyBudget = _objectSpread({}, this.dailyBudget, {\n          [day]: this.activityDayCategories\n        });\n\n        return this.dailyBudget = updatedDailyBudget;\n      });\n    };\n  }\n\n  render() {\n    if (this.state.firstTimeData) {\n      this.initialRun(this.timeBudgetDay());\n    }\n\n    console.log(`this.context.dataRequestDetails.handlerChoice: ${this.context.dataRequestDetails.handlerChoice}`);\n\n    let Week = _objectSpread({}, this.state.dailyBudget);\n\n    let TuesdayObj = _objectSpread({}, Week.Tuesday);\n\n    console.dir(`this.state.dailyBudget.Tuesday.sleep: ${TuesdayObj.sleep}`);\n\n    if (!this.state.firstTimeData && this.context.dataRequestDetails.typeOfData === 'obj') {\n      //alert(this.context.dataRequestDetails.handlerChoice);\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          //show picked day timeBudget\n          // alert(\n          //   `inside case 1 this.context.dataRequestDetails.handlerChoice: ${this.context.dataRequestDetails.handlerChoice}`\n          // );\n          this.context.resetHandlerChoice(this.dataForDisplay());\n          break;\n\n        case '2':\n          //deduct\n          this.context.resetHandlerChoice(this.deductHourToActivity(this.context.dataRequestDetails.value));\n          break;\n\n        case '3':\n          //add\n          this.context.resetHandlerChoice(this.addHourToActivity(this.context.dataRequestDetails.value));\n          break;\n\n        case '4':\n          //show picked day timeBudget\n          this.context.resetHandlerChoice(() => this.pickedDayHandler());\n          break;\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Inside of ObjData \");\n  }\n\n}\n\nObjectiveData.contextType = StoreDataContext;\nexport default ObjectiveData;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/ObjectiveData.js"],"names":["React","Component","StoreDataContext","ObjectiveData","constructor","props","state","dataBaseName","firstTimeData","dailyBudget","activityWeekCategories","dataForDisplay","timeBudgetDay","setState","dataLocation","context","dataReceiverHandler","pickedDayHandler","pickedDay","dataRequestDetails","info","initialRun","addHourToActivity","activity","currentTotalHourCount","totalHours","currentActivityHourCount","updatedTotalHourCount","updatedActivityHourCount","deductHourToActivity","hoursInWeek","hoursInDay","sleep","exercise","work","free","errands","getReady","activityDayCategories","daysOfWeek","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","firstTimeLoad","Object","keys","map","day","console","log","updatedDailyBudget","render","handlerChoice","Week","TuesdayObj","dir","typeOfData","resetHandlerChoice","value","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport StoreDataContext from '../../context/StoreDataContext';\n\nclass ObjectiveData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.hoursInWeek = 168;\n    this.hoursInDay = 24;\n    this.activityWeekCategories = {\n      sleep: 49,\n      exercise: 7,\n      work: 49,\n      free: 7,\n      errands: 14,\n      getReady: 28,\n      totalHours: 168\n    };\n\n    this.activityDayCategories = {\n      sleep: 7,\n      exercise: 1,\n      work: 9,\n      free: 1,\n      errands: 2,\n      getReady: 4,\n      totalHours: 24\n    };\n\n    this.daysOfWeek = {\n      Monday: {},\n      Tuesday: {},\n      Wednesday: {},\n      Thursday: {},\n      Friday: {},\n      Saturday: {},\n      Sunday: {}\n    };\n    this.dailyBudget = {};\n    this.firstTimeLoad = true;\n\n    //create a seperate object that contains activityCategories\n    this.timeBudgetDay = () => {\n      //alert('inside Objective Data timeBudgetDay()');\n      Object.keys(this.daysOfWeek).map(day => {\n        //give each day the categories w/ hours\n        console.log(day);\n        let updatedDailyBudget = {\n          ...this.dailyBudget,\n          [day]: this.activityDayCategories\n        };\n\n        return (this.dailyBudget = updatedDailyBudget);\n      });\n    };\n  }\n\n  state = {\n    dataBaseName: 'obj',\n    firstTimeData: true,\n    dailyBudget: null,\n    activityWeekCategories: null\n  };\n  dataForDisplay = () => {\n    this.timeBudgetDay();\n    this.setState(\n      {\n        dataLocation: 'new',\n        dailyBudget: this.dailyBudget,\n        activityWeekCategories: this.activityWeekCategories,\n        firstTimeData: !this.state.firstTimeData\n      },\n\n      () => this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  pickedDayHandler = () => {\n    let pickedDay = this.context.dataRequestDetails.info;\n    this.setState({ pickedDay: pickedDay }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n  initialRun = () => {\n    this.setState(\n      {\n        dailyBudget: this.dailyBudget,\n        activityWeekCategories: this.activityWeekCategories,\n        firstTimeData: !this.state.firstTimeData\n      },\n      () => this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  addHourToActivity = activity => {\n    let activityWeekCategories = { ...this.state.activityWeekCategories };\n    let currentTotalHourCount = activityWeekCategories.totalHours;\n    let currentActivityHourCount = activityWeekCategories[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let updatedTotalHourCount = currentTotalHourCount + 1;\n    activityWeekCategories.totalHours = updatedTotalHourCount;\n    let updatedActivityHourCount = currentActivityHourCount + 1;\n    activityWeekCategories[activity] = updatedActivityHourCount;\n\n    this.setState({ activityWeekCategories: activityWeekCategories }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n    //this.deductHourToActivity(activity);\n    //this.updatePurchaseState(updatedIngredients);\n  };\n\n  deductHourToActivity = activity => {\n    let activityWeekCategories = { ...this.state.activityWeekCategories };\n    let currentTotalHourCount = activityWeekCategories.totalHours;\n    let currentActivityHourCount = activityWeekCategories[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let updatedTotalHourCount = currentTotalHourCount - 1;\n    activityWeekCategories.totalHours = updatedTotalHourCount;\n    let updatedActivityHourCount = currentActivityHourCount - 1;\n    activityWeekCategories[activity] = updatedActivityHourCount;\n\n    this.setState({ activityWeekCategories: activityWeekCategories }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  static contextType = StoreDataContext;\n  render() {\n    if (this.state.firstTimeData) {\n      this.initialRun(this.timeBudgetDay());\n    }\n    console.log(\n      `this.context.dataRequestDetails.handlerChoice: ${this.context.dataRequestDetails.handlerChoice}`\n    );\n    let Week = { ...this.state.dailyBudget };\n    let TuesdayObj = { ...Week.Tuesday };\n    console.dir(`this.state.dailyBudget.Tuesday.sleep: ${TuesdayObj.sleep}`);\n\n    if (\n      !this.state.firstTimeData &&\n      this.context.dataRequestDetails.typeOfData === 'obj'\n    ) {\n      //alert(this.context.dataRequestDetails.handlerChoice);\n\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1': //show picked day timeBudget\n          // alert(\n          //   `inside case 1 this.context.dataRequestDetails.handlerChoice: ${this.context.dataRequestDetails.handlerChoice}`\n          // );\n          this.context.resetHandlerChoice(this.dataForDisplay());\n\n          break;\n        case '2': //deduct\n          this.context.resetHandlerChoice(\n            this.deductHourToActivity(this.context.dataRequestDetails.value)\n          );\n\n          break;\n        case '3': //add\n          this.context.resetHandlerChoice(\n            this.addHourToActivity(this.context.dataRequestDetails.value)\n          );\n          break;\n\n        case '4': //show picked day timeBudget\n          this.context.resetHandlerChoice(() => this.pickedDayHandler());\n\n          break;\n      }\n    }\n    return <div>Inside of ObjData </div>;\n  }\n}\n\nexport default ObjectiveData;\n"]},"metadata":{},"sourceType":"module"}
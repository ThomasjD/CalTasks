{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/Template/pie & funnel charts/Pyramid Chart.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../../Assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass PyramidChart extends Component {\n  render() {\n    var dataPoint;\n    var total;\n    const options = {\n      animationEnabled: true,\n      title: {\n        text: \"Sales via Advertisement\"\n      },\n      legend: {\n        horizontalAlign: \"right\",\n        verticalAlign: \"center\",\n        reversed: true\n      },\n      data: [{\n        type: \"pyramid\",\n        showInLegend: true,\n        legendText: \"{label}\",\n        indexLabel: \"{label} - {y}\",\n        toolTipContent: \"<b>{label}</b>: {y} <b>({percentage}%)</b>\",\n        dataPoints: [{\n          label: \"Impressions\",\n          y: 2850\n        }, {\n          label: \"Clicked\",\n          y: 2150\n        }, {\n          label: \"Free Downloads\",\n          y: 1900\n        }, {\n          label: \"Purchase\",\n          y: 650\n        }, {\n          label: \"Renewal\",\n          y: 250\n        }]\n      }] //calculate percentage\n\n    };\n    dataPoint = options.data[0].dataPoints;\n    total = dataPoint[0].y;\n\n    for (var i = 0; i < dataPoint.length; i++) {\n      if (i === 0) {\n        options.data[0].dataPoints[i].percentage = 100;\n      } else {\n        options.data[0].dataPoints[i].percentage = (dataPoint[i].y / total * 100).toFixed(2);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"React Pyramid Chart\"), React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PyramidChart;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/Template/pie & funnel charts/Pyramid Chart.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","PyramidChart","render","dataPoint","total","options","animationEnabled","title","text","legend","horizontalAlign","verticalAlign","reversed","data","type","showInLegend","legendText","indexLabel","toolTipContent","dataPoints","label","y","i","length","percentage","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACpCI,EAAAA,MAAM,GAAG;AACR,QAAIC,SAAJ;AACA,QAAIC,KAAJ;AACA,UAAMC,OAAO,GAAG;AACfC,MAAAA,gBAAgB,EAAE,IADH;AAEfC,MAAAA,KAAK,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OAFQ;AAKfC,MAAAA,MAAM,EAAE;AACPC,QAAAA,eAAe,EAAE,OADV;AAEPC,QAAAA,aAAa,EAAE,QAFR;AAGPC,QAAAA,QAAQ,EAAE;AAHH,OALO;AAUfC,MAAAA,IAAI,EAAE,CAAC;AACNC,QAAAA,IAAI,EAAE,SADA;AAENC,QAAAA,YAAY,EAAE,IAFR;AAGNC,QAAAA,UAAU,EAAE,SAHN;AAINC,QAAAA,UAAU,EAAE,eAJN;AAKNC,QAAAA,cAAc,EAAE,4CALV;AAMNC,QAAAA,UAAU,EAAE,CACX;AAAEC,UAAAA,KAAK,EAAE,aAAT;AAAwBC,UAAAA,CAAC,EAAE;AAA3B,SADW,EAEX;AAAED,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,CAAC,EAAE;AAAvB,SAFW,EAGX;AAAED,UAAAA,KAAK,EAAE,gBAAT;AAA2BC,UAAAA,CAAC,EAAE;AAA9B,SAHW,EAIX;AAAED,UAAAA,KAAK,EAAE,UAAT;AAAqBC,UAAAA,CAAC,EAAE;AAAxB,SAJW,EAKX;AAAED,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,CAAC,EAAE;AAAvB,SALW;AANN,OAAD,CAVS,CAyBhB;;AAzBgB,KAAhB;AA0BAlB,IAAAA,SAAS,GAAGE,OAAO,CAACQ,IAAR,CAAa,CAAb,EAAgBM,UAA5B;AACAf,IAAAA,KAAK,GAAGD,SAAS,CAAC,CAAD,CAAT,CAAakB,CAArB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGnB,SAAS,CAACoB,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACzC,UAAGA,CAAC,KAAK,CAAT,EAAY;AACXjB,QAAAA,OAAO,CAACQ,IAAR,CAAa,CAAb,EAAgBM,UAAhB,CAA2BG,CAA3B,EAA8BE,UAA9B,GAA2C,GAA3C;AACA,OAFD,MAEO;AACNnB,QAAAA,OAAO,CAACQ,IAAR,CAAa,CAAb,EAAgBM,UAAhB,CAA2BG,CAA3B,EAA8BE,UAA9B,GAA2C,CAAErB,SAAS,CAACmB,CAAD,CAAT,CAAaD,CAAb,GAAiBjB,KAAlB,GAA2B,GAA5B,EAAiCqB,OAAjC,CAAyC,CAAzC,CAA3C;AACA;AACD;;AAED,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADD,EAEC,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAIpB;AACzB;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADA;AASA;;AAjDmC;;AAoDrC,eAAeJ,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CanvasJSReact from '../../Assets/canvasjs.react';\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n \r\nclass PyramidChart extends Component {\r\n\trender() {\r\n\t\tvar dataPoint;\r\n\t\tvar total;\r\n\t\tconst options = {\r\n\t\t\tanimationEnabled: true,\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: \"Sales via Advertisement\"\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\thorizontalAlign: \"right\",\r\n\t\t\t\tverticalAlign: \"center\",\r\n\t\t\t\treversed: true\r\n\t\t\t},\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"pyramid\",\r\n\t\t\t\tshowInLegend: true,\r\n\t\t\t\tlegendText: \"{label}\",\r\n\t\t\t\tindexLabel: \"{label} - {y}\",\r\n\t\t\t\ttoolTipContent: \"<b>{label}</b>: {y} <b>({percentage}%)</b>\",\r\n\t\t\t\tdataPoints: [\r\n\t\t\t\t\t{ label: \"Impressions\", y: 2850},\r\n\t\t\t\t\t{ label: \"Clicked\", y: 2150},\r\n\t\t\t\t\t{ label: \"Free Downloads\", y: 1900},\r\n\t\t\t\t\t{ label: \"Purchase\", y: 650},\r\n\t\t\t\t\t{ label: \"Renewal\", y: 250}\r\n\t\t\t\t]\r\n\t\t\t}]\r\n\t\t}\r\n\t\t//calculate percentage\r\n\t\tdataPoint = options.data[0].dataPoints;\r\n\t\ttotal = dataPoint[0].y;\r\n\t\tfor(var i = 0; i < dataPoint.length; i++) {\r\n\t\t\tif(i === 0) {\r\n\t\t\t\toptions.data[0].dataPoints[i].percentage = 100;\r\n\t\t\t} else {\r\n\t\t\t\toptions.data[0].dataPoints[i].percentage = ((dataPoint[i].y / total) * 100).toFixed(2);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>React Pyramid Chart</h1>\r\n\t\t\t<CanvasJSChart options = {options} \r\n\t\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t/>\r\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PyramidChart;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport rocky from './App.module.css';\nimport Tasks from '../components/Tasks/Tasks'; //import Task from '../components/Tasks/Task/Task'\n\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport '../components/Tasks/Task/Task';\nimport TodayTasks from '../components/TodayTasks/TodayTasks'; //import MaxReact from '../components/Syllabus/MaxReact'\n//import for bootstraps\n\nimport axios from 'axios';\nimport { Container, Row, Col } from 'reactstrap';\nimport Post from '../components/Post';\nimport Header from '../components/Header';\nimport SideCard from '../components/SideCard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props); //console.log('[App.js] constructor')\n    //console.log(this.props.maxReact)\n\n    this.state = {\n      tasks: [{\n        id: 'qrwrwq',\n        todo: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      }, {\n        id: 'egewhw',\n        todo: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      }, {\n        id: 'asfasv',\n        todo: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }],\n      // maxReact: [\n      //   {id: 'xvlwil', lesson: '90. (for props Changes)', completion: false },\n      //   {id: 'bbbskk', lesson: '91. (for state Changes)', completion: false },\n      //   {id: 'kjhck2', lesson: '92. Using useEffect() in Functional Components ', completion: false },   \n      // ],\n      Monday: [{\n        id: 'morning',\n        task: \"\"\n      }, {\n        id: 'afternoon',\n        task: \"\"\n      }, {\n        id: 'evening',\n        task: \"\"\n      }],\n      Tuesday: [{\n        id: 'morning',\n        task: \"\"\n      }, {\n        id: 'afternoon',\n        task: \"\"\n      }, {\n        id: 'evening',\n        task: \"\"\n      }],\n      showTasks: false,\n      showTasksToday: false,\n      showCockpit: true\n    };\n\n    this.toggleShowTasksHandler = () => {\n      const doesShow = this.state.showTasks;\n      this.setState({\n        showTasks: !doesShow\n      }); //tryout\n\n      const Monday = [...this.state.Monday];\n      Monday[0].task = 'higher love';\n      this.setState({\n        Monday: Monday\n      });\n    };\n\n    this.deleteTaskhandler = taskIndex => {\n      //get tasks array\n      const tasks = [...this.state.tasks]; //splice task of interst\n\n      tasks.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        tasks: tasks\n      });\n    };\n\n    this.taskChangeHandler = (event, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      const foundTaskId = this.state.tasks.findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state.tasks[foundTaskId]);\n\n      updatedTask.todo = event.target.value; //pull out the states tasks array\n\n      const tasks = [...this.state.tasks]; //update the task with id of interest w/ new task description\n\n      tasks[foundTaskId] = updatedTask; //update the state\n\n      this.setState({\n        tasks: tasks\n      });\n    };\n\n    this.addTaskTodayHandler = (event, taskChangedId) => {};\n\n    this.displayTodayScheduleHandler = () => {\n      //pull out the states tasks array\n      const Monday = [...this.state.Monday]; //update the task with id of interest w/ new task description\n\n      Monday[0].task = 'higher love';\n      const doesShowToday = this.state.showTasksToday;\n      this.setState({\n        showTasksToday: !doesShowToday\n      });\n    };\n  } //data\n\n\n  // componentWillMount() {\n  //   console.log('[App.js] componentWillMount')\n  // }\n  shouldComponentUpdate() {\n    console.log('[App.js] shouldComponentUpdate');\n    return true;\n  }\n\n  componentDidMount() {\n    console.log('[App.js] componentDidMount');\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    console.log('[App.js] componentDidUpdate ');\n  } //show list of tasks\n\n\n  render() {\n    //console.log(this.state.Monday[0])\n    //console.log(this.state.Monday[0])\n    //let newShit = \n    //this.setState (Monday: this.state.Monday[0].taskTime.afternoon) = thisData\n    //console.log(this.state.Monday[0].taskTime.afternoon)\n    let displayTasks = null; //clicking on the show Tasks button to show available tasks\n    //tasks, clicked, changed will be sent to <Tasks>\n\n    if (this.state.showTasks) {\n      displayTasks = React.createElement(Tasks, {\n        tasks: this.state.tasks,\n        clicked: this.deleteTaskhandler,\n        changed: this.taskChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });\n    }\n\n    let displayTasksToday = null;\n\n    if (this.state.showTasksToday) {\n      displayTasksToday = React.createElement(TodayTasks, {\n        monday: this.state.Monday,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      });\n    }\n\n    let tasklength = this.state.tasks.length; //console.log(tasklength)\n\n    return React.createElement(\"div\", {\n      className: rocky.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          showCockpit: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \" Remove Cockpit\"), this.state.showCockpit ? React.createElement(Cockpit, {\n      clicked: this.toggleShowTasksHandler,\n      tasks: this.state.tasks,\n      todayClicked: this.displayTodayScheduleHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }) : null, displayTasks, displayTasksToday);\n  }\n\n} //<p>this class is {classes}</p>\n//export default Radium(App);\n\n\nApp.getDerivedStateFromProps = (state, props) => {\n  console.log('[App.js] getDerivedStateFromProps', props);\n  return state;\n};\n\nexport default App; //<p className={rocky[classes]}>Things to Do!</p>\n//using css modules on multiple classNames \n//{classNames({[styles.foo]: true, [styles.bar]: true})}\n//<p className={classNames({[rocky[classes]]: true, [rocky.red]: true})}>Things to Do!</p>\n\n/*Template for Bootstrap\n<React.Fragment>\n\n\n    <Header />\n    \n    <main className=\"my-5 py-5\">\n      <Container className=\"px-0\">\n        \n        <Row noGutters className=\"pt-2 pt-md-5 w-100 px-4 px-xl-0 position-relative\">\n        \n          <Col xs={{ order: 2 }} md={{ size: 4, order: 1 }} tag=\"aside\" className=\"pb-5 mb-5 pb-md-0 mb-md-0 mx-auto mx-md-0\">\n          \n\n            <SideCard />\n          </Col>\n          \n          <Col xs={{ order: 1 }} md={{ size: 7, offset: 1 }} tag=\"section\" className=\"py-5 mb-5 py-md-0 mb-md-0\">\n            <Post />\n          </Col>\n          \n        </Row>\n      </Container>\n    </main>\n    \n  </React.Fragment>\n  */","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/App.js"],"names":["React","Component","rocky","Tasks","Cockpit","TodayTasks","axios","Container","Row","Col","Post","Header","SideCard","App","constructor","props","state","tasks","id","todo","deadline","location","Monday","task","Tuesday","showTasks","showTasksToday","showCockpit","toggleShowTasksHandler","doesShow","setState","deleteTaskhandler","taskIndex","splice","taskChangeHandler","event","taskChangedId","foundTaskId","findIndex","currentId","updatedTask","target","value","addTaskTodayHandler","displayTodayScheduleHandler","doesShowToday","shouldComponentUpdate","console","log","componentDidMount","componentDidUpdate","nextProps","nextState","render","displayTasks","displayTasksToday","tasklength","length","getDerivedStateFromProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport rocky from './App.module.css';\nimport Tasks from '../components/Tasks/Tasks'\n//import Task from '../components/Tasks/Task/Task'\nimport Cockpit from '../components/Cockpit/Cockpit'\nimport '../components/Tasks/Task/Task'\nimport TodayTasks from '../components/TodayTasks/TodayTasks'\n//import MaxReact from '../components/Syllabus/MaxReact'\n\n//import for bootstraps\nimport axios from 'axios';\nimport { Container, Row, Col } from 'reactstrap';\nimport Post from '../components/Post';\nimport Header from '../components/Header';\nimport SideCard from '../components/SideCard';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    //console.log('[App.js] constructor')\n    //console.log(this.props.maxReact)\n  }\n  //data\n  state = {\n    tasks: [\n      {id: 'qrwrwq', todo: 'Find work', deadline : 'Lunes', location: 'Poplado'},\n      {id: 'egewhw', todo: 'buy shoes', deadline : 'Martes', location: 'Floresta'},\n      {id: 'asfasv', todo: 'mail package', deadline : 'Jueves', location: 'Laureles'}\n    ],\n    // maxReact: [\n    //   {id: 'xvlwil', lesson: '90. (for props Changes)', completion: false },\n    //   {id: 'bbbskk', lesson: '91. (for state Changes)', completion: false },\n    //   {id: 'kjhck2', lesson: '92. Using useEffect() in Functional Components ', completion: false },   \n    // ],\n    Monday: [\n      {id: 'morning', task: \"\"},\n      {id: 'afternoon', task: \"\"},\n      {id: 'evening', task: \"\"}\n    ],\n    Tuesday: [\n      {id: 'morning', task: \"\"},\n      {id: 'afternoon', task: \"\"},\n      {id: 'evening', task: \"\"}\n    ],   \n    showTasks: false, \n    showTasksToday: false,\n    showCockpit: true\n\n  };\n\n  static getDerivedStateFromProps = (state,props) => {\n    console.log('[App.js] getDerivedStateFromProps', props)\n    return state\n  }\n\n  // componentWillMount() {\n  //   console.log('[App.js] componentWillMount')\n  // }\n  \n  shouldComponentUpdate () {\n    console.log('[App.js] shouldComponentUpdate')\n    return true\n  }\n  \n  componentDidMount() {\n    console.log('[App.js] componentDidMount') \n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    console.log('[App.js] componentDidUpdate ')\n  }\n\n  \n  \n\n  //show list of tasks\n  toggleShowTasksHandler = () => {\n    const doesShow = this.state.showTasks;\n    this.setState({showTasks: !doesShow}) \n\n\n    //tryout\n    const Monday = [...this.state.Monday]\n\n    \n    Monday[0].task = 'higher love'\n\n    this.setState({Monday: Monday})\n    }\n\n  //delete a task \n  deleteTaskhandler = (taskIndex) => {\n    //get tasks array\n    const tasks = [...this.state.tasks];  \n    //splice task of interst\n    tasks.splice(taskIndex, 1);\n    //update new list of tasks to state\n    this.setState({tasks : tasks})\n  }\n\n  //dynamic edit task\n  taskChangeHandler = (event, taskChangedId) => {\n\n    //find the task that matches the taskChangedId\n    const foundTaskId = this.state.tasks.findIndex(currentId => {\n      return currentId.id === taskChangedId\n    })\n\n    //create new task item that we will put into array\n    const updatedTask = {...this.state.tasks[foundTaskId]}\n    updatedTask.todo = event.target.value\n\n    //pull out the states tasks array\n    const tasks = [...this.state.tasks]\n    \n    //update the task with id of interest w/ new task description\n    tasks[foundTaskId] = updatedTask\n    \n    //update the state\n    this.setState({tasks: tasks})\n    }\n\n   addTaskTodayHandler = (event, taskChangedId) => {\n    \n    \n\n   }\n   \n   displayTodayScheduleHandler = () => {\n     //pull out the states tasks array\n    const Monday = [...this.state.Monday]\n\n    //update the task with id of interest w/ new task description\n    Monday[0].task = 'higher love'\n\n    const doesShowToday = this.state.showTasksToday;\n    this.setState({showTasksToday: !doesShowToday}) \n   }\n\n  render() {\n    //console.log(this.state.Monday[0])\n    \n    //console.log(this.state.Monday[0])\n\n    //let newShit = \n    //this.setState (Monday: this.state.Monday[0].taskTime.afternoon) = thisData\n    //console.log(this.state.Monday[0].taskTime.afternoon)\n    let displayTasks = null;\n    \n    //clicking on the show Tasks button to show available tasks\n      //tasks, clicked, changed will be sent to <Tasks>\n\n    if (this.state.showTasks) {\n      displayTasks = (\n        \n            <Tasks \n              tasks={this.state.tasks}\n              clicked = {this.deleteTaskhandler}\n              changed = {this.taskChangeHandler}\n            />\n      ) \n    } \n\n    let displayTasksToday = null;\n\n    if (this.state.showTasksToday) {\n      displayTasksToday = (\n        \n            <TodayTasks\n              monday = {this.state.Monday} \n            />\n      ) \n    } \n\n     let tasklength = this.state.tasks.length\n\n     //console.log(tasklength)\n    \n    return (\n     \n      \n      \n      <div className={rocky.App}>  \n      <button \n        onClick ={ () => {\n          this.setState({ showCockpit: false })\n        }}> Remove Cockpit</button>\n      \n      {this.state.showCockpit? (\n        <Cockpit\n        clicked = {this.toggleShowTasksHandler}\n        tasks = {this.state.tasks}\n        todayClicked = {this.displayTodayScheduleHandler}\n        />\n      ): null}\n      \n     {displayTasks}\n\n     {displayTasksToday}\n     \n      </div>\n     \n      \n    );\n    \n  }\n}\n//<p>this class is {classes}</p>\n//export default Radium(App);\nexport default App\n//<p className={rocky[classes]}>Things to Do!</p>\n\n\n\n//using css modules on multiple classNames \n//{classNames({[styles.foo]: true, [styles.bar]: true})}\n//<p className={classNames({[rocky[classes]]: true, [rocky.red]: true})}>Things to Do!</p>\n\n\n\n\n/*Template for Bootstrap\n<React.Fragment>\n\n\n    <Header />\n    \n    <main className=\"my-5 py-5\">\n      <Container className=\"px-0\">\n        \n        <Row noGutters className=\"pt-2 pt-md-5 w-100 px-4 px-xl-0 position-relative\">\n        \n          <Col xs={{ order: 2 }} md={{ size: 4, order: 1 }} tag=\"aside\" className=\"pb-5 mb-5 pb-md-0 mb-md-0 mx-auto mx-md-0\">\n          \n\n            <SideCard />\n          </Col>\n          \n          <Col xs={{ order: 1 }} md={{ size: 7, offset: 1 }} tag=\"section\" className=\"py-5 mb-5 py-md-0 mb-md-0\">\n            <Post />\n          </Col>\n          \n        </Row>\n      </Container>\n    </main>\n    \n  </React.Fragment>\n  */"]},"metadata":{},"sourceType":"module"}
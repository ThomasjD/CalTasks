{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Creation/WeeklyTimeBudget/WeeklyTimeBudget.js\";\nimport React, { Component } from 'react';\nimport DailyTimeBudget from '../DailyTimeBudget/DailyTimeBudget';\nimport classes from './WeeklyTimeBudget.module.css'; //hygiene, traveling, packing,wating\n//each day have a predetermined amt of time for each category\n//then each day you can balance it according to 24 hours\n//after balancing for each day, you have to go back to balance the weekly total\n//24 hours a day //broken down into .5 hour\n//\n\nclass weeklyTimeBudget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalWeekHours: 168,\n      hoursPerDay: 24,\n      weeklyBudget: {\n        sleep: 7,\n        exercise: 7,\n        work: 49,\n        free: 7,\n        errands: 14,\n        getReady: 28,\n        totalHours: 168\n      }\n    };\n\n    this.addHourToActivity = activity => {\n      const oldHourCount = this.activityWeekCategories.totalHours; //const oldHourCount = this.state.totalWeekHours;\n\n      const updatedHourCount = oldHourCount + 1; //upgrade the ingredients count when adding more\n\n      const updatedWeeklyBudget = _objectSpread({}, this.state.weeklyBudget);\n\n      updatedWeeklyBudget[activity] = updatedHourCount; // //cost for 1 new ingredient aded\n      // const hourAddition = INGREDIENT_PRICES[activity];\n      // //Calculate the new price after new ingredient added\n      // const oldTotalWeekHours= this.state.totalWeekHours;\n      // const newPrice = oldPrice + priceAddition;\n      //upgrade the ingredients count & total price when adding more\n      //this.setState({ ingredients: updatedHourCount }); //ingredients now contains updated unit # of ingrediant just added\n      //pass in the new ingredients list so that it can calculate the total price\n      //this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.thisWeek = new DailyTimeBudget();\n    this.activityWeekCategories = this.thisWeek.activityWeekCategories;\n  }\n\n  render() {\n    let displayDailyTimeBudget = null;\n    console.log(Object.keys(this.activityWeekCategories));\n    displayDailyTimeBudget = Object.keys(this.activityWeekCategories).map(eachCategory => React.createElement(DailyTimeBudget, {\n      key: eachCategory.concat(eachCategory),\n      activity: eachCategory,\n      hours: this.activityWeekCategories[eachCategory],\n      decrease: this.deductHourToActivity,\n      add: this.addHourToActivity(eachCategory),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: classes.WeeklyTimeBudget,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, displayDailyTimeBudget);\n  }\n\n}\n\nexport default weeklyTimeBudget; // Monday: {},\n//   Tuesday: {},\n//   Wednesday: {},\n//   Thursday: {},\n//   Friday: {},\n//   Saturday: {},\n//   Sunday: {},","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Creation/WeeklyTimeBudget/WeeklyTimeBudget.js"],"names":["React","Component","DailyTimeBudget","classes","weeklyTimeBudget","constructor","props","state","totalWeekHours","hoursPerDay","weeklyBudget","sleep","exercise","work","free","errands","getReady","totalHours","addHourToActivity","activity","oldHourCount","activityWeekCategories","updatedHourCount","updatedWeeklyBudget","thisWeek","render","displayDailyTimeBudget","console","log","Object","keys","map","eachCategory","concat","deductHourToActivity","WeeklyTimeBudget"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,OAAP,MAAoB,+BAApB,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACvCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAMnBC,KANmB,GAMX;AACNC,MAAAA,cAAc,EAAE,GADV;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAE,CADK;AAEZC,QAAAA,QAAQ,EAAE,CAFE;AAGZC,QAAAA,IAAI,EAAE,EAHM;AAIZC,QAAAA,IAAI,EAAE,CAJM;AAKZC,QAAAA,OAAO,EAAE,EALG;AAMZC,QAAAA,QAAQ,EAAE,EANE;AAOZC,QAAAA,UAAU,EAAE;AAPA;AAJR,KANW;;AAAA,SAqBnBC,iBArBmB,GAqBCC,QAAQ,IAAI;AAC9B,YAAMC,YAAY,GAAG,KAAKC,sBAAL,CAA4BJ,UAAjD,CAD8B,CAE9B;;AACA,YAAMK,gBAAgB,GAAGF,YAAY,GAAG,CAAxC,CAH8B,CAK9B;;AACA,YAAMG,mBAAmB,qBACpB,KAAKhB,KAAL,CAAWG,YADS,CAAzB;;AAIAa,MAAAA,mBAAmB,CAACJ,QAAD,CAAnB,GAAgCG,gBAAhC,CAV8B,CAY9B;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACD,KA7CkB;;AAEjB,SAAKE,QAAL,GAAgB,IAAItB,eAAJ,EAAhB;AACA,SAAKmB,sBAAL,GAA8B,KAAKG,QAAL,CAAcH,sBAA5C;AACD;;AA2CDI,EAAAA,MAAM,GAAG;AACP,QAAIC,sBAAsB,GAAG,IAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAY,KAAKT,sBAAjB,CAAZ;AAEAK,IAAAA,sBAAsB,GAAGG,MAAM,CAACC,IAAP,CACvB,KAAKT,sBADkB,EAEvBU,GAFuB,CAEnBC,YAAY,IAChB,oBAAC,eAAD;AACE,MAAA,GAAG,EAAEA,YAAY,CAACC,MAAb,CAAoBD,YAApB,CADP;AAEE,MAAA,QAAQ,EAAEA,YAFZ;AAGE,MAAA,KAAK,EAAE,KAAKX,sBAAL,CAA4BW,YAA5B,CAHT;AAIE,MAAA,QAAQ,EAAE,KAAKE,oBAJjB;AAKE,MAAA,GAAG,EAAE,KAAKhB,iBAAL,CAAuBc,YAAvB,CALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHuB,CAAzB;AAYA,WACE;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAACgC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CT,sBAA3C,CADF;AAGD;;AAnEsC;;AAsEzC,eAAetB,gBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport DailyTimeBudget from '../DailyTimeBudget/DailyTimeBudget';\nimport classes from './WeeklyTimeBudget.module.css';\n\n//hygiene, traveling, packing,wating\n\n//each day have a predetermined amt of time for each category\n//then each day you can balance it according to 24 hours\n//after balancing for each day, you have to go back to balance the weekly total\n\n//24 hours a day //broken down into .5 hour\n//\nclass weeklyTimeBudget extends Component {\n  constructor(props) {\n    super(props);\n    this.thisWeek = new DailyTimeBudget();\n    this.activityWeekCategories = this.thisWeek.activityWeekCategories;\n  }\n\n  state = {\n    totalWeekHours: 168,\n\n    hoursPerDay: 24,\n    weeklyBudget: {\n      sleep: 7,\n      exercise: 7,\n      work: 49,\n      free: 7,\n      errands: 14,\n      getReady: 28,\n      totalHours: 168\n    }\n  };\n\n  addHourToActivity = activity => {\n    const oldHourCount = this.activityWeekCategories.totalHours;\n    //const oldHourCount = this.state.totalWeekHours;\n    const updatedHourCount = oldHourCount + 1;\n\n    //upgrade the ingredients count when adding more\n    const updatedWeeklyBudget = {\n      ...this.state.weeklyBudget\n    };\n\n    updatedWeeklyBudget[activity] = updatedHourCount;\n\n    // //cost for 1 new ingredient aded\n    // const hourAddition = INGREDIENT_PRICES[activity];\n\n    // //Calculate the new price after new ingredient added\n    // const oldTotalWeekHours= this.state.totalWeekHours;\n    // const newPrice = oldPrice + priceAddition;\n\n    //upgrade the ingredients count & total price when adding more\n    //this.setState({ ingredients: updatedHourCount }); //ingredients now contains updated unit # of ingrediant just added\n    //pass in the new ingredients list so that it can calculate the total price\n\n    //this.updatePurchaseState(updatedIngredients);\n  };\n\n  render() {\n    let displayDailyTimeBudget = null;\n    console.log(Object.keys(this.activityWeekCategories));\n\n    displayDailyTimeBudget = Object.keys(\n      this.activityWeekCategories\n    ).map(eachCategory => (\n      <DailyTimeBudget\n        key={eachCategory.concat(eachCategory)}\n        activity={eachCategory}\n        hours={this.activityWeekCategories[eachCategory]}\n        decrease={this.deductHourToActivity}\n        add={this.addHourToActivity(eachCategory)}\n      />\n    ));\n\n    return (\n      <div className={classes.WeeklyTimeBudget}>{displayDailyTimeBudget}</div>\n    );\n  }\n}\n\nexport default weeklyTimeBudget;\n\n// Monday: {},\n//   Tuesday: {},\n//   Wednesday: {},\n//   Thursday: {},\n//   Friday: {},\n//   Saturday: {},\n//   Sunday: {},\n"]},"metadata":{},"sourceType":"module"}
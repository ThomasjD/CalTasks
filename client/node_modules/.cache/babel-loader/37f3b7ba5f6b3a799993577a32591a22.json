{"ast":null,"code":"import _slicedToArray from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/ViewContent/TodayTasks/TodayTasks.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport TodayTask from './TodayTask/TodayTask';\nimport student from '../../../containers/Student.css';\nimport TasksContext from '../../../context/tasksContext';\n\nconst TodayTasks = props => {\n  //get props from app.js, run through each element in state to feed into <Task>\n  //todo,deadline,location,key,click, changed sent to <Task>\n  const tasksContext = useContext(TasksContext);\n\n  const renderTableHeaderHandler = () => {\n    if (tasksContext.tasksData.tasksData) {\n      let header = Object.keys(tasksContext.tasksData.tasksData.TodayTasksHeader);\n      return header.map((key, index) => {\n        if (key === 'id') {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, \"Click\\xA0to\\xA0Delete\");\n        } else {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, key.toUpperCase());\n        }\n      });\n    }\n  }; //todayTaskChanged={props.changed}\n\n\n  const todayTasksHandler = () => {\n    return tasksContext.tasksData.tasksData.Monday.map((monday, index) => {\n      let functionChoiceDelete = null;\n      let functionChoiceChange = null; //const { id, task } = monday;\n\n      if (this.props.everything.contentChoice === '2') {\n        functionChoiceDelete = '5';\n        functionChoiceChange = '6';\n      } else {\n        functionChoiceDelete = '7';\n        functionChoiceChange = '8';\n      }\n\n      return React.createElement(React.Fragment, {\n        key: monday.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(TodayTask, {\n        id: monday.id,\n        task: monday.task,\n        deleteTodayTask: props.clicked,\n        click: event => tasksContext.dataRequestHandler(event, 'tasks', functionChoiceDelete, 'index', index),\n        changed: event => tasksContext.dataRequestHandler(event, 'tasks', functionChange, 'id', monday.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    });\n  };\n\n  const _useState = useState({\n    lastHeader: props.monday\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        lastTaskHeader = _useState2[0],\n        setLastTaskHeader = _useState2[1];\n\n  useEffect(() => {\n    // console.log(`this is the state of alert ${onCallDelete.signalAlert}`);\n    // if (onCallDelete.signalAlert === 'true') {\n    if (props.monday.length === 1) {\n      //let savedHeader = Object.keys(props.tasks[0]);\n      //let savedHeader = props.tasks\n      console.log(props.monday);\n      setLastTaskHeader({\n        lastHeader: props.monday\n      });\n      console.log(\"this is the last task alert \".concat(lastTaskHeader.lastHeader));\n    }\n\n    if (props.reRenderTodayTasks === true) {// alert('Are you sure you want to delete this task?');\n      //return (props.reRender = {})\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" Today's Tasks\"), React.createElement(\"table\", {\n    id: \"students\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, renderTableHeaderHandler()), todayTasksHandler())));\n};\n\nexport default TodayTasks;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/ViewContent/TodayTasks/TodayTasks.js"],"names":["React","useState","useEffect","useContext","TodayTask","student","TasksContext","TodayTasks","props","tasksContext","renderTableHeaderHandler","tasksData","header","Object","keys","TodayTasksHeader","map","key","index","toUpperCase","todayTasksHandler","Monday","monday","functionChoiceDelete","functionChoiceChange","everything","contentChoice","id","task","clicked","event","dataRequestHandler","functionChange","lastHeader","lastTaskHeader","setLastTaskHeader","length","console","log","reRenderTodayTasks"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport TodayTask from './TodayTask/TodayTask';\nimport student from '../../../containers/Student.css';\nimport TasksContext from '../../../context/tasksContext';\n\nconst TodayTasks = props => {\n  //get props from app.js, run through each element in state to feed into <Task>\n  //todo,deadline,location,key,click, changed sent to <Task>\n  const tasksContext = useContext(TasksContext);\n\n  const renderTableHeaderHandler = () => {\n    if (tasksContext.tasksData.tasksData) {\n      let header = Object.keys(\n        tasksContext.tasksData.tasksData.TodayTasksHeader\n      );\n      return header.map((key, index) => {\n        if (key === 'id') {\n          return <th key={index}>Click to Delete</th>;\n        } else {\n          return <th key={index}>{key.toUpperCase()}</th>;\n        }\n      });\n    }\n  };\n  //todayTaskChanged={props.changed}\n  const todayTasksHandler = () => {\n    return tasksContext.tasksData.tasksData.Monday.map((monday, index) => {\n      let functionChoiceDelete = null;\n      let functionChoiceChange = null;\n      //const { id, task } = monday;\n      if (this.props.everything.contentChoice === '2') {\n        functionChoiceDelete = '5';\n        functionChoiceChange = '6';\n      } else {\n        functionChoiceDelete = '7';\n        functionChoiceChange = '8';\n      }\n      return (\n        <React.Fragment key={monday.id}>\n          <TodayTask\n            id={monday.id}\n            task={monday.task}\n            deleteTodayTask={props.clicked}\n            click={event =>\n              tasksContext.dataRequestHandler(\n                event,\n                'tasks',\n                functionChoiceDelete,\n                'index',\n                index\n              )\n            }\n            changed={event =>\n              tasksContext.dataRequestHandler(\n                event,\n                'tasks',\n                functionChange,\n                'id',\n                monday.id\n              )\n            }\n          />\n        </React.Fragment>\n      );\n    });\n  };\n\n  const [lastTaskHeader, setLastTaskHeader] = useState({\n    lastHeader: props.monday\n  });\n  useEffect(() => {\n    // console.log(`this is the state of alert ${onCallDelete.signalAlert}`);\n    // if (onCallDelete.signalAlert === 'true') {\n\n    if (props.monday.length === 1) {\n      //let savedHeader = Object.keys(props.tasks[0]);\n      //let savedHeader = props.tasks\n      console.log(props.monday);\n      setLastTaskHeader({ lastHeader: props.monday });\n\n      console.log(`this is the last task alert ${lastTaskHeader.lastHeader}`);\n    }\n    if (props.reRenderTodayTasks === true) {\n      // alert('Are you sure you want to delete this task?');\n      //return (props.reRender = {})\n    }\n  });\n\n  return (\n    <div>\n      <h1 id=\"title\"> Today's Tasks</h1>\n      <table id=\"students\">\n        <tbody>\n          <tr>{renderTableHeaderHandler()}</tr>\n          {todayTasksHandler()}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TodayTasks;\n"]},"metadata":{},"sourceType":"module"}
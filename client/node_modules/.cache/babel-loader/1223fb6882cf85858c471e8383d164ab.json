{"ast":null,"code":"import _defineProperty from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/RightCockpit.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from '../../components/Cockpit/Cockpit';\nimport Cockpit2 from '../../components/Cockpit/Cockpit2';\nimport Navbar2 from '../../components/Cockpit/Navbar/Navbar2';\nimport Tasks from '../../components/Tasks/Tasks';\nimport TodayTasks from '../../components/TodayTasks/TodayTasks';\nimport Lessons from '../../components/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContent';\nimport NewTask from '../../components/Creation/newTask';\nimport DisplayContent from './displayContent'; //import Syllabus from './Syllabus';\n//import miniViewHandler from './miniViewHandler';\n\nclass RightCockpit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [{\n        id: 'qrwrwq',\n        todo: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      }, {\n        id: 'egewhw',\n        todo: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      }, {\n        id: 'asfasv',\n        todo: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }],\n      Monday: [{\n        id: 'morning',\n        timeOfDay: '',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon',\n        timeOfDay: '',\n        task: 'eat lunch'\n      }, {\n        id: 'evening',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      newTaskTitle: '',\n      newTaskLocation: '',\n      isGoing: true,\n      numberOfGuests: 2,\n      maxReact: [{\n        id: 'xvlwil',\n        lesson: '90. (for props Changes)',\n        completion: false\n      }, {\n        id: 'bbbskk',\n        lesson: '91. (for state Changes)',\n        completion: false\n      }, {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }],\n      contentChoice: '0',\n      showCockpit: true,\n      lastHeader: [],\n      lastTodayTasksHeader: [],\n      lastLessonHeader: [],\n      reRenderTasks: false\n    };\n\n    this.contentViewHandler = event => {\n      let newViewChoice = event.target.value; //Comparing new contentChoice with previous contentChoice\n      //if newContentChoice === oldContentChoice\n      //turn off the view\n\n      this.setState({\n        contentChoice: newViewChoice\n      });\n\n      if (newViewChoice === this.state.contentChoice) {\n        return this.setState({\n          contentChoice: '0'\n        });\n      } else {\n        switch (newViewChoice) {\n          case '1':\n            //All tasks\n            if (this.state.tasks != 0) {\n              this.setState({\n                lastHeader: this.state.tasks[0]\n              });\n            } else {\n              this.setState({\n                lastHeader: this.state.lastHeader\n              });\n            }\n\n            break;\n\n          case '2':\n            //TodaysTasks\n            if (this.state.Monday != 0) {\n              this.setState({\n                lastTodayTasksHeader: this.state.Monday[0]\n              });\n            } else {\n              this.setState({\n                lastTodayTasksHeader: this.state.lastTodayTasksHeader\n              });\n            }\n\n            break;\n\n          case '3':\n            //Syllabus\n            if (this.state.maxReact.length != 0) {\n              this.setState({\n                lastLessonHeader: this.state.maxReact[0]\n              });\n            } else {\n              this.setState({\n                lastLessonHeader: this.state.lastLessonHeader\n              });\n            }\n\n            break;\n        }\n      }\n    };\n\n    this.deleteTaskhandler = taskIndex => {\n      alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTasks: true\n      }); //let tasks = [];\n      // switch (this.state.contentChoice) {\n      //   case '1':\n      //      tasks = [...this.state.tasks];\n      //   case '2':\n      //      tasks = [...this.state.Monday];\n      //   case '3':\n      //      tasks = [...this.state.maxReact];\n      // }\n      //get tasks array\n\n      const tasks = [...this.state.tasks]; //splice task of interst\n\n      tasks.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        tasks: tasks\n      }); //this.setState({ showTasksCounter: false });\n    };\n\n    this.deleteTodayTaskhandler = taskIndex => {\n      alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTodayTasks: true\n      }); //get tasks array\n\n      const Monday = [...this.state.Monday]; //splice task of interst\n\n      Monday.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        Monday: Monday\n      }); //this.setState({ showTasksCounter: false });\n    };\n\n    this.taskChangeHandler = (event, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      const foundTaskId = this.state.tasks.findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state.tasks[foundTaskId]);\n\n      updatedTask.todo = event.target.value; //pull out the states tasks array\n\n      const tasks = [...this.state.tasks]; //update the task with id of interest w/ new task description\n\n      tasks[foundTaskId] = updatedTask; //update the state\n\n      this.setState({\n        tasks: tasks\n      });\n    };\n\n    this.newTaskHandler = event => {\n      console.log(event.target.name);\n\n      switch (event.target.name) {\n        case 'newTaskTitle':\n          console.log('got it here in newTasktitle');\n          break;\n\n        case 'location':\n          console.log('nbanbanbanba nba');\n          break;\n\n        case 'deadline':\n          console.log('I am in the deadline baby');\n          break;\n      }\n    };\n\n    this.newTaskLocationHandler = event => {\n      // let location = event.target.value;\n      // console.log(event.name);\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.todayTaskChangeHandler = (event, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      const foundTaskId = this.state.Monday.findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state.Monday[foundTaskId]);\n\n      updatedTask.task = event.target.value; //pull out the states tasks array\n\n      const Monday = [...this.state.Monday]; //update the task with id of interest w/ new task description\n\n      Monday[foundTaskId] = updatedTask; //update the state\n\n      this.setState({\n        Monday: Monday\n      });\n    };\n\n    this.deleteLessonhandler = taskIndex => {\n      alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTasks: true\n      }); //get tasks array\n\n      const lessons = [...this.state.maxReact]; //splice task of interst\n\n      lessons.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        maxReact: lessons\n      });\n    };\n\n    this.lessonChangeHandler = (event, taskChangeId) => {\n      const foundTaskId = this.state.maxReact.findIndex(currentId => {\n        return currentId.id === taskChangeId;\n      }); //createnew task item to put into array\n\n      const updatedLessons = _objectSpread({}, this.state.maxReact[foundTaskId]); //using updated values to define the lesson of the particular pulled out lesson\n\n\n      updatedLessons.lesson = event.target.value; //pull out of states maxReact array\n\n      const lessons = [...this.state.maxReact]; //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n\n      lessons[foundTaskId] = updatedLessons; //final update of lessons\n\n      this.setState({\n        maxReact: lessons\n      });\n    };\n  }\n\n  render() {\n    let viewOptions = null;\n\n    if (this.state.showCockpit == true) {\n      viewOptions = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Cockpit, {\n        title: this.props.appTitle,\n        allTasksClicked: this.toggleShowTasksHandler,\n        tasksLength: this.state.tasks.length,\n        todayTasksClicked: this.displayTodayScheduleHandler,\n        deleteCockpit: () => {\n          this.setState({\n            showCockpit: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }));\n    }\n\n    let displayCockpit = React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex flex-row \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card text-white bg-info m-1 p-1 col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, viewOptions)), React.createElement(\"div\", {\n      className: \"card bg-light m-1 p-1 col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(DisplayContent, {\n      everything: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    })))));\n    let navbar = React.createElement(Navbar2, {\n      newTaskInfoComing: event => this.newTaskHandler(event),\n      title: this.props.appTitle,\n      tasksLength: this.state.tasks.length,\n      clicked: event => this.contentViewHandler(event),\n      clickedSyllabus: event => this.contentViewHandler(event),\n      clickedNewTask: event => this.contentViewHandler(event),\n      deleteCockpit: () => {\n        this.setState({\n          showCockpit: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, this.props.newTaskInfoComing);\n    let viewContent = React.createElement(ViewContent, {\n      viewContent: event => this.contentViewHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, navbar, viewContent, displayCockpit);\n  }\n\n}\n\nexport default RightCockpit; //{displayOptions}\n//<Syllabus syllabus={this.setState} />\n//","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/RightCockpit.js"],"names":["React","Component","classes","Cockpit","Cockpit2","Navbar2","Tasks","TodayTasks","Lessons","ViewContent","NewTask","DisplayContent","RightCockpit","constructor","props","state","tasks","id","todo","deadline","location","Monday","timeOfDay","task","newTaskTitle","newTaskLocation","isGoing","numberOfGuests","maxReact","lesson","completion","contentChoice","showCockpit","lastHeader","lastTodayTasksHeader","lastLessonHeader","reRenderTasks","contentViewHandler","event","newViewChoice","target","value","setState","length","deleteTaskhandler","taskIndex","alert","splice","deleteTodayTaskhandler","reRenderTodayTasks","taskChangeHandler","taskChangedId","foundTaskId","findIndex","currentId","updatedTask","newTaskHandler","console","log","name","newTaskLocationHandler","type","checked","todayTaskChangeHandler","deleteLessonhandler","lessons","lessonChangeHandler","taskChangeId","updatedLessons","render","viewOptions","appTitle","toggleShowTasksHandler","displayTodayScheduleHandler","displayCockpit","navbar","newTaskInfoComing","viewContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from '../../components/Cockpit/Cockpit';\nimport Cockpit2 from '../../components/Cockpit/Cockpit2';\nimport Navbar2 from '../../components/Cockpit/Navbar/Navbar2';\nimport Tasks from '../../components/Tasks/Tasks';\nimport TodayTasks from '../../components/TodayTasks/TodayTasks';\nimport Lessons from '../../components/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContent';\nimport NewTask from '../../components/Creation/newTask';\nimport DisplayContent from './displayContent';\n//import Syllabus from './Syllabus';\n//import miniViewHandler from './miniViewHandler';\n\nclass RightCockpit extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    tasks: [\n      {\n        id: 'qrwrwq',\n        todo: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      },\n      {\n        id: 'egewhw',\n        todo: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      },\n      {\n        id: 'asfasv',\n        todo: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }\n    ],\n    Monday: [\n      { id: 'morning', timeOfDay: '', task: 'comprar comida' },\n      { id: 'afternoon', timeOfDay: '', task: 'eat lunch' },\n      { id: 'evening', timeOfDay: '', task: 'play ball' }\n    ],\n    newTaskTitle: '',\n    newTaskLocation: '',\n    isGoing: true,\n    numberOfGuests: 2,\n    maxReact: [\n      { id: 'xvlwil', lesson: '90. (for props Changes)', completion: false },\n      { id: 'bbbskk', lesson: '91. (for state Changes)', completion: false },\n      {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }\n    ],\n    contentChoice: '0',\n    showCockpit: true,\n    lastHeader: [],\n    lastTodayTasksHeader: [],\n    lastLessonHeader: [],\n    reRenderTasks: false\n  };\n\n  contentViewHandler = event => {\n    let newViewChoice = event.target.value;\n\n    //Comparing new contentChoice with previous contentChoice\n    //if newContentChoice === oldContentChoice\n    //turn off the view\n\n    this.setState({ contentChoice: newViewChoice });\n    if (newViewChoice === this.state.contentChoice) {\n      return this.setState({ contentChoice: '0' });\n    } else {\n      switch (newViewChoice) {\n        case '1': //All tasks\n          if (this.state.tasks != 0) {\n            this.setState({ lastHeader: this.state.tasks[0] });\n          } else {\n            this.setState({ lastHeader: this.state.lastHeader });\n          }\n          break;\n\n        case '2': //TodaysTasks\n          if (this.state.Monday != 0) {\n            this.setState({ lastTodayTasksHeader: this.state.Monday[0] });\n          } else {\n            this.setState({\n              lastTodayTasksHeader: this.state.lastTodayTasksHeader\n            });\n          }\n          break;\n\n        case '3': //Syllabus\n          if (this.state.maxReact.length != 0) {\n            this.setState({ lastLessonHeader: this.state.maxReact[0] });\n          } else {\n            this.setState({ lastLessonHeader: this.state.lastLessonHeader });\n          }\n\n          break;\n      }\n    }\n  };\n\n  //delete a task\n  deleteTaskhandler = taskIndex => {\n    alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTasks: true });\n    //let tasks = [];\n    // switch (this.state.contentChoice) {\n    //   case '1':\n    //      tasks = [...this.state.tasks];\n\n    //   case '2':\n    //      tasks = [...this.state.Monday];\n\n    //   case '3':\n    //      tasks = [...this.state.maxReact];\n    // }\n\n    //get tasks array\n    const tasks = [...this.state.tasks];\n\n    //splice task of interst\n    tasks.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ tasks: tasks });\n\n    //this.setState({ showTasksCounter: false });\n  };\n\n  deleteTodayTaskhandler = taskIndex => {\n    alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTodayTasks: true });\n\n    //get tasks array\n    const Monday = [...this.state.Monday];\n\n    //splice task of interst\n    Monday.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ Monday: Monday });\n\n    //this.setState({ showTasksCounter: false });\n  };\n\n  //dynamic edit task\n  taskChangeHandler = (event, taskChangedId) => {\n    //find the task that matches the taskChangedId\n    const foundTaskId = this.state.tasks.findIndex(currentId => {\n      return currentId.id === taskChangedId;\n    });\n\n    //create new task item that we will put into array\n    const updatedTask = { ...this.state.tasks[foundTaskId] };\n    updatedTask.todo = event.target.value;\n\n    //pull out the states tasks array\n    const tasks = [...this.state.tasks];\n\n    //update the task with id of interest w/ new task description\n    tasks[foundTaskId] = updatedTask;\n\n    //update the state\n    this.setState({ tasks: tasks });\n  };\n\n  //dynamic edit task for Today (Monday)\n  newTaskHandler = event => {\n    console.log(event.target.name);\n    switch (event.target.name) {\n      case 'newTaskTitle':\n        console.log('got it here in newTasktitle');\n        break;\n      case 'location':\n        console.log('nbanbanbanba nba');\n        break;\n      case 'deadline':\n        console.log('I am in the deadline baby');\n        break;\n    }\n  };\n  newTaskLocationHandler = event => {\n    // let location = event.target.value;\n    // console.log(event.name);\n\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  todayTaskChangeHandler = (event, taskChangedId) => {\n    //find the task that matches the taskChangedId\n    const foundTaskId = this.state.Monday.findIndex(currentId => {\n      return currentId.id === taskChangedId;\n    });\n\n    //create new task item that we will put into array\n    const updatedTask = { ...this.state.Monday[foundTaskId] };\n\n    updatedTask.task = event.target.value;\n\n    //pull out the states tasks array\n    const Monday = [...this.state.Monday];\n\n    //update the task with id of interest w/ new task description\n    Monday[foundTaskId] = updatedTask;\n\n    //update the state\n    this.setState({ Monday: Monday });\n  };\n\n  deleteLessonhandler = taskIndex => {\n    alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTasks: true });\n\n    //get tasks array\n    const lessons = [...this.state.maxReact];\n\n    //splice task of interst\n    lessons.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ maxReact: lessons });\n  };\n\n  lessonChangeHandler = (event, taskChangeId) => {\n    const foundTaskId = this.state.maxReact.findIndex(currentId => {\n      return currentId.id === taskChangeId;\n    });\n\n    //createnew task item to put into array\n    const updatedLessons = { ...this.state.maxReact[foundTaskId] };\n\n    //using updated values to define the lesson of the particular pulled out lesson\n    updatedLessons.lesson = event.target.value;\n\n    //pull out of states maxReact array\n    const lessons = [...this.state.maxReact];\n\n    //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n    lessons[foundTaskId] = updatedLessons;\n\n    //final update of lessons\n    this.setState({ maxReact: lessons });\n  };\n\n  render() {\n    let viewOptions = null;\n    if (this.state.showCockpit == true) {\n      viewOptions = (\n        <React.Fragment>\n          <Cockpit\n            title={this.props.appTitle}\n            allTasksClicked={this.toggleShowTasksHandler}\n            tasksLength={this.state.tasks.length}\n            todayTasksClicked={this.displayTodayScheduleHandler}\n            deleteCockpit={() => {\n              this.setState({ showCockpit: false });\n            }}\n          />\n        </React.Fragment>\n      );\n    }\n\n    let displayCockpit = (\n      <div className=\"container\">\n        <div className=\"d-flex flex-row \">\n          <div className=\"card text-white bg-info m-1 p-1 col-3\">\n            <div className=\"p-1\">{viewOptions}</div>\n          </div>\n          <div className=\"card bg-light m-1 p-1 col-9\">\n            <div className=\"p-1 \">\n              <DisplayContent everything={this.state} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    let navbar = (\n      <Navbar2\n        newTaskInfoComing={event => this.newTaskHandler(event)}\n        title={this.props.appTitle}\n        tasksLength={this.state.tasks.length}\n        clicked={event => this.contentViewHandler(event)}\n        clickedSyllabus={event => this.contentViewHandler(event)}\n        clickedNewTask={event => this.contentViewHandler(event)}\n        deleteCockpit={() => {\n          this.setState({ showCockpit: false });\n        }}\n      >\n        {this.props.newTaskInfoComing}\n      </Navbar2>\n    );\n\n    let viewContent = (\n      <ViewContent viewContent={event => this.contentViewHandler(event)} />\n    );\n    return (\n      <React.Fragment>\n        {navbar}\n        {viewContent}\n        {displayCockpit}\n      </React.Fragment>\n    );\n  }\n}\nexport default RightCockpit;\n//{displayOptions}\n//<Syllabus syllabus={this.setState} />\n\n//\n"]},"metadata":{},"sourceType":"module"}
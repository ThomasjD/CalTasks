{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/CalendarData.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport DatePicker from 'react-datepicker';\nimport numToDay from '../../components/Calendar/numToDay';\nimport StoreContext from '../../context/StoreDataContext';\nimport { format, compareAsc } from 'date-fns';\n\nclass CalendarData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showChooseDate: false,\n      days: {\n        '200204Tue': {\n          unscheduledtasks: [{\n            id: 'task8',\n            title: 'homework;'\n          }]\n        }\n      }\n    };\n\n    this.createDayObjName = event => {\n      event.preventDefault();\n      alert('inside createDayObjName');\n      let day = this.state.startTimeDate.day;\n      let date = this.state.startTimeDate.toLocalString;\n      console.log(date);\n    };\n\n    this.newTaskHandler = value => {\n      let newTask = {\n        id: value.task,\n        //.concat(newEvent.dayObjName),\n        // timeOfDay: startTimeDate.time,\n        objName: value.dayObjName,\n        task: value.eventTitle,\n        note: value.eventNote,\n        deadline: value.deadline,\n        category: value.eventCategory // assignedTimeStart: startTimeDate,\n        // assignedTimeStop: newEvent.finishTimeDate\n\n      };\n      let dayObjName = value.dayObjName; // let dataLocation = this.context.dataRequestDetails.dataLocation;\n\n      let dataLocation = value.dayObjName;\n      let currentDaysObj = this.state.days; //if there there is NO obj for that day\n\n      if (typeof currentDaysObj[dayObjName] == 'undefined') {\n        let newEvent = null;\n        this.newDayObj(dayObjName, newTask, newEvent);\n        console.log('Inside if of newEventHandler() ');\n      } else {\n        currentDaysObj[dayObjName].unscheduledtasks.push(newTask);\n        console.log(currentDaysObj[dayObjName]);\n        this.setState({\n          days: currentDaysObj\n        }, () => console.log('Inside of newevent() setState  '));\n      }\n    };\n\n    this.newEventHandler = value => {\n      let newEvent = this.context.dataRequestDetails.value;\n      let newEventObj = {\n        id: value.eventId,\n        //.concat(newEvent.dayObjName),\n        // timeOfDay: startTimeDate.time,\n        objName: value.dayObjName,\n        eventTitle: value.eventTitle,\n        eventNote: value.eventNote,\n        deadline: value.deadline,\n        category: value.eventCategory // assignedTimeStart: startTimeDate,\n        // assignedTimeStop: newEvent.finishTimeDate\n\n      }; //let startTimeDate = this.context.dataRequestDetails.value.startTimeDate;\n\n      let dayObjName = this.context.dataRequestDetails.value.dayObjName; // let dataLocation = this.context.dataRequestDetails.dataLocation;\n\n      let dataLocation = newEvent.dayObjName;\n      let currentDaysObj = this.state.days; //if there there is NO obj for that day\n\n      if (typeof currentDaysObj[dayObjName] == 'undefined') {\n        let newTask = null;\n        this.newDayObj(dayObjName, newTask, newEventObj);\n        console.log('Inside if of newEventHandler() ');\n      } else {\n        //if there is an obj for that day\n        // let newTask = { id: 'task243', title: 'groceries' };\n        currentDaysObj[dayObjName].unscheduledtasks.push(newEventObj);\n        console.log(currentDaysObj[dayObjName]);\n        this.setState({\n          days: currentDaysObj\n        }, () => console.log('Inside of newevent() setState  ')); //() => this.context.dataReceiverHandler(this.state)\n        // console.log(this.state)\n        // );\n      }\n    };\n\n    this.newDayObj = (dayObjName, newTask, newEvent) => {\n      console.log('inside newDayObj '); //empty obj if dayObjName doesn't exist\n\n      let newDayObj = {\n        unScheduledTask: newTask,\n        unScheduledEvent: newEvent,\n        repeats: ['hello', 'there'],\n        hours: {\n          '00:00': '',\n          '00:30': '',\n          '01:00': '',\n          '01:30': '',\n          '02:00': '',\n          '02:30': '',\n          '03:00': '',\n          '03:30': '',\n          '04:00': '',\n          '04:30': '',\n          '05:00': '',\n          '05:30': '',\n          '06:00': '',\n          '06:30': '',\n          '07:00': '',\n          '08:30': '',\n          '08:00': '',\n          '08:30': '',\n          '09:00': '',\n          '09:30': '',\n          '10:00': '',\n          '10:30': '',\n          '11:00': '',\n          '11:30': '',\n          '12:00': '',\n          '12:30': '',\n          '13:00': '',\n          '13:30': '',\n          '14:00': '',\n          '14:30': '',\n          '15:00': '',\n          '15:30': '',\n          '16:00': '',\n          '16:30': '',\n          '17:00': '',\n          '17:30': '',\n          '18:00': '',\n          '18.30': '',\n          '19:00': '',\n          '19.30': '',\n          '20:00': '',\n          '20.30': '',\n          '21:00': '',\n          '21.30': '',\n          '02:00': '',\n          '22.30': '',\n          '23:00': '',\n          '23.30': '',\n          '24:00': '',\n          '24.30': ''\n        }\n      };\n\n      let updatedDayObj = _objectSpread({}, this.state.days, {\n        [dayObjName]: newDayObj\n      });\n\n      this.setState({\n        days: updatedDayObj\n      });\n    };\n  }\n\n  handleStartTimeDateChange(date) {\n    let currentShowStartTimeDate = this.state.showStartTimeDate;\n    let day = format(date, 'E');\n    let dateDigit = format(date, 'dd');\n    let year = format(date, 'yy');\n    let month = format(date, 'MM');\n    let dayObjName = year + month + dateDigit + day;\n    console.log(`day: ${day} type: ${typeof day}`);\n    console.log(`date: ${dateDigit} type: ${typeof dateDigit}`);\n    console.log(`year: ${year} type: ${typeof year}`);\n    console.log(`month: ${month} type: ${typeof month}`);\n    console.log(`dayObjName: ${dayObjName} type: ${typeof dayObjName}`);\n    let currentDaysObj = this.state.days; //if there there is NO obj for that day\n\n    if (typeof currentDaysObj[dayObjName] == 'undefined') {\n      this.newDayObj(dayObjName);\n    } else {\n      //if there is an obj for that day\n      let newTask = {\n        id: 'task243',\n        title: 'groceries'\n      };\n      currentDaysObj[dayObjName].unscheduledtasks.push(newTask);\n      console.log(currentDaysObj[dayObjName]);\n      this.setState({\n        days: currentDaysObj\n      }, () => console.log(this.state.days[dayObjName]));\n    }\n  }\n\n  render() {\n    console.dir(this.state);\n\n    if (this.context.dataRequestDetails && this.context.dataRequestDetails.typeOfData === 'events') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          //new Event\n          this.context.resetHandlerChoice(this.newEventHandler(this.context.dataRequestDetails.value));\n          break;\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    });\n  }\n\n}\n\nCalendarData.contextType = StoreContext;\nexport default CalendarData;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/CalendarData.js"],"names":["React","Component","DatePicker","numToDay","StoreContext","format","compareAsc","CalendarData","constructor","props","state","showChooseDate","days","unscheduledtasks","id","title","createDayObjName","event","preventDefault","alert","day","startTimeDate","date","toLocalString","console","log","newTaskHandler","value","newTask","task","objName","dayObjName","eventTitle","note","eventNote","deadline","category","eventCategory","dataLocation","currentDaysObj","newEvent","newDayObj","push","setState","newEventHandler","context","dataRequestDetails","newEventObj","eventId","unScheduledTask","unScheduledEvent","repeats","hours","updatedDayObj","handleStartTimeDateChange","currentShowStartTimeDate","showStartTimeDate","dateDigit","year","month","render","dir","typeOfData","handlerChoice","resetHandlerChoice","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport DatePicker from 'react-datepicker';\nimport numToDay from '../../components/Calendar/numToDay';\nimport StoreContext from '../../context/StoreDataContext';\n\nimport { format, compareAsc } from 'date-fns';\nclass CalendarData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newDayObj = (dayObjName, newTask, newEvent) => {\n      console.log('inside newDayObj ');\n      //empty obj if dayObjName doesn't exist\n      let newDayObj = {\n        unScheduledTask: newTask,\n        unScheduledEvent: newEvent,\n        repeats: ['hello', 'there'],\n        hours: {\n          '00:00': '',\n          '00:30': '',\n          '01:00': '',\n          '01:30': '',\n          '02:00': '',\n          '02:30': '',\n          '03:00': '',\n          '03:30': '',\n          '04:00': '',\n          '04:30': '',\n          '05:00': '',\n          '05:30': '',\n          '06:00': '',\n          '06:30': '',\n          '07:00': '',\n          '08:30': '',\n          '08:00': '',\n          '08:30': '',\n          '09:00': '',\n          '09:30': '',\n          '10:00': '',\n          '10:30': '',\n          '11:00': '',\n          '11:30': '',\n          '12:00': '',\n          '12:30': '',\n          '13:00': '',\n          '13:30': '',\n          '14:00': '',\n          '14:30': '',\n          '15:00': '',\n          '15:30': '',\n          '16:00': '',\n          '16:30': '',\n          '17:00': '',\n          '17:30': '',\n          '18:00': '',\n          '18.30': '',\n          '19:00': '',\n          '19.30': '',\n          '20:00': '',\n          '20.30': '',\n          '21:00': '',\n          '21.30': '',\n          '02:00': '',\n          '22.30': '',\n          '23:00': '',\n          '23.30': '',\n          '24:00': '',\n          '24.30': ''\n        }\n      };\n\n      let updatedDayObj = { ...this.state.days, [dayObjName]: newDayObj };\n      this.setState({ days: updatedDayObj });\n    };\n  }\n  state = {\n    showChooseDate: false,\n    days: {\n      '200204Tue': {\n        unscheduledtasks: [{ id: 'task8', title: 'homework;' }]\n      }\n    }\n  };\n  static contextType = StoreContext;\n  createDayObjName = event => {\n    event.preventDefault();\n    alert('inside createDayObjName');\n    let day = this.state.startTimeDate.day;\n\n    let date = this.state.startTimeDate.toLocalString;\n    console.log(date);\n  };\n\n  handleStartTimeDateChange(date) {\n    let currentShowStartTimeDate = this.state.showStartTimeDate;\n    let day = format(date, 'E');\n    let dateDigit = format(date, 'dd');\n    let year = format(date, 'yy');\n    let month = format(date, 'MM');\n    let dayObjName = year + month + dateDigit + day;\n\n    console.log(`day: ${day} type: ${typeof day}`);\n    console.log(`date: ${dateDigit} type: ${typeof dateDigit}`);\n    console.log(`year: ${year} type: ${typeof year}`);\n    console.log(`month: ${month} type: ${typeof month}`);\n    console.log(`dayObjName: ${dayObjName} type: ${typeof dayObjName}`);\n\n    let currentDaysObj = this.state.days;\n\n    //if there there is NO obj for that day\n    if (typeof currentDaysObj[dayObjName] == 'undefined') {\n      this.newDayObj(dayObjName);\n    } else {\n      //if there is an obj for that day\n\n      let newTask = { id: 'task243', title: 'groceries' };\n\n      currentDaysObj[dayObjName].unscheduledtasks.push(newTask);\n      console.log(currentDaysObj[dayObjName]);\n\n      this.setState(\n        {\n          days: currentDaysObj\n        },\n\n        () => console.log(this.state.days[dayObjName])\n      );\n    }\n  }\n\n  newTaskHandler = value => {\n    let newTask = {\n      id: value.task, //.concat(newEvent.dayObjName),\n      // timeOfDay: startTimeDate.time,\n      objName: value.dayObjName,\n      task: value.eventTitle,\n      note: value.eventNote,\n      deadline: value.deadline,\n      category: value.eventCategory\n      // assignedTimeStart: startTimeDate,\n      // assignedTimeStop: newEvent.finishTimeDate\n    };\n    let dayObjName = value.dayObjName;\n\n    // let dataLocation = this.context.dataRequestDetails.dataLocation;\n    let dataLocation = value.dayObjName;\n    let currentDaysObj = this.state.days;\n\n    //if there there is NO obj for that day\n    if (typeof currentDaysObj[dayObjName] == 'undefined') {\n      let newEvent = null;\n      this.newDayObj(dayObjName, newTask, newEvent);\n      console.log('Inside if of newEventHandler() ');\n    } else {\n      currentDaysObj[dayObjName].unscheduledtasks.push(newTask);\n\n      console.log(currentDaysObj[dayObjName]);\n\n      this.setState(\n        {\n          days: currentDaysObj\n        },\n        () => console.log('Inside of newevent() setState  ')\n      );\n    }\n  };\n  newEventHandler = value => {\n    let newEvent = this.context.dataRequestDetails.value;\n    let newEventObj = {\n      id: value.eventId, //.concat(newEvent.dayObjName),\n      // timeOfDay: startTimeDate.time,\n      objName: value.dayObjName,\n      eventTitle: value.eventTitle,\n      eventNote: value.eventNote,\n      deadline: value.deadline,\n      category: value.eventCategory\n      // assignedTimeStart: startTimeDate,\n      // assignedTimeStop: newEvent.finishTimeDate\n    };\n    //let startTimeDate = this.context.dataRequestDetails.value.startTimeDate;\n    let dayObjName = this.context.dataRequestDetails.value.dayObjName;\n\n    // let dataLocation = this.context.dataRequestDetails.dataLocation;\n    let dataLocation = newEvent.dayObjName;\n    let currentDaysObj = this.state.days;\n\n    //if there there is NO obj for that day\n    if (typeof currentDaysObj[dayObjName] == 'undefined') {\n      let newTask = null;\n      this.newDayObj(dayObjName, newTask, newEventObj);\n      console.log('Inside if of newEventHandler() ');\n    } else {\n      //if there is an obj for that day\n\n      // let newTask = { id: 'task243', title: 'groceries' };\n\n      currentDaysObj[dayObjName].unscheduledtasks.push(newEventObj);\n\n      console.log(currentDaysObj[dayObjName]);\n\n      this.setState(\n        {\n          days: currentDaysObj\n        },\n        () => console.log('Inside of newevent() setState  ')\n      );\n      //() => this.context.dataReceiverHandler(this.state)\n\n      // console.log(this.state)\n      // );\n    }\n  };\n\n  render() {\n    console.dir(this.state);\n    if (\n      this.context.dataRequestDetails &&\n      this.context.dataRequestDetails.typeOfData === 'events'\n    ) {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1': //new Event\n          this.context.resetHandlerChoice(\n            this.newEventHandler(this.context.dataRequestDetails.value)\n          );\n\n          break;\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {/* <div className=\"container\">\n          <DatePicker\n            placeholderText=\"Choose Start Time\"\n            selected={this.state.startDate}\n            onChange={date => this.handleStartTimeDateChange(date)}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={30}\n            timeCaption=\"Start\"\n            dateFormat=\"MMMM dd, yyyy\"\n          />\n        </div> */}\n      </React.Fragment>\n    );\n  }\n}\nexport default CalendarData;\n"]},"metadata":{},"sourceType":"module"}
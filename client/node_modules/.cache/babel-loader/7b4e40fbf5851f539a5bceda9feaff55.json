{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Cockpit2.js\";\nimport React, { Component } from 'react'; //import rocky from '../../containers/App.module.css'\n\nimport classNames from 'classnames';\nimport classes from './Cockpit.module.css'; //import Navbar from './navBar';\n\nimport Lessons from '../Syllabus/MaxReact/Lessons';\n\nclass Cockpit2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxReact: [{\n        id: 'xvlwil',\n        lesson: '90. (for props Changes)',\n        completion: false\n      }, {\n        id: 'bbbskk',\n        lesson: '91. (for state Changes)',\n        completion: false\n      }, {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }],\n      showLessons: '0',\n      showLessonsView: false,\n      lastLessonHeader: []\n    };\n\n    this.toggleShowLessonsHandler = () => {\n      if (this.state.maxReact !== 0) {\n        this.setState({\n          lastLessonHeader: this.state.maxReact[0]\n        });\n      } else {\n        this.setState({\n          lastLessonHeader: this.state.lastLessonHeader\n        });\n      } //for handling headers\n\n\n      switch (this.state.showLessonsView) {\n        case '0':\n          this.setState({\n            showLessons: '1'\n          });\n          break;\n\n        case '1':\n          this.setState({\n            showLessons: '0'\n          });\n          break;\n\n        case '2':\n          this.setState({\n            showLessons: '1'\n          });\n          break;\n      }\n    };\n  }\n\n  //<p>tasks has # {this.state.maxReact.length}</p>\n  render() {\n    let displayAllLessons = null;\n\n    if (this.state.showLessons === '1') {\n      displayAllLessons = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Lessons, {\n        reRender: this.state.showLessons,\n        lessons: this.state.maxReact,\n        clicked: this.deleteLessonhandler,\n        changed: this.lessonChangeHandler,\n        lastLessonHeader: this.state.lastLessonHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n\n    let displayLessons = null;\n    displayLessons = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"tasks has # \", this.state.maxReact.length), React.createElement(Lessons, {\n      reRender: this.state.showLessons,\n      lessons: this.state.maxReact,\n      clicked: this.deleteLessonhandler,\n      changed: this.lessonChangeHandler,\n      lastLessonHeader: this.state.lastLessonHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n    let displayCockpit = null;\n\n    if (this.state.showLessons == true) {\n      displayCockpit = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Lessons, {\n        reRender: this.state.showLessons,\n        lessons: this.state.maxReact,\n        clicked: this.deleteLessonhandler,\n        changed: this.lessonChangeHandler,\n        lastLessonHeader: this.state.lastLessonHeader,\n        lessonsLength: this.state.maxReact.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    } //{this.state.showLessons ? { displayAllLessons } : null}\n    //{displayLessons}\n\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.toggleShowLessonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, ' ', \"Show Lessons for React Max\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"hey there buddy\"), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"button\",\n      onClick: this.props.deleteCockpit2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Delete Cockpit\"));\n  }\n\n}\n\nexport default Cockpit2; // import React, { useEffect } from 'react';\n// //import rocky from '../../containers/App.module.css'\n// import classNames from 'classnames';\n// import classes from './Cockpit.module.css';\n// //import Navbar from './navBar';\n// const Cockpit2 = props => {\n//   //can do anything that componentDidUpdate can do\n//   //can send http request here\n//   useEffect(() => {\n//     // setTimeout(() => {\n//     //   alert('FUck yea alert');\n//     // }, 1000);\n//     console.log('I am inside of [Cockpit2.js] useffect');\n//     return () => {\n//       console.log('[Cockpit2.js] cleanup work in useEffect');\n//     };\n//     //getting rid of timer\n//     //const timer =\n//     // return () => {\n//     //   //clearTimeout(timer);\n//     //   console.log('[Cockpit2.js] cleanup work in useEffect');\n//     // };\n//   });\n//   //{classes.Cockpit}\n//   // {cockpitBootstrap}\n//   return (\n//     <React.Fragment>\n//       <p>hey there buddy</p>\n//       <button\n//         className=\"btn btn-primary\"\n//         type=\"button\"\n//         onClick={props.deleteCockpit2}\n//       >\n//         Delete Cockpit\n//       </button>\n//     </React.Fragment>\n//   );\n// };\n// //export default Cockpit;\n// export default React.memo(Cockpit2);","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Cockpit2.js"],"names":["React","Component","classNames","classes","Lessons","Cockpit2","constructor","props","state","maxReact","id","lesson","completion","showLessons","showLessonsView","lastLessonHeader","toggleShowLessonsHandler","setState","render","displayAllLessons","deleteLessonhandler","lessonChangeHandler","displayLessons","length","displayCockpit","deleteCockpit2"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAGnBC,KAHmB,GAGX;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,QAAN;AAAgBC,QAAAA,MAAM,EAAE,yBAAxB;AAAmDC,QAAAA,UAAU,EAAE;AAA/D,OADQ,EAER;AAAEF,QAAAA,EAAE,EAAE,QAAN;AAAgBC,QAAAA,MAAM,EAAE,yBAAxB;AAAmDC,QAAAA,UAAU,EAAE;AAA/D,OAFQ,EAGR;AACEF,QAAAA,EAAE,EAAE,QADN;AAEEC,QAAAA,MAAM,EAAE,iDAFV;AAGEC,QAAAA,UAAU,EAAE;AAHd,OAHQ,CADJ;AAUNC,MAAAA,WAAW,EAAE,GAVP;AAWNC,MAAAA,eAAe,EAAE,KAXX;AAYNC,MAAAA,gBAAgB,EAAE;AAZZ,KAHW;;AAAA,SAmBnBC,wBAnBmB,GAmBQ,MAAM;AAC/B,UAAI,KAAKR,KAAL,CAAWC,QAAX,KAAwB,CAA5B,EAA+B;AAC7B,aAAKQ,QAAL,CAAc;AAAEF,UAAAA,gBAAgB,EAAE,KAAKP,KAAL,CAAWC,QAAX,CAAoB,CAApB;AAApB,SAAd;AACD,OAFD,MAEO;AACL,aAAKQ,QAAL,CAAc;AAAEF,UAAAA,gBAAgB,EAAE,KAAKP,KAAL,CAAWO;AAA/B,SAAd;AACD,OAL8B,CAO/B;;;AACA,cAAQ,KAAKP,KAAL,CAAWM,eAAnB;AACE,aAAK,GAAL;AACE,eAAKG,QAAL,CAAc;AAAEJ,YAAAA,WAAW,EAAE;AAAf,WAAd;AACA;;AAEF,aAAK,GAAL;AACE,eAAKI,QAAL,CAAc;AAAEJ,YAAAA,WAAW,EAAE;AAAf,WAAd;AACA;;AAEF,aAAK,GAAL;AACE,eAAKI,QAAL,CAAc;AAAEJ,YAAAA,WAAW,EAAE;AAAf,WAAd;AACA;AAXJ;AAaD,KAxCkB;AAElB;;AAuCD;AACAK,EAAAA,MAAM,GAAG;AACP,QAAIC,iBAAiB,GAAG,IAAxB;;AAEA,QAAI,KAAKX,KAAL,CAAWK,WAAX,KAA2B,GAA/B,EAAoC;AAClCM,MAAAA,iBAAiB,GACf,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWK,WADvB;AAEE,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWC,QAFtB;AAGE,QAAA,OAAO,EAAE,KAAKW,mBAHhB;AAIE,QAAA,OAAO,EAAE,KAAKC,mBAJhB;AAKE,QAAA,gBAAgB,EAAE,KAAKb,KAAL,CAAWO,gBAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAWD;;AAED,QAAIO,cAAc,GAAG,IAArB;AACAA,IAAAA,cAAc,GACZ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,MAApC,CADF,EAEE,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWK,WADvB;AAEE,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWC,QAFtB;AAGE,MAAA,OAAO,EAAE,KAAKW,mBAHhB;AAIE,MAAA,OAAO,EAAE,KAAKC,mBAJhB;AAKE,MAAA,gBAAgB,EAAE,KAAKb,KAAL,CAAWO,gBAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAaA,QAAIS,cAAc,GAAG,IAArB;;AACA,QAAI,KAAKhB,KAAL,CAAWK,WAAX,IAA0B,IAA9B,EAAoC;AAClCW,MAAAA,cAAc,GACZ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWK,WADvB;AAEE,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWC,QAFtB;AAGE,QAAA,OAAO,EAAE,KAAKW,mBAHhB;AAIE,QAAA,OAAO,EAAE,KAAKC,mBAJhB;AAKE,QAAA,gBAAgB,EAAE,KAAKb,KAAL,CAAWO,gBAL/B;AAME,QAAA,aAAa,EAAE,KAAKP,KAAL,CAAWC,QAAX,CAAoBc,MANrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAYD,KA7CM,CA8CP;AAEA;;;AACA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKP,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,+BADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANF,EAOE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWkB,cAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CADF;AAiBD;;AA7G8B;;AAgHjC,eAAepB,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\n//import rocky from '../../containers/App.module.css'\nimport classNames from 'classnames';\nimport classes from './Cockpit.module.css';\n//import Navbar from './navBar';\nimport Lessons from '../Syllabus/MaxReact/Lessons';\n\nclass Cockpit2 extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    maxReact: [\n      { id: 'xvlwil', lesson: '90. (for props Changes)', completion: false },\n      { id: 'bbbskk', lesson: '91. (for state Changes)', completion: false },\n      {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }\n    ],\n    showLessons: '0',\n    showLessonsView: false,\n    lastLessonHeader: []\n  };\n  //let displayLessons = null\n\n  toggleShowLessonsHandler = () => {\n    if (this.state.maxReact !== 0) {\n      this.setState({ lastLessonHeader: this.state.maxReact[0] });\n    } else {\n      this.setState({ lastLessonHeader: this.state.lastLessonHeader });\n    }\n\n    //for handling headers\n    switch (this.state.showLessonsView) {\n      case '0':\n        this.setState({ showLessons: '1' });\n        break;\n\n      case '1':\n        this.setState({ showLessons: '0' });\n        break;\n\n      case '2':\n        this.setState({ showLessons: '1' });\n        break;\n    }\n  };\n  //<p>tasks has # {this.state.maxReact.length}</p>\n  render() {\n    let displayAllLessons = null;\n\n    if (this.state.showLessons === '1') {\n      displayAllLessons = (\n        <React.Fragment>\n          <Lessons\n            reRender={this.state.showLessons}\n            lessons={this.state.maxReact}\n            clicked={this.deleteLessonhandler}\n            changed={this.lessonChangeHandler}\n            lastLessonHeader={this.state.lastLessonHeader}\n          />\n        </React.Fragment>\n      );\n    }\n\n    let displayLessons = null;\n    displayLessons = (\n      <React.Fragment>\n        <p>tasks has # {this.state.maxReact.length}</p>\n        <Lessons\n          reRender={this.state.showLessons}\n          lessons={this.state.maxReact}\n          clicked={this.deleteLessonhandler}\n          changed={this.lessonChangeHandler}\n          lastLessonHeader={this.state.lastLessonHeader}\n        />\n      </React.Fragment>\n    );\n\n    let displayCockpit = null;\n    if (this.state.showLessons == true) {\n      displayCockpit = (\n        <React.Fragment>\n          <Lessons\n            reRender={this.state.showLessons}\n            lessons={this.state.maxReact}\n            clicked={this.deleteLessonhandler}\n            changed={this.lessonChangeHandler}\n            lastLessonHeader={this.state.lastLessonHeader}\n            lessonsLength={this.state.maxReact.length}\n          />\n        </React.Fragment>\n      );\n    }\n    //{this.state.showLessons ? { displayAllLessons } : null}\n\n    //{displayLessons}\n    return (\n      <React.Fragment>\n        <button onClick={this.toggleShowLessonsHandler}>\n          {' '}\n          Show Lessons for React Max\n        </button>\n\n        <p>hey there buddy</p>\n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          onClick={this.props.deleteCockpit2}\n        >\n          Delete Cockpit\n        </button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cockpit2;\n\n// import React, { useEffect } from 'react';\n// //import rocky from '../../containers/App.module.css'\n// import classNames from 'classnames';\n// import classes from './Cockpit.module.css';\n// //import Navbar from './navBar';\n\n// const Cockpit2 = props => {\n//   //can do anything that componentDidUpdate can do\n//   //can send http request here\n//   useEffect(() => {\n//     // setTimeout(() => {\n//     //   alert('FUck yea alert');\n//     // }, 1000);\n//     console.log('I am inside of [Cockpit2.js] useffect');\n\n//     return () => {\n//       console.log('[Cockpit2.js] cleanup work in useEffect');\n//     };\n//     //getting rid of timer\n\n//     //const timer =\n//     // return () => {\n//     //   //clearTimeout(timer);\n//     //   console.log('[Cockpit2.js] cleanup work in useEffect');\n//     // };\n//   });\n\n//   //{classes.Cockpit}\n//   // {cockpitBootstrap}\n//   return (\n//     <React.Fragment>\n//       <p>hey there buddy</p>\n//       <button\n//         className=\"btn btn-primary\"\n//         type=\"button\"\n//         onClick={props.deleteCockpit2}\n//       >\n//         Delete Cockpit\n//       </button>\n//     </React.Fragment>\n//   );\n// };\n// //export default Cockpit;\n\n// export default React.memo(Cockpit2);\n"]},"metadata":{},"sourceType":"module"}
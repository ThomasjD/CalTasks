{"ast":null,"code":"import _slicedToArray from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/Navbar/Navbar.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport App from '../../../containers/App';\nimport classes from '../Cockpit.module.css';\nimport classNames from 'classnames';\nimport NewTask from '../../Creation/newTask';\nimport NewSyllabus from '../../Creation/newSyllabus';\nimport SyllabiList from '../../ViewContent/Syllabus/SyllabiList';\nimport calendarObj from '../../Calendar/calendarObj';\nimport StoreContext from '../../../context/StoreDataContext';\nimport DrawerToggle from '../../Navigation/SideDrawer/DrawerToggle/DrawerToggle';\nimport classesNavbar from './Navbar.module.css';\n\nconst Navbar = props => {\n  const _useState = useState({\n    showNewTaskForm: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        newTaskState = _useState2[0],\n        setTaskState = _useState2[1];\n\n  const storeContext = useContext(StoreContext);\n\n  const requestDataHandler = event => {\n    let requestChoice = event.target.value;\n    let contentChoice = '0';\n    let typeOfData = ''; //string: syllabus,tasks,events,objectives\n\n    let handlerChoice = ''; //string: '#' handler inside of database\n\n    let dataLocation = ''; // string: where obj found inside database\n\n    let infoType = ''; //string: index/id/\n\n    let info = ''; //string: actual info\n\n    let today = calendarObj(); // let value = '';\n\n    let dataRequestMessage = {};\n\n    switch (requestChoice) {\n      case '1':\n        typeOfData = 'tasks';\n        handlerChoice = '1';\n        dataLocation = 'unAssignedTasksForWeek';\n        infoType = null;\n        info = null;\n        contentChoice = '1';\n        dataRequestMessage = {\n          typeOfData: typeOfData,\n          handlerChoice: handlerChoice,\n          dataLocation: dataLocation,\n          infoType: infoType,\n          info: info\n        };\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n\n      case '2':\n        typeOfData = 'tasks';\n        handlerChoice = '2';\n        dataLocation = today;\n        infoType = null;\n        info = null;\n        contentChoice = '2';\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n\n      case '3':\n        break;\n\n      case '4':\n        contentChoice = '4';\n        break;\n\n      case '5':\n        break;\n\n      case '6':\n        //load up newSyllabus component -> get data prepared to display maxReactWorkLeft\n        typeOfData = 'syllabus';\n        handlerChoice = '10';\n        dataLocation = 'maxReactWorkLeft';\n        infoType = null;\n        info = null;\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n    }\n\n    dataRequestMessage = {\n      typeOfData: typeOfData,\n      handlerChoice: handlerChoice,\n      dataLocation: dataLocation,\n      infoType: infoType,\n      info: info\n    };\n    let contentViewObject = {\n      target: {\n        value: contentChoice\n      }\n    };\n    storeContext.contentViewHandler(contentViewObject);\n  };\n\n  const pickedSyllabusRequestHandler = event => {\n    //let dayPicked = event.target.value;\n    //event\n    let dataRequestMessage = null;\n\n    if (event.target.value === 'showSyllabiList') {\n      dataRequestMessage = {\n        typeOfData: 'syllabus',\n        handlerChoice: '18',\n        dataLocation: null,\n        infoType: 'triggerShowSyllabus',\n        info: ''\n      };\n      storeContext.dataRequestHandler(event, dataRequestMessage);\n    } else {\n      // alert(\n      //   `inside pickedSyllabusRequestHandler value from onClick: ${event.target.value}`\n      // );\n      dataRequestMessage = {\n        typeOfData: 'syllabus',\n        handlerChoice: '11',\n        dataLocation: event.target.value,\n        infoType: 'triggerShowSyllabus',\n        info: ''\n      };\n      storeContext.dataRequestHandler(event, dataRequestMessage); // let newContentChoice = event.target.value;\n\n      let contentViewObject = {\n        target: {\n          value: '10'\n        }\n      };\n      storeContext.contentViewHandler(contentViewObject);\n    } //tasksContext.contentViewHandler(3)\n\n  };\n\n  const processSyllabiList = () => {\n    return Object.keys(storeContext.everythingSyllabus.syllabusData.syllabi).map((syllabus, index) => {\n      return React.createElement(React.Fragment, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(SyllabiList, {\n        click: event => pickedSyllabusRequestHandler(event),\n        syllabusId: storeContext.everythingSyllabus.syllabusData.syllabi[syllabus].syllabusId,\n        value: storeContext.everythingSyllabus.syllabusData.syllabi[syllabus].syllabusId,\n        index: index,\n        syllabusName: storeContext.everythingSyllabus.syllabusData.syllabi[syllabus].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    });\n  };\n\n  useEffect(() => {\n    console.log('[Cockpit.js] useffect'); //getting rid of timer\n    // const timer = setTimeout(() => {\n    //   alert('Delete Cockpit timer alert');\n    // }, 100);\n\n    return () => {\n      //clearTimeout(timer);\n      console.log('[Cockpit.js] cleanup work in useEffect');\n    };\n  }, []);\n\n  const newTaskHandler = () => {\n    let currentShowNewTaskForm = newTaskState.showNewTaskForm;\n    console.log('inside newTaskHandler()');\n    setTaskState({\n      showNewTaskForm: !currentShowNewTaskForm\n    });\n  };\n\n  const _useState3 = useState({\n    newTaskTitle: '',\n    newTaskCategory: '' // newTaskDescription: '',\n    // newTaskTime: '',\n    // newTaskestimatedDuration: '' //estimation\n\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newTaskInfoState = _useState4[0],\n        setTaskInfoState = _useState4[1]; //notify new title changed - set up new state\n\n\n  const newSetTaskInfoState = event => {\n    console.log('inside newTaskFormHandler()');\n    setTaskInfoState({\n      newTaskTitle: event.target.value,\n      newTaskCategory: newTaskInfoState.newTaskCategory\n    });\n  }; //notify new category changed - set up new state\n\n\n  const newSetTaskCategoryState = event => {\n    console.log('inside newSetTaskCategoryState()');\n    setTaskInfoState({\n      newTaskTitle: newTaskInfoState.newTaskTitle,\n      newTaskCategory: event.target.value\n    });\n  };\n\n  const navbarDisplay = React.createElement(\"div\", {\n    className: classesNavbar.Navbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar navbar-expand-sm navbar-light bg-light mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.specialbtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn dropdown-toggle\",\n    type: \"button\",\n    \"data-toggle\": \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-toggler-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), \"Tasks\"), React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.specialbtnAllTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"dropdown-item\",\n    onClick: event => requestDataHandler(event),\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"All Tasks\")), React.createElement(\"div\", {\n    className: classes.specialbtnTodayTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"dropdown-item\",\n    onClick: event => requestDataHandler(event),\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Today\"))))), React.createElement(\"div\", {\n    className: \"collapse navbar-collapse\",\n    id: \"navbarNav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"nav-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"nav-link\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"Calendar\")), React.createElement(\"li\", {\n    className: \"nav-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"nav-link\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"Plans\")), React.createElement(\"li\", {\n    className: \"nav-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"nav-link\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Objetivos\")), React.createElement(\"li\", {\n    className: \"nav-item dropdown active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn dropdown-toggle\",\n    type: \"button\",\n    id: \"dropdownMenu2\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    onClick: event => pickedSyllabusRequestHandler(event),\n    value: \"showSyllabiList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, ' ', \"View Syllabi\"), React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    \"aria-labelledby\": \"dropdownMenu2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, storeContext.everythingSyllabus.syllabusData ? processSyllabiList() : null))), React.createElement(\"form\", {\n    className: \"form-inline ml-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mr-2\",\n    placeholder: \"Search Task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-outline-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"div\", {\n    className: \"nav-item dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    className: \"nav-link dropdown-toggle\",\n    \"data-toggle\": \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, \"Creation\"), React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: event => requestDataHandler(event),\n    value: \"4\",\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, ' ', \"Task\"), React.createElement(\"button\", {\n    onClick: event => requestDataHandler(event),\n    value: \"5\" //will be contentChoice later\n    ,\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, \"Event\"), React.createElement(\"button\", {\n    onClick: event => requestDataHandler(event),\n    value: \"6\" //for contentChoice //'10' is handlerChoice\n    ,\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, \"Syllabus\"), React.createElement(\"a\", {\n    href: \"#\",\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \"Objetivo\"), React.createElement(\"a\", {\n    href: \"#\",\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  })))))));\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, navbarDisplay);\n};\n\nexport default Navbar; // import React, { useState, useEffect, useContext } from 'react';\n// import classes from '../Cockpit.module.css';\n// import SyllabiList from '../../ViewContent/Syllabus/SyllabiList';\n// import calendarObj from '../../Calendar/calendarObj';\n// import StoreContext from '../../../context/StoreDataContext';\n// import Logo from '../../Logo/Logo';\n// import classesLogo from './Navbar.module.css';\n// import DrawerToggle from '../../Navigation/SideDrawer/DrawerToggle/DrawerToggle';\n// const Navbar = props => {\n//   const [newTaskState, setTaskState] = useState({\n//     showNewTaskForm: false\n//   });\n//   const storeContext = useContext(StoreContext);\n//   const requestDataHandler = event => {\n//     let contentchoice = event.target.value;\n//     let typeOfData = ''; //string: syllabus,tasks,events,objectives\n//     let handlerChoice = ''; //string: '#' handler inside of database\n//     let dataLocation = ''; // string: where obj found inside database\n//     let infoType = ''; //string: index/id/\n//     let info = ''; //string: actual info\n//     let today = calendarObj();\n//     // let value = '';\n//     let dataRequestMessage = {};\n//     switch (contentchoice) {\n//       case '1':\n//         typeOfData = 'tasks';\n//         handlerChoice = '1';\n//         dataLocation = 'unAssignedTasksForWeek';\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//       case '2':\n//         typeOfData = 'tasks';\n//         handlerChoice = '2';\n//         dataLocation = today;\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//       case '3':\n//         break;\n//       case '4':\n//         break;\n//       case '5':\n//         break;\n//       case '6': //load up newSyllabus component -> get data prepared to display maxReactWorkLeft\n//         typeOfData = 'syllabus';\n//         handlerChoice = '10';\n//         dataLocation = 'maxReactWorkLeft';\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//     }\n//     let contentViewObject = {\n//       target: {\n//         value: contentchoice\n//       }\n//     };\n//     storeContext.contentViewHandler(contentViewObject);\n//   };\n//   const pickedSyllabusRequestHandler = event => {\n//     //let dayPicked = event.target.value;\n//     //event\n//     let dataRequestMessage = null;\n//     if (event.target.value === 'showSyllabiList') {\n//       dataRequestMessage = {\n//         typeOfData: 'syllabus',\n//         handlerChoice: '18',\n//         dataLocation: null,\n//         infoType: 'triggerShowSyllabus',\n//         info: ''\n//       };\n//       storeContext.dataRequestHandler(event, dataRequestMessage);\n//     } else {\n//       // alert(\n//       //   `inside pickedSyllabusRequestHandler value from onClick: ${event.target.value}`\n//       // );\n//       dataRequestMessage = {\n//         typeOfData: 'syllabus',\n//         handlerChoice: '11',\n//         dataLocation: event.target.value,\n//         infoType: 'triggerShowSyllabus',\n//         info: ''\n//       };\n//       storeContext.dataRequestHandler(event, dataRequestMessage);\n//       // let newContentChoice = event.target.value;\n//       let contentViewObject = {\n//         target: {\n//           value: '10'\n//         }\n//       };\n//       storeContext.contentViewHandler(contentViewObject);\n//     }\n//     //tasksContext.contentViewHandler(3)\n//   };\n//   const processSyllabiList = () => {\n//     return Object.keys(\n//       storeContext.everythingSyllabus.syllabusData.syllabi\n//     ).map((syllabus, index) => {\n//       return (\n//         <React.Fragment key={index}>\n//           <SyllabiList\n//             click={event => pickedSyllabusRequestHandler(event)}\n//             syllabusId={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .syllabusId\n//             }\n//             value={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .syllabusId\n//             }\n//             index={index}\n//             syllabusName={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .name\n//             }\n//           />\n//         </React.Fragment>\n//       );\n//     });\n//   };\n//   useEffect(() => {\n//     console.log('[Cockpit.js] useffect');\n//     //getting rid of timer\n//     // const timer = setTimeout(() => {\n//     //   alert('Delete Cockpit timer alert');\n//     // }, 100);\n//     return () => {\n//       //clearTimeout(timer);\n//       console.log('[Cockpit.js] cleanup work in useEffect');\n//     };\n//   }, []);\n//   const newTaskHandler = () => {\n//     let currentShowNewTaskForm = newTaskState.showNewTaskForm;\n//     console.log('inside newTaskHandler()');\n//     setTaskState({\n//       showNewTaskForm: !currentShowNewTaskForm\n//     });\n//   };\n//   const [newTaskInfoState, setTaskInfoState] = useState({\n//     newTaskTitle: '',\n//     newTaskCategory: ''\n//     // newTaskDescription: '',\n//     // newTaskTime: '',\n//     // newTaskestimatedDuration: '' //estimation\n//   });\n//   //notify new title changed - set up new state\n//   const newSetTaskInfoState = event => {\n//     console.log('inside newTaskFormHandler()');\n//     setTaskInfoState({\n//       newTaskTitle: event.target.value,\n//       newTaskCategory: newTaskInfoState.newTaskCategory\n//     });\n//   };\n//   //notify new category changed - set up new state\n//   const newSetTaskCategoryState = event => {\n//     console.log('inside newSetTaskCategoryState()');\n//     setTaskInfoState({\n//       newTaskTitle: newTaskInfoState.newTaskTitle,\n//       newTaskCategory: event.target.value\n//     });\n//   };\n//   const navbarDisplay = (\n//     <div className=\"container\">\n//       <nav className=\"navbar navbar-expand-sm navbar-light bg-light mb-3\">d\n//         <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n//           <div className={classesLogo.Toolbar}>\n//             <DrawerToggle clicked={props.drawerToggleClicked} />\n//             {/* <div className={classesLogo.Logo2}>\n//             <Logo />\n//           </div>\n//           <button className=\"btn btn-primary\" onClick={props.deleteCockpit}>\n//             {' '}\n//             Delete Cockpit\n//           </button> */}\n//             <nav className={classes.DesktopOnly}>\n//               <div className={classes.specialbtn}>\n//                 <div className=\"dropdown\">\n//                   <button\n//                     className=\"btn dropdown-toggle\"\n//                     type=\"button\"\n//                     data-toggle=\"dropdown\"\n//                   >\n//                     <span className=\"navbar-toggler-icon\"></span>\n//                     Tasks\n//                   </button>\n//                   <div className=\"dropdown-menu\">\n//                     <div className={classes.specialbtnAllTasks}>\n//                       <button\n//                         className=\"dropdown-item\"\n//                         onClick={event => requestDataHandler(event)}\n//                         value=\"1\"\n//                       >\n//                         All Tasks\n//                       </button>\n//                     </div>\n//                     <div className={classes.specialbtnTodayTasks}>\n//                       <button\n//                         className=\"dropdown-item\"\n//                         onClick={event => requestDataHandler(event)}\n//                         value=\"2\"\n//                       >\n//                         Today\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </div>\n//               </div>\n//             </nav>\n//             <nav>\n//               {' '}\n//               <a className={classes.specialbtnAllTasks} href=\"#\">\n//                 Calendar\n//               </a>{' '}\n//             </nav>\n//             {/* <div className=\"collapse navbar-collapse\" id=\"navbarNav\"> */}\n//             <ul className=\"navbar-nav\">\n//               <nav>\n//                 <li className=\"nav-item\">\n//                   <a className=\"nav-link\" href=\"#\">\n//                     Calendar\n//                   </a>\n//                 </li>\n//               </nav>\n//               <li className=\"nav-item\">\n//                 <a className=\"nav-link\" href=\"#\">\n//                   Plans\n//                 </a>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <a className=\"nav-link\" href=\"#\">\n//                   Objetivos\n//                 </a>\n//               </li>\n//               <li className=\"nav-item dropdown active\">\n//                 <button\n//                   className=\"btn dropdown-toggle\"\n//                   type=\"button\"\n//                   id=\"dropdownMenu2\"\n//                   data-toggle=\"dropdown\"\n//                   aria-haspopup=\"true\"\n//                   aria-expanded=\"false\"\n//                   onClick={event => pickedSyllabusRequestHandler(event)}\n//                   value=\"showSyllabiList\"\n//                 >\n//                   {' '}\n//                   View Syllabi\n//                 </button>\n//                 <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n//                   {storeContext.everythingSyllabus.syllabusData\n//                     ? processSyllabiList()\n//                     : null}\n//                 </div>\n//               </li>\n//             </ul>\n//             <form className=\"form-inline ml-auto\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control mr-2\"\n//                 placeholder=\"Search Task\"\n//               />\n//               <button className=\"btn btn-outline-success\">Search</button>\n//             </form>\n//             <div className=\"nav-item dropdown\">\n//               <a\n//                 href=\"#\"\n//                 className=\"nav-link dropdown-toggle\"\n//                 data-toggle=\"dropdown\"\n//               >\n//                 Creation\n//               </a>\n//               <div className=\"dropdown-menu\">\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"4\"\n//                   className=\"dropdown-item\"\n//                 >\n//                   {' '}\n//                   Task\n//                 </button>\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"5\" //will be contentChoice later\n//                   className=\"dropdown-item\"\n//                 >\n//                   Event\n//                 </button>\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"6\" //for contentChoice //'10' is handlerChoice\n//                   className=\"dropdown-item\"\n//                 >\n//                   Syllabus\n//                 </button>\n//                 <a href=\"#\" className=\"dropdown-item\">\n//                   Objetivo\n//                 </a>\n//                 <a href=\"#\" className=\"dropdown-item\"></a>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </nav>\n//     </div>\n//   );\n//   return <React.Fragment>{navbarDisplay}</React.Fragment>;\n// };\n// export default Navbar;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/Navbar/Navbar.js"],"names":["React","useState","useEffect","useContext","App","classes","classNames","NewTask","NewSyllabus","SyllabiList","calendarObj","StoreContext","DrawerToggle","classesNavbar","Navbar","props","showNewTaskForm","newTaskState","setTaskState","storeContext","requestDataHandler","event","requestChoice","target","value","contentChoice","typeOfData","handlerChoice","dataLocation","infoType","info","today","dataRequestMessage","dataRequestHandler","contentViewObject","contentViewHandler","pickedSyllabusRequestHandler","processSyllabiList","Object","keys","everythingSyllabus","syllabusData","syllabi","map","syllabus","index","syllabusId","name","console","log","newTaskHandler","currentShowNewTaskForm","newTaskTitle","newTaskCategory","newTaskInfoState","setTaskInfoState","newSetTaskInfoState","newSetTaskCategoryState","navbarDisplay","specialbtn","specialbtnAllTasks","specialbtnTodayTasks"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,YAAP,MAAyB,uDAAzB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;AACA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,oBACed,QAAQ,CAAC;AAC5Ce,IAAAA,eAAe,EAAE;AAD2B,GAAD,CADvB;AAAA;AAAA,QACfC,YADe;AAAA,QACDC,YADC;;AAKtB,QAAMC,YAAY,GAAGhB,UAAU,CAACQ,YAAD,CAA/B;;AAEA,QAAMS,kBAAkB,GAAGC,KAAK,IAAI;AAClC,QAAIC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACA,QAAIC,aAAa,GAAG,GAApB;AACA,QAAIC,UAAU,GAAG,EAAjB,CAHkC,CAGb;;AACrB,QAAIC,aAAa,GAAG,EAApB,CAJkC,CAIV;;AACxB,QAAIC,YAAY,GAAG,EAAnB,CALkC,CAKX;;AACvB,QAAIC,QAAQ,GAAG,EAAf,CANkC,CAMf;;AACnB,QAAIC,IAAI,GAAG,EAAX,CAPkC,CAOnB;;AACf,QAAIC,KAAK,GAAGrB,WAAW,EAAvB,CARkC,CAUlC;;AACA,QAAIsB,kBAAkB,GAAG,EAAzB;;AACA,YAAQV,aAAR;AACE,WAAK,GAAL;AACEI,QAAAA,UAAU,GAAG,OAAb;AACAC,QAAAA,aAAa,GAAG,GAAhB;AACAC,QAAAA,YAAY,GAAG,wBAAf;AACAC,QAAAA,QAAQ,GAAG,IAAX;AACAC,QAAAA,IAAI,GAAG,IAAP;AACAL,QAAAA,aAAa,GAAG,GAAhB;AACAO,QAAAA,kBAAkB,GAAG;AACnBN,UAAAA,UAAU,EAAEA,UADO;AAEnBC,UAAAA,aAAa,EAAEA,aAFI;AAGnBC,UAAAA,YAAY,EAAEA,YAHK;AAInBC,UAAAA,QAAQ,EAAEA,QAJS;AAKnBC,UAAAA,IAAI,EAAEA;AALa,SAArB;AAQAX,QAAAA,YAAY,CAACc,kBAAb,CAAgCZ,KAAhC,EAAuCW,kBAAvC;AACA;;AACF,WAAK,GAAL;AACEN,QAAAA,UAAU,GAAG,OAAb;AACAC,QAAAA,aAAa,GAAG,GAAhB;AACAC,QAAAA,YAAY,GAAGG,KAAf;AACAF,QAAAA,QAAQ,GAAG,IAAX;AACAC,QAAAA,IAAI,GAAG,IAAP;AACAL,QAAAA,aAAa,GAAG,GAAhB;AAEAN,QAAAA,YAAY,CAACc,kBAAb,CAAgCZ,KAAhC,EAAuCW,kBAAvC;AACA;;AACF,WAAK,GAAL;AACE;;AACF,WAAK,GAAL;AACEP,QAAAA,aAAa,GAAG,GAAhB;AACA;;AACF,WAAK,GAAL;AACE;;AACF,WAAK,GAAL;AAAU;AACRC,QAAAA,UAAU,GAAG,UAAb;AACAC,QAAAA,aAAa,GAAG,IAAhB;AACAC,QAAAA,YAAY,GAAG,kBAAf;AACAC,QAAAA,QAAQ,GAAG,IAAX;AACAC,QAAAA,IAAI,GAAG,IAAP;AAEAX,QAAAA,YAAY,CAACc,kBAAb,CAAgCZ,KAAhC,EAAuCW,kBAAvC;AACA;AA3CJ;;AA6CAA,IAAAA,kBAAkB,GAAG;AACnBN,MAAAA,UAAU,EAAEA,UADO;AAEnBC,MAAAA,aAAa,EAAEA,aAFI;AAGnBC,MAAAA,YAAY,EAAEA,YAHK;AAInBC,MAAAA,QAAQ,EAAEA,QAJS;AAKnBC,MAAAA,IAAI,EAAEA;AALa,KAArB;AAOA,QAAII,iBAAiB,GAAG;AACtBX,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAEC;AADD;AADc,KAAxB;AAMAN,IAAAA,YAAY,CAACgB,kBAAb,CAAgCD,iBAAhC;AACD,GAvED;;AAyEA,QAAME,4BAA4B,GAAGf,KAAK,IAAI;AAC5C;AACA;AACA,QAAIW,kBAAkB,GAAG,IAAzB;;AACA,QAAIX,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,iBAA3B,EAA8C;AAC5CQ,MAAAA,kBAAkB,GAAG;AACnBN,QAAAA,UAAU,EAAE,UADO;AAEnBC,QAAAA,aAAa,EAAE,IAFI;AAGnBC,QAAAA,YAAY,EAAE,IAHK;AAInBC,QAAAA,QAAQ,EAAE,qBAJS;AAKnBC,QAAAA,IAAI,EAAE;AALa,OAArB;AAOAX,MAAAA,YAAY,CAACc,kBAAb,CAAgCZ,KAAhC,EAAuCW,kBAAvC;AACD,KATD,MASO;AACL;AACA;AACA;AACAA,MAAAA,kBAAkB,GAAG;AACnBN,QAAAA,UAAU,EAAE,UADO;AAEnBC,QAAAA,aAAa,EAAE,IAFI;AAGnBC,QAAAA,YAAY,EAAEP,KAAK,CAACE,MAAN,CAAaC,KAHR;AAInBK,QAAAA,QAAQ,EAAE,qBAJS;AAKnBC,QAAAA,IAAI,EAAE;AALa,OAArB;AAOAX,MAAAA,YAAY,CAACc,kBAAb,CAAgCZ,KAAhC,EAAuCW,kBAAvC,EAXK,CAYL;;AAEA,UAAIE,iBAAiB,GAAG;AACtBX,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE;AADD;AADc,OAAxB;AAKAL,MAAAA,YAAY,CAACgB,kBAAb,CAAgCD,iBAAhC;AACD,KAjC2C,CAmC5C;;AACD,GApCD;;AAsCA,QAAMG,kBAAkB,GAAG,MAAM;AAC/B,WAAOC,MAAM,CAACC,IAAP,CACLpB,YAAY,CAACqB,kBAAb,CAAgCC,YAAhC,CAA6CC,OADxC,EAELC,GAFK,CAED,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzB,aACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAExB,KAAK,IAAIe,4BAA4B,CAACf,KAAD,CAD9C;AAEE,QAAA,UAAU,EACRF,YAAY,CAACqB,kBAAb,CAAgCC,YAAhC,CAA6CC,OAA7C,CAAqDE,QAArD,EACGE,UAJP;AAME,QAAA,KAAK,EACH3B,YAAY,CAACqB,kBAAb,CAAgCC,YAAhC,CAA6CC,OAA7C,CAAqDE,QAArD,EACGE,UARP;AAUE,QAAA,KAAK,EAAED,KAVT;AAWE,QAAA,YAAY,EACV1B,YAAY,CAACqB,kBAAb,CAAgCC,YAAhC,CAA6CC,OAA7C,CAAqDE,QAArD,EACGG,IAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAoBD,KAvBM,CAAP;AAwBD,GAzBD;;AA2BA7C,EAAAA,SAAS,CAAC,MAAM;AACd8C,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EADc,CAGd;AACA;AACA;AACA;;AAEA,WAAO,MAAM;AACX;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD,KAHD;AAID,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIC,sBAAsB,GAAGlC,YAAY,CAACD,eAA1C;AACAgC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA/B,IAAAA,YAAY,CAAC;AACXF,MAAAA,eAAe,EAAE,CAACmC;AADP,KAAD,CAAZ;AAGD,GAND;;AA/JsB,qBAuKuBlD,QAAQ,CAAC;AACpDmD,IAAAA,YAAY,EAAE,EADsC;AAEpDC,IAAAA,eAAe,EAAE,EAFmC,CAIpD;AACA;AACA;;AANoD,GAAD,CAvK/B;AAAA;AAAA,QAuKfC,gBAvKe;AAAA,QAuKGC,gBAvKH,kBAgLtB;;;AACA,QAAMC,mBAAmB,GAAGnC,KAAK,IAAI;AACnC2B,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAM,IAAAA,gBAAgB,CAAC;AACfH,MAAAA,YAAY,EAAE/B,KAAK,CAACE,MAAN,CAAaC,KADZ;AAEf6B,MAAAA,eAAe,EAAEC,gBAAgB,CAACD;AAFnB,KAAD,CAAhB;AAID,GAND,CAjLsB,CAyLtB;;;AACA,QAAMI,uBAAuB,GAAGpC,KAAK,IAAI;AACvC2B,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAM,IAAAA,gBAAgB,CAAC;AACfH,MAAAA,YAAY,EAAEE,gBAAgB,CAACF,YADhB;AAEfC,MAAAA,eAAe,EAAEhC,KAAK,CAACE,MAAN,CAAaC;AAFf,KAAD,CAAhB;AAID,GAND;;AAQA,QAAMkC,aAAa,GACjB;AAAK,IAAA,SAAS,EAAE7C,aAAa,CAACC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACsD,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,mBAAY,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,UADF,EAUE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEtD,OAAO,CAACuD,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,OAAO,EAAEvC,KAAK,IAAID,kBAAkB,CAACC,KAAD,CAFtC;AAGE,IAAA,KAAK,EAAC,GAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAWE;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACwD,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,OAAO,EAAExC,KAAK,IAAID,kBAAkB,CAACC,KAAD,CAFtC;AAGE,IAAA,KAAK,EAAC,GAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAXF,CAVF,CADF,CADF,EAoCE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAA0C,IAAA,EAAE,EAAC,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAwB,IAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAME;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAwB,IAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CANF,EAWE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAwB,IAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAXF,EAgBE;AAAI,IAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,EAAE,EAAC,eAHL;AAIE,mBAAY,UAJd;AAKE,qBAAc,MALhB;AAME,qBAAc,OANhB;AAOE,IAAA,OAAO,EAAEA,KAAK,IAAIe,4BAA4B,CAACf,KAAD,CAPhD;AAQE,IAAA,KAAK,EAAC,iBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG,GAVH,iBADF,EAeE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,uBAAgB,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,YAAY,CAACqB,kBAAb,CAAgCC,YAAhC,GACGJ,kBAAkB,EADrB,GAEG,IAHN,CAfF,CAhBF,CADF,EAwCE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,WAAW,EAAC,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CAxCF,EAgDE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,SAAS,EAAC,0BAFZ;AAGE,mBAAY,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAEhB,KAAK,IAAID,kBAAkB,CAACC,KAAD,CADtC;AAEE,IAAA,KAAK,EAAC,GAFR;AAGE,IAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,GALH,SADF,EAUE;AACE,IAAA,OAAO,EAAEA,KAAK,IAAID,kBAAkB,CAACC,KAAD,CADtC;AAEE,IAAA,KAAK,EAAC,GAFR,CAEY;AAFZ;AAGE,IAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF,EAkBE;AACE,IAAA,OAAO,EAAEA,KAAK,IAAID,kBAAkB,CAACC,KAAD,CADtC;AAEE,IAAA,KAAK,EAAC,GAFR,CAEY;AAFZ;AAGE,IAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,EA0BE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,EA6BE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,CARF,CAhDF,CApCF,CALF,CAFF,CADF;AAyIA,SAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBqC,aAAjB,CAAP;AACD,CA5UD;;AA8UA,eAAe5C,MAAfsourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport App from '../../../containers/App';\nimport classes from '../Cockpit.module.css';\nimport classNames from 'classnames';\nimport NewTask from '../../Creation/newTask';\nimport NewSyllabus from '../../Creation/newSyllabus';\nimport SyllabiList from '../../ViewContent/Syllabus/SyllabiList';\nimport calendarObj from '../../Calendar/calendarObj';\nimport StoreContext from '../../../context/StoreDataContext';\nimport DrawerToggle from '../../Navigation/SideDrawer/DrawerToggle/DrawerToggle';\nimport classesNavbar from './Navbar.module.css';\nconst Navbar = props => {\n  const [newTaskState, setTaskState] = useState({\n    showNewTaskForm: false\n  });\n\n  const storeContext = useContext(StoreContext);\n\n  const requestDataHandler = event => {\n    let requestChoice = event.target.value;\n    let contentChoice = '0';\n    let typeOfData = ''; //string: syllabus,tasks,events,objectives\n    let handlerChoice = ''; //string: '#' handler inside of database\n    let dataLocation = ''; // string: where obj found inside database\n    let infoType = ''; //string: index/id/\n    let info = ''; //string: actual info\n    let today = calendarObj();\n\n    // let value = '';\n    let dataRequestMessage = {};\n    switch (requestChoice) {\n      case '1':\n        typeOfData = 'tasks';\n        handlerChoice = '1';\n        dataLocation = 'unAssignedTasksForWeek';\n        infoType = null;\n        info = null;\n        contentChoice = '1';\n        dataRequestMessage = {\n          typeOfData: typeOfData,\n          handlerChoice: handlerChoice,\n          dataLocation: dataLocation,\n          infoType: infoType,\n          info: info\n        };\n\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n      case '2':\n        typeOfData = 'tasks';\n        handlerChoice = '2';\n        dataLocation = today;\n        infoType = null;\n        info = null;\n        contentChoice = '2';\n\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n      case '3':\n        break;\n      case '4':\n        contentChoice = '4';\n        break;\n      case '5':\n        break;\n      case '6': //load up newSyllabus component -> get data prepared to display maxReactWorkLeft\n        typeOfData = 'syllabus';\n        handlerChoice = '10';\n        dataLocation = 'maxReactWorkLeft';\n        infoType = null;\n        info = null;\n\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n    }\n    dataRequestMessage = {\n      typeOfData: typeOfData,\n      handlerChoice: handlerChoice,\n      dataLocation: dataLocation,\n      infoType: infoType,\n      info: info\n    };\n    let contentViewObject = {\n      target: {\n        value: contentChoice\n      }\n    };\n\n    storeContext.contentViewHandler(contentViewObject);\n  };\n\n  const pickedSyllabusRequestHandler = event => {\n    //let dayPicked = event.target.value;\n    //event\n    let dataRequestMessage = null;\n    if (event.target.value === 'showSyllabiList') {\n      dataRequestMessage = {\n        typeOfData: 'syllabus',\n        handlerChoice: '18',\n        dataLocation: null,\n        infoType: 'triggerShowSyllabus',\n        info: ''\n      };\n      storeContext.dataRequestHandler(event, dataRequestMessage);\n    } else {\n      // alert(\n      //   `inside pickedSyllabusRequestHandler value from onClick: ${event.target.value}`\n      // );\n      dataRequestMessage = {\n        typeOfData: 'syllabus',\n        handlerChoice: '11',\n        dataLocation: event.target.value,\n        infoType: 'triggerShowSyllabus',\n        info: ''\n      };\n      storeContext.dataRequestHandler(event, dataRequestMessage);\n      // let newContentChoice = event.target.value;\n\n      let contentViewObject = {\n        target: {\n          value: '10'\n        }\n      };\n      storeContext.contentViewHandler(contentViewObject);\n    }\n\n    //tasksContext.contentViewHandler(3)\n  };\n\n  const processSyllabiList = () => {\n    return Object.keys(\n      storeContext.everythingSyllabus.syllabusData.syllabi\n    ).map((syllabus, index) => {\n      return (\n        <React.Fragment key={index}>\n          <SyllabiList\n            click={event => pickedSyllabusRequestHandler(event)}\n            syllabusId={\n              storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n                .syllabusId\n            }\n            value={\n              storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n                .syllabusId\n            }\n            index={index}\n            syllabusName={\n              storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n                .name\n            }\n          />\n        </React.Fragment>\n      );\n    });\n  };\n\n  useEffect(() => {\n    console.log('[Cockpit.js] useffect');\n\n    //getting rid of timer\n    // const timer = setTimeout(() => {\n    //   alert('Delete Cockpit timer alert');\n    // }, 100);\n\n    return () => {\n      //clearTimeout(timer);\n      console.log('[Cockpit.js] cleanup work in useEffect');\n    };\n  }, []);\n\n  const newTaskHandler = () => {\n    let currentShowNewTaskForm = newTaskState.showNewTaskForm;\n    console.log('inside newTaskHandler()');\n    setTaskState({\n      showNewTaskForm: !currentShowNewTaskForm\n    });\n  };\n\n  const [newTaskInfoState, setTaskInfoState] = useState({\n    newTaskTitle: '',\n    newTaskCategory: ''\n\n    // newTaskDescription: '',\n    // newTaskTime: '',\n    // newTaskestimatedDuration: '' //estimation\n  });\n\n  //notify new title changed - set up new state\n  const newSetTaskInfoState = event => {\n    console.log('inside newTaskFormHandler()');\n    setTaskInfoState({\n      newTaskTitle: event.target.value,\n      newTaskCategory: newTaskInfoState.newTaskCategory\n    });\n  };\n\n  //notify new category changed - set up new state\n  const newSetTaskCategoryState = event => {\n    console.log('inside newSetTaskCategoryState()');\n    setTaskInfoState({\n      newTaskTitle: newTaskInfoState.newTaskTitle,\n      newTaskCategory: event.target.value\n    });\n  };\n\n  const navbarDisplay = (\n    <div className={classesNavbar.Navbar}>\n      {/* <DrawerToggle clicked={props.drawerToggleClicked} /> */}\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light mb-3\">\n        {/* <button className=\"btn btn-primary\" onClick={props.deleteCockpit}>\n          {' '}\n          Delete Cockpit\n        </button> */}\n        <div className=\"container\">\n          <div className={classes.specialbtn}>\n            <div className=\"dropdown\">\n              <button\n                className=\"btn dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n              >\n                <span className=\"navbar-toggler-icon\"></span>\n                Tasks\n              </button>\n\n              <div className=\"dropdown-menu\">\n                <div className={classes.specialbtnAllTasks}>\n                  <button\n                    className=\"dropdown-item\"\n                    onClick={event => requestDataHandler(event)}\n                    value=\"1\"\n                  >\n                    All Tasks\n                  </button>\n                </div>\n\n                <div className={classes.specialbtnTodayTasks}>\n                  <button\n                    className=\"dropdown-item\"\n                    onClick={event => requestDataHandler(event)}\n                    value=\"2\"\n                  >\n                    Today\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Calendar\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Plans\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Objetivos\n                </a>\n              </li>\n              <li className=\"nav-item dropdown active\">\n                <button\n                  className=\"btn dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenu2\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  onClick={event => pickedSyllabusRequestHandler(event)}\n                  value=\"showSyllabiList\"\n                >\n                  {' '}\n                  View Syllabi\n                </button>\n\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n                  {storeContext.everythingSyllabus.syllabusData\n                    ? processSyllabiList()\n                    : null}\n                </div>\n              </li>\n            </ul>\n\n            <form className=\"form-inline ml-auto\">\n              <input\n                type=\"text\"\n                className=\"form-control mr-2\"\n                placeholder=\"Search Task\"\n              />\n              <button className=\"btn btn-outline-success\">Search</button>\n            </form>\n            <div className=\"nav-item dropdown\">\n              <a\n                href=\"#\"\n                className=\"nav-link dropdown-toggle\"\n                data-toggle=\"dropdown\"\n              >\n                Creation\n              </a>\n              <div className=\"dropdown-menu\">\n                <button\n                  onClick={event => requestDataHandler(event)}\n                  value=\"4\"\n                  className=\"dropdown-item\"\n                >\n                  {' '}\n                  Task\n                </button>\n\n                <button\n                  onClick={event => requestDataHandler(event)}\n                  value=\"5\" //will be contentChoice later\n                  className=\"dropdown-item\"\n                >\n                  Event\n                </button>\n\n                <button\n                  onClick={event => requestDataHandler(event)}\n                  value=\"6\" //for contentChoice //'10' is handlerChoice\n                  className=\"dropdown-item\"\n                >\n                  Syllabus\n                </button>\n\n                <a href=\"#\" className=\"dropdown-item\">\n                  Objetivo\n                </a>\n                <a href=\"#\" className=\"dropdown-item\"></a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n  return <React.Fragment>{navbarDisplay}</React.Fragment>;\n};\n\nexport default Navbar;\n\n// import React, { useState, useEffect, useContext } from 'react';\n\n// import classes from '../Cockpit.module.css';\n// import SyllabiList from '../../ViewContent/Syllabus/SyllabiList';\n// import calendarObj from '../../Calendar/calendarObj';\n// import StoreContext from '../../../context/StoreDataContext';\n// import Logo from '../../Logo/Logo';\n// import classesLogo from './Navbar.module.css';\n// import DrawerToggle from '../../Navigation/SideDrawer/DrawerToggle/DrawerToggle';\n// const Navbar = props => {\n//   const [newTaskState, setTaskState] = useState({\n//     showNewTaskForm: false\n//   });\n\n//   const storeContext = useContext(StoreContext);\n\n//   const requestDataHandler = event => {\n//     let contentchoice = event.target.value;\n//     let typeOfData = ''; //string: syllabus,tasks,events,objectives\n//     let handlerChoice = ''; //string: '#' handler inside of database\n//     let dataLocation = ''; // string: where obj found inside database\n//     let infoType = ''; //string: index/id/\n//     let info = ''; //string: actual info\n//     let today = calendarObj();\n\n//     // let value = '';\n//     let dataRequestMessage = {};\n//     switch (contentchoice) {\n//       case '1':\n//         typeOfData = 'tasks';\n//         handlerChoice = '1';\n//         dataLocation = 'unAssignedTasksForWeek';\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//       case '2':\n//         typeOfData = 'tasks';\n//         handlerChoice = '2';\n//         dataLocation = today;\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//       case '3':\n//         break;\n//       case '4':\n//         break;\n//       case '5':\n//         break;\n//       case '6': //load up newSyllabus component -> get data prepared to display maxReactWorkLeft\n//         typeOfData = 'syllabus';\n//         handlerChoice = '10';\n//         dataLocation = 'maxReactWorkLeft';\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//     }\n\n//     let contentViewObject = {\n//       target: {\n//         value: contentchoice\n//       }\n//     };\n\n//     storeContext.contentViewHandler(contentViewObject);\n//   };\n\n//   const pickedSyllabusRequestHandler = event => {\n//     //let dayPicked = event.target.value;\n//     //event\n//     let dataRequestMessage = null;\n//     if (event.target.value === 'showSyllabiList') {\n//       dataRequestMessage = {\n//         typeOfData: 'syllabus',\n//         handlerChoice: '18',\n//         dataLocation: null,\n//         infoType: 'triggerShowSyllabus',\n//         info: ''\n//       };\n//       storeContext.dataRequestHandler(event, dataRequestMessage);\n//     } else {\n//       // alert(\n//       //   `inside pickedSyllabusRequestHandler value from onClick: ${event.target.value}`\n//       // );\n//       dataRequestMessage = {\n//         typeOfData: 'syllabus',\n//         handlerChoice: '11',\n//         dataLocation: event.target.value,\n//         infoType: 'triggerShowSyllabus',\n//         info: ''\n//       };\n//       storeContext.dataRequestHandler(event, dataRequestMessage);\n//       // let newContentChoice = event.target.value;\n\n//       let contentViewObject = {\n//         target: {\n//           value: '10'\n//         }\n//       };\n//       storeContext.contentViewHandler(contentViewObject);\n//     }\n\n//     //tasksContext.contentViewHandler(3)\n//   };\n\n//   const processSyllabiList = () => {\n//     return Object.keys(\n//       storeContext.everythingSyllabus.syllabusData.syllabi\n//     ).map((syllabus, index) => {\n//       return (\n//         <React.Fragment key={index}>\n//           <SyllabiList\n//             click={event => pickedSyllabusRequestHandler(event)}\n//             syllabusId={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .syllabusId\n//             }\n//             value={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .syllabusId\n//             }\n//             index={index}\n//             syllabusName={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .name\n//             }\n//           />\n//         </React.Fragment>\n//       );\n//     });\n//   };\n\n//   useEffect(() => {\n//     console.log('[Cockpit.js] useffect');\n\n//     //getting rid of timer\n//     // const timer = setTimeout(() => {\n//     //   alert('Delete Cockpit timer alert');\n//     // }, 100);\n\n//     return () => {\n//       //clearTimeout(timer);\n//       console.log('[Cockpit.js] cleanup work in useEffect');\n//     };\n//   }, []);\n\n//   const newTaskHandler = () => {\n//     let currentShowNewTaskForm = newTaskState.showNewTaskForm;\n//     console.log('inside newTaskHandler()');\n//     setTaskState({\n//       showNewTaskForm: !currentShowNewTaskForm\n//     });\n//   };\n\n//   const [newTaskInfoState, setTaskInfoState] = useState({\n//     newTaskTitle: '',\n//     newTaskCategory: ''\n\n//     // newTaskDescription: '',\n//     // newTaskTime: '',\n//     // newTaskestimatedDuration: '' //estimation\n//   });\n\n//   //notify new title changed - set up new state\n//   const newSetTaskInfoState = event => {\n//     console.log('inside newTaskFormHandler()');\n//     setTaskInfoState({\n//       newTaskTitle: event.target.value,\n//       newTaskCategory: newTaskInfoState.newTaskCategory\n//     });\n//   };\n\n//   //notify new category changed - set up new state\n//   const newSetTaskCategoryState = event => {\n//     console.log('inside newSetTaskCategoryState()');\n//     setTaskInfoState({\n//       newTaskTitle: newTaskInfoState.newTaskTitle,\n//       newTaskCategory: event.target.value\n//     });\n//   };\n\n//   const navbarDisplay = (\n//     <div className=\"container\">\n//       <nav className=\"navbar navbar-expand-sm navbar-light bg-light mb-3\">d\n//         <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n//           <div className={classesLogo.Toolbar}>\n//             <DrawerToggle clicked={props.drawerToggleClicked} />\n//             {/* <div className={classesLogo.Logo2}>\n//             <Logo />\n//           </div>\n//           <button className=\"btn btn-primary\" onClick={props.deleteCockpit}>\n//             {' '}\n//             Delete Cockpit\n//           </button> */}\n\n//             <nav className={classes.DesktopOnly}>\n//               <div className={classes.specialbtn}>\n//                 <div className=\"dropdown\">\n//                   <button\n//                     className=\"btn dropdown-toggle\"\n//                     type=\"button\"\n//                     data-toggle=\"dropdown\"\n//                   >\n//                     <span className=\"navbar-toggler-icon\"></span>\n//                     Tasks\n//                   </button>\n\n//                   <div className=\"dropdown-menu\">\n//                     <div className={classes.specialbtnAllTasks}>\n//                       <button\n//                         className=\"dropdown-item\"\n//                         onClick={event => requestDataHandler(event)}\n//                         value=\"1\"\n//                       >\n//                         All Tasks\n//                       </button>\n//                     </div>\n\n//                     <div className={classes.specialbtnTodayTasks}>\n//                       <button\n//                         className=\"dropdown-item\"\n//                         onClick={event => requestDataHandler(event)}\n//                         value=\"2\"\n//                       >\n//                         Today\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </div>\n//               </div>\n//             </nav>\n//             <nav>\n//               {' '}\n//               <a className={classes.specialbtnAllTasks} href=\"#\">\n//                 Calendar\n//               </a>{' '}\n//             </nav>\n\n//             {/* <div className=\"collapse navbar-collapse\" id=\"navbarNav\"> */}\n//             <ul className=\"navbar-nav\">\n//               <nav>\n//                 <li className=\"nav-item\">\n//                   <a className=\"nav-link\" href=\"#\">\n//                     Calendar\n//                   </a>\n//                 </li>\n//               </nav>\n//               <li className=\"nav-item\">\n//                 <a className=\"nav-link\" href=\"#\">\n//                   Plans\n//                 </a>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <a className=\"nav-link\" href=\"#\">\n//                   Objetivos\n//                 </a>\n//               </li>\n//               <li className=\"nav-item dropdown active\">\n//                 <button\n//                   className=\"btn dropdown-toggle\"\n//                   type=\"button\"\n//                   id=\"dropdownMenu2\"\n//                   data-toggle=\"dropdown\"\n//                   aria-haspopup=\"true\"\n//                   aria-expanded=\"false\"\n//                   onClick={event => pickedSyllabusRequestHandler(event)}\n//                   value=\"showSyllabiList\"\n//                 >\n//                   {' '}\n//                   View Syllabi\n//                 </button>\n\n//                 <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n//                   {storeContext.everythingSyllabus.syllabusData\n//                     ? processSyllabiList()\n//                     : null}\n//                 </div>\n//               </li>\n//             </ul>\n\n//             <form className=\"form-inline ml-auto\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control mr-2\"\n//                 placeholder=\"Search Task\"\n//               />\n//               <button className=\"btn btn-outline-success\">Search</button>\n//             </form>\n//             <div className=\"nav-item dropdown\">\n//               <a\n//                 href=\"#\"\n//                 className=\"nav-link dropdown-toggle\"\n//                 data-toggle=\"dropdown\"\n//               >\n//                 Creation\n//               </a>\n//               <div className=\"dropdown-menu\">\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"4\"\n//                   className=\"dropdown-item\"\n//                 >\n//                   {' '}\n//                   Task\n//                 </button>\n\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"5\" //will be contentChoice later\n//                   className=\"dropdown-item\"\n//                 >\n//                   Event\n//                 </button>\n\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"6\" //for contentChoice //'10' is handlerChoice\n//                   className=\"dropdown-item\"\n//                 >\n//                   Syllabus\n//                 </button>\n\n//                 <a href=\"#\" className=\"dropdown-item\">\n//                   Objetivo\n//                 </a>\n//                 <a href=\"#\" className=\"dropdown-item\"></a>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </nav>\n//     </div>\n//   );\n//   return <React.Fragment>{navbarDisplay}</React.Fragment>;\n// };\n\n// export default Navbar;\n"]},"metadata":{},"sourceType":"module"}
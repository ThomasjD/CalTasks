{"ast":null,"code":"import React, { Component } from 'react';\nimport App from './App';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from '../registerServiceWorker';\n\nclass DataStructure extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: 'hello'\n    };\n  }\n\n  render() {}\n\n}\n\nexport default DataStructure; // state = {\n//   objectives: [\n//     {\n//       objId: '',\n//       objTitle: '',\n//       timeCat: '',\n//       // daily: 1\n//       // days: 1.1-1.7\n//       // months: 2.3,2.6,2.9\n//       // year: 3.1,3.6, 3.9, 3.12\n//       subjectCat: '',\n//       expirationDate: '',\n//       objStatus: '',\n//       requiredCompletionTime: ''\n//     }\n//   ],\n//   objRequiredWork: {\n//     objId: '', //from objectives.objId\n//     requiredWork: [\n//       {\n//         syllabi: [\n//           { syllabusId: '' } //list of required syllabi\n//         ],\n//         level1Tasks: [],\n//         level2Tasks: [],\n//         level3Tasks: []\n//       }\n//     ]\n//   },\n//   syllabi: [\n//     {\n//       syllabusId: '',\n//       syllabusTitle: '', //ReactMax\n//       objSource: '', //objId\n//       field: '', //Programing\n//       concentration: '', //Front End\n//       subjectCat: '', //Library\n//       subject: '' //React\n//     }\n//   ],\n//   syllabusWork: {\n//     syllabusId: '', //same as syllabusId above\n//     workTasks: [\n//       {\n//         lessonId: '',\n//         taskTitle: '',\n//         unit: '',\n//         chapter: '',\n//         sections: '',\n//         topics: '',\n//         requiredTime: ''\n//       }\n//     ]\n//   },\n//   scheduledTasks: [\n//     {\n//       taskId: '', // SyllabusWork.syllabusId.workTasks.lessonId\n//       TaskTitle: '', //SyllabusWork.syllabusId.workTasks.taskTitle\n//       source: '', //Syllabus/syllabusId/syllabusTitle\n//       subjectCat: '', ////Syllabus/syllabusId/subjectCat\n//       //task is errand/apt/chore -> subjectCat = nonRepetitiveTasks\n//       //task is repetitive tasks -> subject Cat = repetitiveTaskTasks\n//       assignedTime,\n//       assignedDate: '',\n//       Deadline: '' //date\n//     }\n//   ]\n// };","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/DataStructure.js"],"names":["React","Component","App","ReactDOM","registerServiceWorker","DataStructure","constructor","props","state","word","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACpCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAGnBC,KAHmB,GAGX;AACNC,MAAAA,IAAI,EAAE;AADA,KAHW;AAElB;;AAKDC,EAAAA,MAAM,GAAG,CAAE;;AARyB;;AAWtC,eAAeL,aAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport App from './App';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from '../registerServiceWorker';\n\nclass DataStructure extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    word: 'hello'\n  };\n\n  render() {}\n}\n\nexport default DataStructure;\n// state = {\n//   objectives: [\n//     {\n//       objId: '',\n//       objTitle: '',\n//       timeCat: '',\n//       // daily: 1\n//       // days: 1.1-1.7\n//       // months: 2.3,2.6,2.9\n//       // year: 3.1,3.6, 3.9, 3.12\n//       subjectCat: '',\n//       expirationDate: '',\n//       objStatus: '',\n//       requiredCompletionTime: ''\n//     }\n//   ],\n\n//   objRequiredWork: {\n//     objId: '', //from objectives.objId\n//     requiredWork: [\n//       {\n//         syllabi: [\n//           { syllabusId: '' } //list of required syllabi\n//         ],\n//         level1Tasks: [],\n//         level2Tasks: [],\n//         level3Tasks: []\n//       }\n//     ]\n//   },\n\n//   syllabi: [\n//     {\n//       syllabusId: '',\n//       syllabusTitle: '', //ReactMax\n//       objSource: '', //objId\n//       field: '', //Programing\n//       concentration: '', //Front End\n//       subjectCat: '', //Library\n//       subject: '' //React\n//     }\n//   ],\n\n//   syllabusWork: {\n//     syllabusId: '', //same as syllabusId above\n//     workTasks: [\n//       {\n//         lessonId: '',\n//         taskTitle: '',\n//         unit: '',\n//         chapter: '',\n//         sections: '',\n//         topics: '',\n//         requiredTime: ''\n//       }\n//     ]\n//   },\n\n//   scheduledTasks: [\n//     {\n//       taskId: '', // SyllabusWork.syllabusId.workTasks.lessonId\n//       TaskTitle: '', //SyllabusWork.syllabusId.workTasks.taskTitle\n//       source: '', //Syllabus/syllabusId/syllabusTitle\n//       subjectCat: '', ////Syllabus/syllabusId/subjectCat\n//       //task is errand/apt/chore -> subjectCat = nonRepetitiveTasks\n//       //task is repetitive tasks -> subject Cat = repetitiveTaskTasks\n//       assignedTime,\n//       assignedDate: '',\n//       Deadline: '' //date\n//     }\n//   ]\n// };\n"]},"metadata":{},"sourceType":"module"}
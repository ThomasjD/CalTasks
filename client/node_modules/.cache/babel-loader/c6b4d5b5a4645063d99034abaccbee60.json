{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/UI/Modal/Modal.js\";\nimport React, { Component } from 'react';\nimport StoreDataContext from '../../../context/StoreDataContext';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux'; //import Backdrop from '../Backdrop/Backdrop';\n\nconst modal = props => {\n  return React.createElement(Aux, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.Modal //bind style here to something dynamic, needs to be js object\n    //If props.show = true\n    // -transform to translateY(0)\n    // -which is the position defined in css,\n    ,\n    style: {\n      //set transform property -> vh = viewport (slide it outside of the screen)\n      transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n      opacity: props.show ? '1' : '0' //is show true = opacity 100% if not then 0%\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.children));\n};\n\nexport default modal;\n{\n  /* <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? '1' : '0'\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux> */\n}","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/UI/Modal/Modal.js"],"names":["React","Component","StoreDataContext","classes","Aux","modal","props","Modal","transform","show","opacity","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB,C,CACA;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEH,OAAO,CAACI,KADrB,CAEE;AACA;AACA;AACA;AALF;AAOE,IAAA,KAAK,EAAE;AACL;AACAC,MAAAA,SAAS,EAAEF,KAAK,CAACG,IAAN,GAAa,eAAb,GAA+B,oBAFrC;AAGLC,MAAAA,OAAO,EAAEJ,KAAK,CAACG,IAAN,GAAa,GAAb,GAAmB,GAHvB,CAG2B;;AAH3B,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGH,KAAK,CAACK,QAbT,CADF,CADF;AAmBD,CApBD;;AAsBA,eAAeN,KAAf;AAEA;AACE;;;;;;;;;;;;AAYD","sourcesContent":["import React, { Component } from 'react';\nimport StoreDataContext from '../../../context/StoreDataContext';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux';\n//import Backdrop from '../Backdrop/Backdrop';\n\nconst modal = props => {\n  return (\n    <Aux>\n      <div\n        className={classes.Modal}\n        //bind style here to something dynamic, needs to be js object\n        //If props.show = true\n        // -transform to translateY(0)\n        // -which is the position defined in css,\n\n        style={{\n          //set transform property -> vh = viewport (slide it outside of the screen)\n          transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n          opacity: props.show ? '1' : '0' //is show true = opacity 100% if not then 0%\n        }}\n      >\n        {props.children}\n      </div>\n    </Aux>\n  );\n};\n\nexport default modal;\n\n{\n  /* <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? '1' : '0'\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux> */\n}\n"]},"metadata":{},"sourceType":"module"}
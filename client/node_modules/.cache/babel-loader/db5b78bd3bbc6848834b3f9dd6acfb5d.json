{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/HowBusyThisWeek/HowBusyThisWeek.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport students from '../../../containers/Student.css';\nimport TasksContext from '../../../context/tasksContext';\nimport Task from '../../ViewContent/Tasks/Task/Task';\nimport HowBusyThisDay from './HowBusyThisDay/HowBusyThisDay';\nimport Aux from '../../../hoc/Aux';\nimport StoreDataContext from '../../../context/StoreDataContext'; //import rocky from '../../containers/App.module.css'\n// import classNames from 'classnames';\n// import classes from './Cockpit.module.css';\n// import Navbar from './navBar';\n// import DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\n// import Template from '../../Template/Template';\n\nconst HowBusyThisWeek = props => {\n  const storeDataContext = useContext(StoreDataContext); // const (aa,setbb) = useState({\n  // })\n\n  const renderTableHeaderDayTasksHandler = () => {\n    // let header = null;\n    // header = Object.keys(tasksContext.tasksData.tasksData.numTasksThisWeek);\n    // return header.map((key, index) => {\n    //   return (\n    //     <Aux>\n    //       <th key={index}>Day</th>\n    //       <th key={index}>Number Of Tasks</th>\n    //     </Aux>\n    //   );\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      key: \"day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"th\", {\n      key: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Number Of Tasks\"));\n  };\n\n  const allTasksPerDay = () => {\n    //\n    let busyTask = null;\n    busyTask = Object.keys(storeDataContext.tasksData.tasksData.numTasksThisWeek);\n    return busyTask.map((day, index) => {\n      let taskNum = storeDataContext.tasksData.tasksData.numTasksThisWeek[day];\n      let particularKey = day.concat(index);\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, day), React.createElement(\"td\", {\n        className: \"text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, makeIconHandler(day, taskNum, particularKey))));\n    });\n  };\n\n  const makeIconHandler = (day, taskNum, particularKey) => {\n    let makeIcon = null;\n    return makeIcon = [...Array(taskNum)].map((_, index) => {\n      return React.createElement(HowBusyThisDay, {\n        taskNum: taskNum,\n        particularKey: day.concat(index),\n        type: day,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    }).reduce((arr, el) => {\n      return arr.concat(el);\n    }, []); //get rid of the array\n    // let busyTask = Object.keys(\n    //   tasksContext.tasksData.tasksData.numTasksThisWeek\n    // ) // array of keys\n    //   .map(day => {\n    //     //use each key  make arrays equivalent to their value\n    //     return [\n    //       ...Array(tasksContext.tasksData.tasksData.numTasksThisWeek[day])\n    //     ].map((_, index) => {\n    //       //for each of these undefined array pass in this component\n    //       return\n    //        <HowBusyThisDay\n    //       taskNum={taskNum}\n    //       particularKey={day.concat(index)}\n    //       type={day}\n    //     />\n    //     <HowBusyThisDay key={day + index} type={day} />;\n    //     });\n    //   }) //end up w/ an array of components\n    // .reduce((arr, el) => {\n    //   return arr.concat(el);\n    // }, []); //get rid of the array\n    // return busyTask;\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    id: \"students\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, renderTableHeaderDayTasksHandler()), allTasksPerDay()))));\n};\n\nexport default HowBusyThisWeek;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/HowBusyThisWeek/HowBusyThisWeek.js"],"names":["React","useEffect","useState","useContext","students","TasksContext","Task","HowBusyThisDay","Aux","StoreDataContext","HowBusyThisWeek","props","storeDataContext","renderTableHeaderDayTasksHandler","allTasksPerDay","busyTask","Object","keys","tasksData","numTasksThisWeek","map","day","index","taskNum","particularKey","concat","makeIconHandler","makeIcon","Array","_","reduce","arr","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport students from '../../../containers/Student.css';\nimport TasksContext from '../../../context/tasksContext';\nimport Task from '../../ViewContent/Tasks/Task/Task';\nimport HowBusyThisDay from './HowBusyThisDay/HowBusyThisDay';\nimport Aux from '../../../hoc/Aux';\nimport StoreDataContext from '../../../context/StoreDataContext';\n//import rocky from '../../containers/App.module.css'\n// import classNames from 'classnames';\n// import classes from './Cockpit.module.css';\n// import Navbar from './navBar';\n// import DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\n// import Template from '../../Template/Template';\n\nconst HowBusyThisWeek = props => {\n  const storeDataContext = useContext(StoreDataContext);\n  // const (aa,setbb) = useState({\n\n  // })\n\n  const renderTableHeaderDayTasksHandler = () => {\n    // let header = null;\n    // header = Object.keys(tasksContext.tasksData.tasksData.numTasksThisWeek);\n\n    // return header.map((key, index) => {\n    //   return (\n    //     <Aux>\n    //       <th key={index}>Day</th>\n    //       <th key={index}>Number Of Tasks</th>\n    //     </Aux>\n    //   );\n\n    return (\n      <Aux>\n        <th key=\"day\">Day</th>\n        <th key=\"icon\">Number Of Tasks</th>\n      </Aux>\n    );\n  };\n\n  const allTasksPerDay = () => {\n    //\n    let busyTask = null;\n    busyTask = Object.keys(\n      storeDataContext.tasksData.tasksData.numTasksThisWeek\n    );\n\n    return busyTask.map((day, index) => {\n      let taskNum = storeDataContext.tasksData.tasksData.numTasksThisWeek[day];\n      let particularKey = day.concat(index);\n      return (\n        <Aux>\n          <tr>\n            <td className=\"text-dark\">{day}</td>\n            <td className=\"text-dark\">\n              {makeIconHandler(day, taskNum, particularKey)}\n            </td>\n          </tr>\n        </Aux>\n      );\n    });\n  };\n  const makeIconHandler = (day, taskNum, particularKey) => {\n    let makeIcon = null;\n    return (makeIcon = [...Array(taskNum)]\n      .map((_, index) => {\n        return (\n          <HowBusyThisDay\n            taskNum={taskNum}\n            particularKey={day.concat(index)}\n            type={day}\n          />\n        );\n      })\n      .reduce((arr, el) => {\n        return arr.concat(el);\n      }, [])); //get rid of the array\n\n    // let busyTask = Object.keys(\n    //   tasksContext.tasksData.tasksData.numTasksThisWeek\n    // ) // array of keys\n    //   .map(day => {\n    //     //use each key  make arrays equivalent to their value\n    //     return [\n    //       ...Array(tasksContext.tasksData.tasksData.numTasksThisWeek[day])\n    //     ].map((_, index) => {\n    //       //for each of these undefined array pass in this component\n    //       return\n    //        <HowBusyThisDay\n    //       taskNum={taskNum}\n    //       particularKey={day.concat(index)}\n    //       type={day}\n    //     />\n\n    //     <HowBusyThisDay key={day + index} type={day} />;\n    //     });\n    //   }) //end up w/ an array of components\n    // .reduce((arr, el) => {\n    //   return arr.concat(el);\n    // }, []); //get rid of the array\n\n    // return busyTask;\n  };\n  return (\n    <React.Fragment>\n      <div>\n        <table id=\"students\">\n          <tbody>\n            <tr>{renderTableHeaderDayTasksHandler()}</tr>\n            {allTasksPerDay()}\n          </tbody>\n        </table>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default HowBusyThisWeek;\n"]},"metadata":{},"sourceType":"module"}
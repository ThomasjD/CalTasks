{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/TasksData.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nimport calendarObj from '../../components/Calendar/calendarObj';\n\nclass TasksData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataBaseName: 'tasks',\n      showHowBusyWeeek: false,\n      //NewEvent\n      assignedTimeStart: '',\n      //14:00:00 GMT-0500 (Colombia Standard Time)\n      assignedTimeStop: '',\n      //00:00 - 24:00, string\n      assignedDateStart: '',\n      //Thu Jan 16 2020\n      assignedDateStop: '',\n      //optional\n      eventDuration: '',\n      //\n      blockOffTimeSlot: '',\n      //T-F  when event will take on time slot for scheduled day\n      unAssignedTasksForWeek: [{\n        id: 'qrwrwq',\n        scheduleTask: null,\n        task: 'Find work',\n        deadline: 'Lunes',\n        category: 'workout',\n        source: '' //Syllabus/syllabusId/syllabusTitle\n\n      }, {\n        id: 'egewhw',\n        scheduleTask: null,\n        task: 'buy shoes',\n        deadline: 'Martes',\n        category: 'programing',\n        source: ''\n      }, {\n        id: 'asfasv',\n        scheduleTask: null,\n        task: 'mail package',\n        deadline: 'Jueves',\n        category: 'study',\n        source: ''\n      }],\n      Monday: [{\n        id: 'morning1',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'programing',\n        source: '',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'afternoon1',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'workout'\n      }, {\n        id: 'evening1',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'errands',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }],\n      Tuesday: [{\n        id: 'morning2',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'errands',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      } // {\n      //   id: 'afternoon2',\n      //   timeOfDay: 'afternoon',\n      //   task: 'eat lunch',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles',\n      //   assignedTimeStart: '',\n      //   assignedTimeStop: '',\n      //   assignedDate: ''\n      // },\n      // {\n      //   id: 'evening2',\n      //   timeOfDay: 'evening',\n      //   task: 'play ball',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles'\n      // }\n      ],\n      Wednesday: [{\n        id: 'morning3',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'afternoon3',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'evening3',\n        timeOfDay: '',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }],\n      // Thursday: [\n      //   {\n      //     id: 'morning4',\n      //     timeOfDay: 'morning',\n      //     task: 'comprar comida',\n      //     deadline: 'Jueves',\n      //     category: 'Laureles',\n      //     assignedTimeStart: '',\n      //     assignedTimeStop: '',\n      //     assignedDate: ''\n      //   },\n      //   {\n      //     id: 'afternoon4',\n      //     timeOfDay: 'afternoon',\n      //     task: 'eat lunch',\n      //     deadline: 'Jueves',\n      //     category: 'Laureles',\n      //     assignedTimeStart: '',\n      //     assignedTimeStop: '',\n      //     assignedDate: ''\n      //   }\n      // {\n      //   id: 'evening4',\n      //   timeOfDay: 'evening',\n      //   task: 'play ball',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles',\n      //   assignedTimeStart: '',\n      //   assignedTimeStop: '',\n      //   assignedDate: ''\n      // }\n      //],\n      Friday: [{\n        id: 'morning5',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'afternoon5',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'evening5',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }],\n      Saturday: [{\n        id: 'morning6',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'afternoon6',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'evening6',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }],\n      Sunday: [{\n        id: 'morning7',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'afternoon7',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      } // {\n      //   id: 'evening7',\n      //   timeOfDay: 'evening',\n      //   task: 'play ball',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles',\n      //   assignedTimeStart: '',\n      //   assignedTimeStop: '',\n      //   assignedDate: ''\n      // }\n      ],\n      TodayTasksHeader: '',\n      word: 'red',\n      reRenderTasks: false\n    };\n\n    this.lastTaskHeaderHandler = () => {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          if (this.state.unAssignedTasksForWeek.length != 0) {\n            //alert(`Inside of lastTaskHeaderHandler if statement:`);\n            this.setState({\n              lastTaskHeader: this.state.unAssignedTasksForWeek[0]\n            }, () => this.context.dataReceiverHandler(this.state));\n          } else {\n            //alert(`Inside of lastTaskHeaderHandler else statement:`);\n            this.setState({\n              lastTaskHeader: this.state.lastTaskHeader\n            }, () => this.context.dataReceiverHandler(this.state));\n          }\n\n          break;\n\n        case '2':\n          //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n          let today = this.context.dataRequestDetails.dataLocation; //alert(`inside case 2 LastTaskHeadre today: ${today}`);\n\n          if (this.state[today].length != 0) {\n            //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n            this.setState({\n              TodayTasksHeader: this.state[today][0],\n              dataLocation: today\n            }, () => this.context.dataReceiverHandler(this.state));\n          } else {\n            // alert(`Inside of lastTaskHeaderHandler case 2 else statement:`);\n            this.setState({\n              TodayTasksHeader: this.state.TodayTasksHeader\n            }, () => this.context.dataReceiverHandler(this.state));\n          }\n\n          break;\n\n        case '9':\n          let pickedDay = this.context.dataRequestDetails.dataLocation; // alert(\n          //   `inside case 9 datalocation: ${this.state[pickedDay].eventTitle}`\n          // );\n\n          if (this.state[pickedDay].length != 0) {\n            //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n            this.setState({\n              pickedDayTasksHeader: this.state[pickedDay][0],\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            }, () => this.context.dataReceiverHandler(this.state));\n          } else {\n            //alert(`Inside of lastTaskHeaderHandler case 2 else statement:`);\n            this.setState({\n              pickedDayTasksHeader: this.state.pickedDayTasksHeader,\n              dataLocation: this.context.dataRequestDetails.value\n            }, () => this.context.dataReceiverHandler(this.state));\n          }\n\n          break;\n\n        case '10':\n          alert(`inside case 10`); //pickedDay = this.context.dataRequestDetails.dataLocation;\n\n          alert(`inside case 10: ${this.context.dataRequestDetails.dataLocation}`);\n          this.setState({\n            pickedDayTasksHeader: this.state.Monday[0],\n            dataLocation: this.context.dataRequestDetails.dataLocation\n          }, () => this.context.dataReceiverHandler(this.state));\n          break;\n      }\n    };\n\n    this.addTaskHandler = e => {\n      console.log(e.task); //need to fix this in newTask so that it automaticly picks up the default value of the radio button\n\n      let newestEvent = [...this.state.tasks, e.task];\n      this.setState({\n        tasks: newestEvent\n      }); //this.setState({ showEvents: true });\n    };\n\n    this.deleteTaskFromUnAssignedTasksForWeekHandler = taskIndex => {\n      let currentUnassignedTasksForWeek = [...this.state.unAssignedTasksForWeek];\n      currentUnassignedTasksForWeek.splice(taskIndex, 1);\n      this.setState({\n        unAssignedTasksForWeek: currentUnassignedTasksForWeek,\n        receivedData: 'YES'\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.changeTaskFromUnAssignedTasksForWeekHandler = (taskValue, taskChangeId) => {\n      //Find the index of the lessons that matches the id sent in\n      const foundTaskIndex = this.state.unAssignedTasksForWeek.findIndex(currentId => {\n        return currentId.id === taskChangeId;\n      }); //createnew task item to put into array\n\n      const updatedTasks = _objectSpread({}, this.state.unAssignedTasksForWeek[foundTaskIndex]); //using updated values to define the task of the particular pulled out task\n      //updatedTasks.lesson = event.target.value;\n\n\n      updatedTasks.task = taskValue; //pull out of states maxReact array\n\n      const unAssignedTasksForWeek = [...this.state.unAssignedTasksForWeek]; //update the new lesson w/ ID of interest from the copy of MaxReact (unAssignedTasksForWeek)\n\n      unAssignedTasksForWeek[foundTaskIndex] = updatedTasks; //final update of unAssignedTasksForWeek\n\n      this.setState({\n        unAssignedTasksForWeek: unAssignedTasksForWeek\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.deleteTodayTaskhandler = taskIndex => {\n      //alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTodayTasks: true\n      });\n      let dataLocation = this.context.dataRequestDetails.dataLocation; //get tasks array\n\n      const todayTasks = [...this.state[dataLocation]]; //splice task of interst\n\n      todayTasks.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        [dataLocation]: todayTasks\n      }, () => this.context.dataReceiverHandler(this.state)); //this.setState({ showTasksCounter: false });\n    };\n\n    this.todayTaskChangeHandler = (newTaskValue, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      let dataLocation = this.context.dataRequestDetails.dataLocation;\n      const foundTaskIndex = this.state[dataLocation].findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state[dataLocation][foundTaskIndex]);\n\n      updatedTask.task = newTaskValue; //pull out the states tasks array\n\n      const todayTasks = [...this.state[dataLocation]]; //update the task with id of interest w/ new task description\n\n      todayTasks[foundTaskIndex] = updatedTask; //update the state\n      //without the () =>() -> dataReceiver will not wait till things have been updated in state, it will exicute rightaway\n\n      this.setState({\n        [dataLocation]: todayTasks\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.showHowBusyEverydayHandler = () => {\n      let numTasksThisWeek = {\n        Monday: this.state.Monday.length,\n        Tuesday: this.state.Tuesday.length,\n        Wednesday: this.state.Wednesday.length,\n        Thursday: this.state.Thursday.length,\n        Friday: this.state.Friday.length,\n        Saturday: this.state.Saturday.length,\n        Sunday: this.state.Sunday.length\n      };\n      this.setState({\n        numTasksThisWeek: numTasksThisWeek,\n        showHowBusyWeek: true\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.newEventHandler = value => {\n      alert('slickdealz');\n      alert(`inside TasksData newEventHandler() value: ${value.eventTitle}`);\n      let newEvent = this.context.dataRequestDetails.value;\n      let assignTask = {\n        id: newEvent.startTimeDate.dateObjectString,\n        task: newEvent.eventTitle,\n        note: newEvent.eventNote,\n        deadline: newEvent.deadline,\n        category: newEvent.eventCategory,\n        assignedTimeStart: newEvent.startTimeDate,\n        assignedTimeStop: newEvent.finishTimeDate\n      }; //Thur blocked out\n\n      let assignToCalendar = newEvent.startTimeDate.day; // let availableObjects = Object.keys(this.state)\n\n      if (typeof this.state[assignToCalendar] !== 'undefined') {\n        // object exists\n        let addNewEventToCurrentDay = [...this.state[assignToCalendar], assignTask]; // Thursday: {},\n\n        this.setState({\n          [assignToCalendar]: addNewEventToCurrentDay\n        }, () => this.context.dataReceiverHandler(this.state));\n      } else {\n        this.setState({\n          Thursday: [assignTask]\n        }, () => this.context.dataReceiverHandler(this.state));\n      }\n\n      alert(`inside case 9 datalocation: ${this.state.Thursday}`); // //THE DAY OF THE WEEK\n      // //let assignToDay = newEvent.startTimeDate.day;\n      // let today = calendarObj();\n      // let findDay = '';\n      // switch (today) {\n      //   case 1:\n      //     findDay = 'Monday';\n      //     break;\n      //   case 2:\n      //     findDay = 'Tuesday';\n      //     break;\n      //   case 3:\n      //     findDay = 'Wednesday';\n      //     break;\n      //   case 4:\n      //     findDay = 'Thursday';\n      //     break;\n      //   case 5:\n      //     findDay = 'Friday';\n      //     break;\n      //   case 6:\n      //     findDay = 'Saturday';\n      //     break;\n      //   case 0:\n      //     findDay = 'Sunday';\n      //     break;\n      // }\n      // let foundDay = this.state[today]; //array of objects on certain day\n      // foundDay.push(assignTask);\n      // this.setState({ [today]: foundDay }, () =>\n      //   this.context.dataReceiverHandler(this.state)\n      // );\n    };\n  }\n\n  render() {\n    //need to put back this.context.\n    if (this.context.dataRequestDetails.typeOfData === 'events') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          //new Event\n          alert(`doogie inside TasksData events case 1 contentChoice: ${this.context.dataRequestDetails.handlerChoice}`);\n          this.context.resetHandlerChoice(this.newEventHandler(this.props.dataRequestDetails.value));\n          break;\n      }\n    } //dataRequestDetails.typeOfData === 'events';\n\n\n    if (this.context.dataRequestDetails.typeOfData === 'tasks') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          //Unscheduled Tasks for Week\n          alert(`in case 1 of tasksdata`);\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '2':\n          //Today's Tasks: TodayTasksHeader\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '3':\n          //delete from contentChoice = #1\n          this.context.resetHandlerChoice(this.deleteTaskFromUnAssignedTasksForWeekHandler(this.props.dataRequestDetails.index));\n          break;\n\n        case '4':\n          //change from contentChoice = #1\n          this.context.resetHandlerChoice(this.changeTaskFromUnAssignedTasksForWeekHandler(this.props.dataRequestDetails.value, this.props.dataRequestDetails.id));\n          break;\n\n        case '5':\n          //Delete task on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(this.deleteTodayTaskhandler(this.props.dataRequestDetails.index));\n          break;\n\n        case '6':\n          //Changes on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(this.todayTaskChangeHandler(this.props.dataRequestDetails.value, this.props.dataRequestDetails.id));\n          break;\n\n        case '7':\n          //for cockpit displaying icons for every task for each day of week\n          this.context.resetHandlerChoice(this.showHowBusyEverydayHandler());\n          break;\n\n        case '8':\n          //new Event\n          // this.context.resetHandlerChoice(\n          //   this.newEventHandler(this.props.dataRequestDetails.value)\n          // );\n          break;\n\n        case '9':\n          //picked day\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '10':\n          //picked day\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n      }\n    } // }\n\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    });\n  }\n\n}\n\nTasksData.contextType = TasksContext;\nexport default TasksData;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/TasksData.js"],"names":["React","Component","RightCockpit","TasksContext","calendarObj","TasksData","state","dataBaseName","showHowBusyWeeek","assignedTimeStart","assignedTimeStop","assignedDateStart","assignedDateStop","eventDuration","blockOffTimeSlot","unAssignedTasksForWeek","id","scheduleTask","task","deadline","category","source","Monday","timeOfDay","assignedDate","Tuesday","Wednesday","Friday","Saturday","Sunday","TodayTasksHeader","word","reRenderTasks","lastTaskHeaderHandler","context","dataRequestDetails","handlerChoice","length","setState","lastTaskHeader","dataReceiverHandler","today","dataLocation","pickedDay","pickedDayTasksHeader","value","alert","addTaskHandler","e","console","log","newestEvent","tasks","deleteTaskFromUnAssignedTasksForWeekHandler","taskIndex","currentUnassignedTasksForWeek","splice","receivedData","changeTaskFromUnAssignedTasksForWeekHandler","taskValue","taskChangeId","foundTaskIndex","findIndex","currentId","updatedTasks","deleteTodayTaskhandler","reRenderTodayTasks","todayTasks","todayTaskChangeHandler","newTaskValue","taskChangedId","updatedTask","showHowBusyEverydayHandler","numTasksThisWeek","Thursday","showHowBusyWeek","newEventHandler","eventTitle","newEvent","assignTask","startTimeDate","dateObjectString","note","eventNote","eventCategory","finishTimeDate","assignToCalendar","day","addNewEventToCurrentDay","render","typeOfData","resetHandlerChoice","props","index","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nimport calendarObj from '../../components/Calendar/calendarObj';\n\nclass TasksData extends Component {\n  state = {\n    dataBaseName: 'tasks',\n    showHowBusyWeeek: false,\n\n    //NewEvent\n    assignedTimeStart: '', //14:00:00 GMT-0500 (Colombia Standard Time)\n    assignedTimeStop: '', //00:00 - 24:00, string\n    assignedDateStart: '', //Thu Jan 16 2020\n    assignedDateStop: '',\n    //optional\n    eventDuration: '', //\n    blockOffTimeSlot: '', //T-F  when event will take on time slot for scheduled day\n\n    unAssignedTasksForWeek: [\n      {\n        id: 'qrwrwq',\n        scheduleTask: null,\n        task: 'Find work',\n\n        deadline: 'Lunes',\n        category: 'workout',\n\n        source: ''\n        //Syllabus/syllabusId/syllabusTitle\n      },\n      {\n        id: 'egewhw',\n        scheduleTask: null,\n        task: 'buy shoes',\n        deadline: 'Martes',\n        category: 'programing',\n        source: ''\n      },\n      {\n        id: 'asfasv',\n        scheduleTask: null,\n        task: 'mail package',\n        deadline: 'Jueves',\n        category: 'study',\n        source: ''\n      }\n    ],\n    Monday: [\n      {\n        id: 'morning1',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'programing',\n        source: '',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'afternoon1',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'workout'\n      },\n      {\n        id: 'evening1',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'errands',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }\n    ],\n    Tuesday: [\n      {\n        id: 'morning2',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'errands',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }\n      // {\n      //   id: 'afternoon2',\n      //   timeOfDay: 'afternoon',\n      //   task: 'eat lunch',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles',\n      //   assignedTimeStart: '',\n      //   assignedTimeStop: '',\n      //   assignedDate: ''\n      // },\n      // {\n      //   id: 'evening2',\n      //   timeOfDay: 'evening',\n      //   task: 'play ball',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles'\n      // }\n    ],\n    Wednesday: [\n      {\n        id: 'morning3',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'afternoon3',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'evening3',\n        timeOfDay: '',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }\n    ],\n    // Thursday: [\n    //   {\n    //     id: 'morning4',\n    //     timeOfDay: 'morning',\n    //     task: 'comprar comida',\n    //     deadline: 'Jueves',\n    //     category: 'Laureles',\n    //     assignedTimeStart: '',\n    //     assignedTimeStop: '',\n    //     assignedDate: ''\n    //   },\n    //   {\n    //     id: 'afternoon4',\n    //     timeOfDay: 'afternoon',\n    //     task: 'eat lunch',\n    //     deadline: 'Jueves',\n    //     category: 'Laureles',\n    //     assignedTimeStart: '',\n    //     assignedTimeStop: '',\n    //     assignedDate: ''\n    //   }\n    // {\n    //   id: 'evening4',\n    //   timeOfDay: 'evening',\n    //   task: 'play ball',\n    //   deadline: 'Jueves',\n    //   category: 'Laureles',\n    //   assignedTimeStart: '',\n    //   assignedTimeStop: '',\n    //   assignedDate: ''\n    // }\n    //],\n    Friday: [\n      {\n        id: 'morning5',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'afternoon5',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'evening5',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }\n    ],\n    Saturday: [\n      {\n        id: 'morning6',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'afternoon6',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'evening6',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }\n    ],\n    Sunday: [\n      {\n        id: 'morning7',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'afternoon7',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }\n      // {\n      //   id: 'evening7',\n      //   timeOfDay: 'evening',\n      //   task: 'play ball',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles',\n      //   assignedTimeStart: '',\n      //   assignedTimeStop: '',\n      //   assignedDate: ''\n      // }\n    ],\n    TodayTasksHeader: '',\n    word: 'red',\n    reRenderTasks: false\n  };\n\n  lastTaskHeaderHandler = () => {\n    switch (this.context.dataRequestDetails.handlerChoice) {\n      case '1':\n        if (this.state.unAssignedTasksForWeek.length != 0) {\n          //alert(`Inside of lastTaskHeaderHandler if statement:`);\n          this.setState(\n            { lastTaskHeader: this.state.unAssignedTasksForWeek[0] },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        } else {\n          //alert(`Inside of lastTaskHeaderHandler else statement:`);\n          this.setState(\n            { lastTaskHeader: this.state.lastTaskHeader },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        }\n\n        break;\n\n      case '2':\n        //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n        let today = this.context.dataRequestDetails.dataLocation;\n        //alert(`inside case 2 LastTaskHeadre today: ${today}`);\n\n        if (this.state[today].length != 0) {\n          //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n          this.setState(\n            { TodayTasksHeader: this.state[today][0], dataLocation: today },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        } else {\n          // alert(`Inside of lastTaskHeaderHandler case 2 else statement:`);\n          this.setState(\n            { TodayTasksHeader: this.state.TodayTasksHeader },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        }\n        break;\n      case '9':\n        let pickedDay = this.context.dataRequestDetails.dataLocation;\n        // alert(\n        //   `inside case 9 datalocation: ${this.state[pickedDay].eventTitle}`\n        // );\n        if (this.state[pickedDay].length != 0) {\n          //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n\n          this.setState(\n            {\n              pickedDayTasksHeader: this.state[pickedDay][0],\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        } else {\n          //alert(`Inside of lastTaskHeaderHandler case 2 else statement:`);\n          this.setState(\n            {\n              pickedDayTasksHeader: this.state.pickedDayTasksHeader,\n              dataLocation: this.context.dataRequestDetails.value\n            },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        }\n\n        break;\n      case '10':\n        alert(`inside case 10`);\n        //pickedDay = this.context.dataRequestDetails.dataLocation;\n        alert(\n          `inside case 10: ${this.context.dataRequestDetails.dataLocation}`\n        );\n        this.setState(\n          {\n            pickedDayTasksHeader: this.state.Monday[0],\n            dataLocation: this.context.dataRequestDetails.dataLocation\n          },\n\n          () => this.context.dataReceiverHandler(this.state)\n        );\n        break;\n    }\n  };\n  //dynamic edit task for Today (Monday)\n  addTaskHandler = e => {\n    console.log(e.task);\n    //need to fix this in newTask so that it automaticly picks up the default value of the radio button\n\n    let newestEvent = [...this.state.tasks, e.task];\n\n    this.setState({ tasks: newestEvent });\n    //this.setState({ showEvents: true });\n  };\n\n  deleteTaskFromUnAssignedTasksForWeekHandler = taskIndex => {\n    let currentUnassignedTasksForWeek = [...this.state.unAssignedTasksForWeek];\n\n    currentUnassignedTasksForWeek.splice(taskIndex, 1);\n\n    this.setState(\n      {\n        unAssignedTasksForWeek: currentUnassignedTasksForWeek,\n        receivedData: 'YES'\n      },\n      () => this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  changeTaskFromUnAssignedTasksForWeekHandler = (taskValue, taskChangeId) => {\n    //Find the index of the lessons that matches the id sent in\n    const foundTaskIndex = this.state.unAssignedTasksForWeek.findIndex(\n      currentId => {\n        return currentId.id === taskChangeId;\n      }\n    );\n\n    //createnew task item to put into array\n    const updatedTasks = {\n      ...this.state.unAssignedTasksForWeek[foundTaskIndex]\n    };\n\n    //using updated values to define the task of the particular pulled out task\n    //updatedTasks.lesson = event.target.value;\n    updatedTasks.task = taskValue;\n\n    //pull out of states maxReact array\n    const unAssignedTasksForWeek = [...this.state.unAssignedTasksForWeek];\n\n    //update the new lesson w/ ID of interest from the copy of MaxReact (unAssignedTasksForWeek)\n    unAssignedTasksForWeek[foundTaskIndex] = updatedTasks;\n\n    //final update of unAssignedTasksForWeek\n    this.setState({ unAssignedTasksForWeek: unAssignedTasksForWeek }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  deleteTodayTaskhandler = taskIndex => {\n    //alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTodayTasks: true });\n    let dataLocation = this.context.dataRequestDetails.dataLocation;\n\n    //get tasks array\n    const todayTasks = [...this.state[dataLocation]];\n\n    //splice task of interst\n    todayTasks.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ [dataLocation]: todayTasks }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n\n    //this.setState({ showTasksCounter: false });\n  };\n\n  todayTaskChangeHandler = (newTaskValue, taskChangedId) => {\n    //find the task that matches the taskChangedId\n    let dataLocation = this.context.dataRequestDetails.dataLocation;\n\n    const foundTaskIndex = this.state[dataLocation].findIndex(currentId => {\n      return currentId.id === taskChangedId;\n    });\n\n    //create new task item that we will put into array\n    const updatedTask = { ...this.state[dataLocation][foundTaskIndex] };\n\n    updatedTask.task = newTaskValue;\n\n    //pull out the states tasks array\n    const todayTasks = [...this.state[dataLocation]];\n\n    //update the task with id of interest w/ new task description\n    todayTasks[foundTaskIndex] = updatedTask;\n\n    //update the state\n    //without the () =>() -> dataReceiver will not wait till things have been updated in state, it will exicute rightaway\n    this.setState({ [dataLocation]: todayTasks }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n  showHowBusyEverydayHandler = () => {\n    let numTasksThisWeek = {\n      Monday: this.state.Monday.length,\n      Tuesday: this.state.Tuesday.length,\n      Wednesday: this.state.Wednesday.length,\n      Thursday: this.state.Thursday.length,\n      Friday: this.state.Friday.length,\n      Saturday: this.state.Saturday.length,\n      Sunday: this.state.Sunday.length\n    };\n\n    this.setState(\n      { numTasksThisWeek: numTasksThisWeek, showHowBusyWeek: true },\n      () => this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  newEventHandler = value => {\n    alert('slickdealz');\n    alert(`inside TasksData newEventHandler() value: ${value.eventTitle}`);\n    let newEvent = this.context.dataRequestDetails.value;\n\n    let assignTask = {\n      id: newEvent.startTimeDate.dateObjectString,\n      task: newEvent.eventTitle,\n      note: newEvent.eventNote,\n      deadline: newEvent.deadline,\n      category: newEvent.eventCategory,\n      assignedTimeStart: newEvent.startTimeDate,\n      assignedTimeStop: newEvent.finishTimeDate\n    };\n\n    //Thur blocked out\n    let assignToCalendar = newEvent.startTimeDate.day;\n    // let availableObjects = Object.keys(this.state)\n    if (typeof this.state[assignToCalendar] !== 'undefined') {\n      // object exists\n      let addNewEventToCurrentDay = [\n        ...this.state[assignToCalendar],\n        assignTask\n      ];\n\n      // Thursday: {},\n      this.setState({ [assignToCalendar]: addNewEventToCurrentDay }, () =>\n        this.context.dataReceiverHandler(this.state)\n      );\n    } else {\n      this.setState({ Thursday: [assignTask] }, () =>\n        this.context.dataReceiverHandler(this.state)\n      );\n    }\n    alert(`inside case 9 datalocation: ${this.state.Thursday}`);\n    // //THE DAY OF THE WEEK\n    // //let assignToDay = newEvent.startTimeDate.day;\n    // let today = calendarObj();\n\n    // let findDay = '';\n    // switch (today) {\n    //   case 1:\n    //     findDay = 'Monday';\n    //     break;\n    //   case 2:\n    //     findDay = 'Tuesday';\n    //     break;\n    //   case 3:\n    //     findDay = 'Wednesday';\n    //     break;\n    //   case 4:\n    //     findDay = 'Thursday';\n    //     break;\n    //   case 5:\n    //     findDay = 'Friday';\n    //     break;\n    //   case 6:\n    //     findDay = 'Saturday';\n    //     break;\n    //   case 0:\n    //     findDay = 'Sunday';\n    //     break;\n    // }\n\n    // let foundDay = this.state[today]; //array of objects on certain day\n    // foundDay.push(assignTask);\n\n    // this.setState({ [today]: foundDay }, () =>\n    //   this.context.dataReceiverHandler(this.state)\n    // );\n  };\n\n  static contextType = TasksContext;\n\n  render() {\n    //need to put back this.context.\n    if (this.context.dataRequestDetails.typeOfData === 'events') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1': //new Event\n          alert(\n            `doogie inside TasksData events case 1 contentChoice: ${this.context.dataRequestDetails.handlerChoice}`\n          );\n          this.context.resetHandlerChoice(\n            this.newEventHandler(this.props.dataRequestDetails.value)\n          );\n\n          break;\n      }\n    }\n\n    //dataRequestDetails.typeOfData === 'events';\n    if (this.context.dataRequestDetails.typeOfData === 'tasks') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1': //Unscheduled Tasks for Week\n          alert(`in case 1 of tasksdata`);\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '2': //Today's Tasks: TodayTasksHeader\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '3': //delete from contentChoice = #1\n          this.context.resetHandlerChoice(\n            this.deleteTaskFromUnAssignedTasksForWeekHandler(\n              this.props.dataRequestDetails.index\n            )\n          );\n          break;\n        case '4': //change from contentChoice = #1\n          this.context.resetHandlerChoice(\n            this.changeTaskFromUnAssignedTasksForWeekHandler(\n              this.props.dataRequestDetails.value,\n              this.props.dataRequestDetails.id\n            )\n          );\n          break;\n\n        case '5': //Delete task on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(\n            this.deleteTodayTaskhandler(this.props.dataRequestDetails.index)\n          );\n\n          break;\n        case '6': //Changes on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(\n            this.todayTaskChangeHandler(\n              this.props.dataRequestDetails.value,\n              this.props.dataRequestDetails.id\n            )\n          );\n\n          break;\n        case '7': //for cockpit displaying icons for every task for each day of week\n          this.context.resetHandlerChoice(this.showHowBusyEverydayHandler());\n\n          break;\n        case '8': //new Event\n          // this.context.resetHandlerChoice(\n          //   this.newEventHandler(this.props.dataRequestDetails.value)\n          // );\n\n          break;\n        case '9': //picked day\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n        case '10': //picked day\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n      }\n    }\n\n    // }\n\n    return <React.Fragment></React.Fragment>;\n  }\n}\n\nexport default TasksData;\n"]},"metadata":{},"sourceType":"module"}
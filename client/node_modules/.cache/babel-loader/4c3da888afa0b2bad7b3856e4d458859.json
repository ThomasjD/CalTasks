{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Objectives/TimeBudget/WeeklyTimeBudget.js\";\nimport React, { Component } from 'react';\nimport classes from './WeeklyTimeBudget.module.css';\nimport StoreDataContext from '../../../../context/StoreDataContext';\nimport ObjectiveData from '../../../../containers/Store/ObjectiveData';\nimport PickedDayBudget from './PickedDayBudget/PickedDayBudget';\nimport daily from './PickedDayBudget/PickedDayBudget.module.css'; //import classes2 from '../DailyTimeBudget/DailyTimeBudget.module.css';\n//each day have a predetermined amt of time for each category\n//then each day you can balance it according to 24 hours\n//after balancing for each day, you have to go back to balance the weekly total\n\nclass WeeklyTimeBudget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: 'chicken5'\n    };\n\n    this.addHourToActivityPickedDay = activity => {\n      let pickedDay = this.state.pickedDay;\n      let allDaysTimeBudget = this.state.dailyBudget;\n\n      let pickedDayDailyBudget = _objectSpread({}, this.state.dailyBudget[pickedDay]);\n\n      let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n      let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount + 1;\n      let pickedDayUpdatedActivityHourCount = pickedDayCurrentActivityHourCount + 1;\n      pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n      pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n      allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n      this.setState({\n        dailyBudget: allDaysTimeBudget\n      });\n      this.addHourToActivity(activity); //this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.deductHourToActivityPickedDay = activity => {\n      let pickedDay = this.state.pickedDay;\n      let allDaysTimeBudget = this.state.dailyBudget;\n\n      let pickedDayDailyBudget = _objectSpread({}, this.state.dailyBudget[pickedDay]);\n\n      let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n      let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount - 1;\n      let pickedDayUpdatedActivityHourCount = pickedDayCurrentActivityHourCount - 1;\n      pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n      pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n      allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n      this.setState({\n        dailyBudget: allDaysTimeBudget\n      });\n      this.deductHourToActivity(activity);\n    };\n\n    this.addHourToActivity = activity => {\n      let activityWeekCategories = _objectSpread({}, this.state.activityWeekCategories);\n\n      let currentTotalHourCount = activityWeekCategories.totalHours;\n      let currentActivityHourCount = activityWeekCategories[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let updatedTotalHourCount = currentTotalHourCount + 1;\n      activityWeekCategories.totalHours = updatedTotalHourCount;\n      let updatedActivityHourCount = currentActivityHourCount + 1;\n      activityWeekCategories[activity] = updatedActivityHourCount;\n      this.setState({\n        activityWeekCategories: activityWeekCategories\n      }); //this.deductHourToActivity(activity);\n      //this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.deductHourToActivity = activity => {\n      let activityWeekCategories = _objectSpread({}, this.state.activityWeekCategories);\n\n      let currentTotalHourCount = activityWeekCategories.totalHours;\n      let currentActivityHourCount = activityWeekCategories[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let updatedTotalHourCount = currentTotalHourCount - 1;\n      activityWeekCategories.totalHours = updatedTotalHourCount;\n      let updatedActivityHourCount = currentActivityHourCount - 1;\n      activityWeekCategories[activity] = updatedActivityHourCount;\n      this.setState({\n        activityWeekCategories: activityWeekCategories\n      });\n    };\n\n    this.pickDayHandler = event => {\n      let pickedDay = event.target.value;\n      let dataRequestMessage = {\n        typeOfData: 'obj',\n        handlerChoice: '2',\n        dataLocation: '',\n        infoType: 'pickedDay',\n        info: pickedDay\n      };\n      this.context.dataRequestHandler(event, dataRequestMessage);\n      let contentViewObject = {\n        target: {\n          value: '12'\n        }\n      };\n      this.context.contentViewHandler(contentViewObject); // this.setState(\n      //   {\n      //     pickedDay: pickedDay\n      //   },\n      //   () => this.context.contentViewHandler(contentViewObject)\n      // );\n    };\n\n    this.initialState = () => {\n      let dataBudget = this.context.dataBudget.dailyBudget;\n      let activityWeekCategories = this.context.dataBudget.activityWeekCategories;\n      this.setState({\n        dataBudget: dataBudget,\n        activityWeekCategories: activityWeekCategories,\n        word: 'chicken'\n      });\n    };\n\n    this.requestDataHandler = () => {\n      let event = {\n        target: {\n          value: 'blah'\n        }\n      };\n      let dataRequestMessage = {\n        typeOfData: 'obj',\n        handlerChoice: '1',\n        dataLocation: '',\n        infoType: '',\n        info: ''\n      };\n      alert(`dataRequestMessage.handlerchoice ${dataRequestMessage.handlerchoice}`);\n      this.context.dataRequestHandler(event, dataRequestMessage);\n    };\n\n    this.thisWeek = new ObjectiveData();\n    this.thisWeek.timeBudgetDay(); // this.state = {\n    //   activityWeekCategories: '',\n    //   dailyBudget: '',\n    //   pickedDay: '',\n    //   word: 'chicken3'\n    // };\n\n    this.state = {\n      word: 'chicken4',\n      activityWeekCategories: this.thisWeek.activityWeekCategories,\n      dailyBudget: this.thisWeek.dailyBudget,\n      pickedDay: ''\n    };\n\n    this.initialDataRequest = () => {\n      let dataRequestMessage = {\n        typeOfData: 'obj',\n        handlerChoice: '1',\n        dataLocation: '',\n        infoType: '',\n        info: ''\n      };\n      this.context.dataRequestHandler(dataRequestMessage);\n    };\n  }\n\n  render() {\n    if (!this.context.dataBudget) {\n      alert('what the fuck'); //this.requestDataHandler();\n    } //alert('run it');\n    //when first starting -> fetch data, store it as local data\n    //once all editing done, data gets sent back to objData\n    //Display Week Data\n\n\n    let displayDailyTimeBudget = null;\n\n    if (this.context.dataBudget && this.context.dataBudget.dataBudget) {\n      let dataBudget = _objectSpread({}, this.context.dataBudget);\n\n      let dataBudget2 = dataBudget.dataBudget;\n\n      let dataBudget3 = _objectSpread({}, dataBudget2);\n\n      let dailyBudgetObj = dataBudget3.dailyBudget;\n      let activityDayCategoriesObj = dataBudget3.activityDayCategories;\n\n      let dailyBudget = _objectSpread({}, dailyBudgetObj);\n\n      let activityDayCategories = _objectSpread({}, activityDayCategoriesObj);\n\n      console.dir(`inside WeelyTimeBudget activityDayCategories: ${activityDayCategories} `); // alert(activityDayCategories.sleep);\n      // let dataBudgetObj = { ...this.context.dataBudget };\n      // //this.initialState();\n      // // alert(\n      // //   `this.context.dataBudget.dataBudget: ${this.context.dataBudget.dataBudget}`\n      // // );\n      // let dailyBudget = this.context.dataBudget.dailyBudget;\n      // let activityWeekCategories = {\n      //   ...dataBudgetObj.activityWeekCategories\n      // };\n      // alert(Object.keys(activityWeekCategories));\n\n      let disabledDeductBtnWeek = _objectSpread({}, activityDayCategories);\n\n      for (let key in disabledDeductBtnWeek) {\n        disabledDeductBtnWeek[key] = disabledDeductBtnWeek[key] <= 0;\n      }\n\n      displayDailyTimeBudget = Object.keys(activityDayCategories).map(eachCategory => {\n        let moreButtonDisabled = null;\n        let lessButtonDisabled = null;\n\n        if (activityDayCategories.totalHours >= 168) {\n          moreButtonDisabled = true;\n        }\n\n        if (activityDayCategories[eachCategory] <= 0) {\n          lessButtonDisabled = true;\n        }\n\n        let disabled24hr = null;\n        let pickDayLess0hours = null;\n\n        if (this.context.dataBudget.pickedDay) {\n          let pickedDay = this.context.dataBudget.pickedDay;\n\n          if (dailyBudget[pickedDay].totalHours >= 24) {\n            disabled24hr = true;\n          }\n\n          if (dailyBudget[pickedDay][eachCategory] <= 0) {\n            pickDayLess0hours = true;\n          }\n        }\n\n        return (// <PickedDayBudget\n          //   key={eachCategory.concat(eachCategory)}\n          //   activity={eachCategory}\n          //   hours={this.state.activityWeekCategories[eachCategory]}\n          //   reduce={() => this.deductHourToActivity(eachCategory)}\n          //   add={() => this.addHourToActivity(eachCategory)}\n          //   reducePickedDay={() =>\n          //     this.deductHourToActivityPickedDay(eachCategory)\n          //   }\n          //   addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n          //   pickedDay={this.state.pickedDay}\n          //   dailyBudget={this.state.dailyBudget}\n          //   //disabled24hr={disabled24hr}\n          //   moreButtonDisabled={moreButtonDisabled}\n          //   lessButtonDisabled={lessButtonDisabled}\n          //   disabled24hr={disabled24hr}\n          //   pickDayLess0hours={pickDayLess0hours}\n          // />\n          React.createElement(\"div\", {\n            className: daily.DailyTimeBudget,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: daily.DailyTimeBudget,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: daily.Activity,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, eachCategory.toUpperCase()), React.createElement(\"div\", {\n            className: daily.ActivityHours,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267\n            },\n            __self: this\n          }, activityDayCategories[eachCategory]), React.createElement(\"button\", {\n            className: daily.Less,\n            onClick: () => this.deductHourToActivity(eachCategory),\n            disabled: lessButtonDisabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, \"Less\"), React.createElement(\"button\", {\n            className: daily.More,\n            onClick: () => this.addHourToActivity(eachCategory) // disabled={this.props.moreButtonDisabled}\n            ,\n            disabled: moreButtonDisabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279\n            },\n            __self: this\n          }, \"More\")))\n        );\n      });\n    } // //if display displayPickedDay if its true\n    // let displayPickedDay = null;\n    // if (this.context.dailyBudget.pickedDay) {\n    //   //let pickedDayBudget = { ...this.state.dailyBudget };\n    //   let foundDayBudget = dailyBudget[pickedDay]\n    //   displayPickedDay = Object.keys(this.state.dailyBudget[pickedDay]).map(\n    //     eachCategory => {\n    //       let disabled24hr = null;\n    //       let pickDayLess0hours = null;\n    //       if (dailyBudget[pickedDay].totalHours >= 24) {\n    //         disabled24hr = true;\n    //       }\n    //       if (dailyBudget[pickedDay][eachCategory] <= 0) {\n    //         pickDayLess0hours = true;\n    //       }\n    //       return (\n    //         <PickedDayBudget\n    //           key={eachCategory.concat(eachCategory)}\n    //           activity={eachCategory}\n    //           hours={foundDayBudget[eachCategory]}\n    //           reducePickedDay={() =>\n    //             this.deductHourToActivityPickedDay(eachCategory)\n    //           }\n    //           addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n    //           pickedDay={this.state.pickedDay}\n    //           dailyBudget={this.state.dailyBudget}\n    //           disabled24hr={disabled24hr}\n    //           pickDayLess0hours={pickDayLess0hours}\n    //         />\n    //       );\n    //     }\n    //   );\n    // }\n\n\n    let PickDaysOfWeekTimeBudget = React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"dropdownMenu2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Monday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Monday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Tuesday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Tuesday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Wednesday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Wednesday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Thursday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Thursday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Friday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Friday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Saturday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"Saturday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Sunday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Sunday\"));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Inside WeeklyTimeBudget\"), React.createElement(\"label\", {\n      className: \"btn  dropdown m-2 active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success dropdown-toggle\",\n      type: \"button\",\n      id: \"dropdownMenu2\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Pick Day to edit Time Budget\"), PickDaysOfWeekTimeBudget), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"Time Budget for Week\"), displayDailyTimeBudget));\n  }\n\n}\n\nWeeklyTimeBudget.contextType = StoreDataContext;\nexport default WeeklyTimeBudget; //24 hours a day //broken down into .5 hour\n//\n// class WeeklyTimeBudget extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.thisWeek = new ObjectiveData();\n//     this.thisWeek.timeBudgetDay();\n//     this.state = {\n//       activityWeekCategories: '',\n//       dailyBudget: '',\n//       pickedDay: ''\n//     };\n//     // this.state = {\n//     //   activityWeekCategories: this.thisWeek.activityWeekCategories,\n//     //   dailyBudget: this.thisWeek.dailyBudget,\n//     //   pickedDay: ''\n//     // };\n//     this.initialDataRequest = () => {\n//       let dataRequestMessage = {\n//         typeOfData: 'obj',\n//         handlerChoice: '1',\n//         dataLocation: '',\n//         infoType: '',\n//         info: ''\n//       };\n//       this.context.dataRequestHandler(dataRequestMessage);\n//     };\n//   }\n//   requestDataHandler = () => {\n//     //let contentChoice = event.target.value; //'' number used in displayContent component\n//     let newContentChoice = '';\n//     let typeOfData = ''; //string: syllabus,tasks,events,objectives\n//     let handlerChoice = ''; //string: '#' handler inside of database\n//     let dataLocation = ''; // string: where obj found inside database\n//     let infoType = ''; //string: index/id/\n//     let info = ''; //string: actual info\n//     //let today = calendarObj();\n//     typeOfData = 'tasks';\n//     handlerChoice = '1';\n//     dataLocation = '';\n//     infoType = null;\n//     info = null;\n//     newContentChoice = '1';\n//     let dataRequestMessage = {\n//       typeOfData: 'obj',\n//       handlerChoice: '1',\n//       dataLocation: dataLocation,\n//       infoType: infoType,\n//       info: info\n//     };\n//     // alert(newContentChoice);\n//     let contentViewObject = {\n//       target: {\n//         value: newContentChoice\n//       }\n//     };\n//     this.context.dataRequestHandler(dataRequestMessage);\n//     this.context.contentViewHandler(contentViewObject);\n//   };\n//   addHourToActivityPickedDay = activity => {\n//     let pickedDay = this.state.pickedDay;\n//     let allDaysTimeBudget = this.state.dailyBudget;\n//     let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n//     let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n//     let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount + 1;\n//     let pickedDayUpdatedActivityHourCount =\n//       pickedDayCurrentActivityHourCount + 1;\n//     pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n//     pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n//     allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n//     this.setState({ dailyBudget: allDaysTimeBudget });\n//     this.addHourToActivity(activity);\n//     //this.updatePurchaseState(updatedIngredients);\n//   };\n//   deductHourToActivityPickedDay = activity => {\n//     let pickedDay = this.state.pickedDay;\n//     let allDaysTimeBudget = this.state.dailyBudget;\n//     let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n//     let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n//     let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount - 1;\n//     let pickedDayUpdatedActivityHourCount =\n//       pickedDayCurrentActivityHourCount - 1;\n//     pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n//     pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n//     allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n//     this.setState({ dailyBudget: allDaysTimeBudget });\n//     this.deductHourToActivity(activity);\n//   };\n//   addHourToActivity = activity => {\n//     let activityWeekCategories = { ...this.state.activityWeekCategories };\n//     let currentTotalHourCount = activityWeekCategories.totalHours;\n//     let currentActivityHourCount = activityWeekCategories[activity];\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let updatedTotalHourCount = currentTotalHourCount + 1;\n//     activityWeekCategories.totalHours = updatedTotalHourCount;\n//     let updatedActivityHourCount = currentActivityHourCount + 1;\n//     activityWeekCategories[activity] = updatedActivityHourCount;\n//     this.setState({ activityWeekCategories: activityWeekCategories });\n//     //this.deductHourToActivity(activity);\n//     //this.updatePurchaseState(updatedIngredients);\n//   };\n//   deductHourToActivity = activity => {\n//     let activityWeekCategories = { ...this.state.activityWeekCategories };\n//     let currentTotalHourCount = activityWeekCategories.totalHours;\n//     let currentActivityHourCount = activityWeekCategories[activity];\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let updatedTotalHourCount = currentTotalHourCount - 1;\n//     activityWeekCategories.totalHours = updatedTotalHourCount;\n//     let updatedActivityHourCount = currentActivityHourCount - 1;\n//     activityWeekCategories[activity] = updatedActivityHourCount;\n//     this.setState({ activityWeekCategories: activityWeekCategories });\n//   };\n//   pickDayHandler = event => {\n//     let pickedDay = event.target.value;\n//     //alert(pickedDay);\n//     this.setState({\n//       pickedDay: pickedDay\n//     });\n//     let contentViewObject = {\n//       target: {\n//         value: '12'\n//       }\n//     };\n//     this.context.contentViewHandler(contentViewObject);\n//   };\n//   static contextType = StoreDataContext;\n//   initialState = () => {\n//     let dataBudget = this.context.dataBudget.dailyBudget;\n//     let activityWeekCategories = this.context.dataBudget.activityWeekCategories;\n//     this.setState({\n//       dataBudget: dataBudget,\n//       activityWeekCategories: activityWeekCategories\n//     });\n//   };\n//   render() {\n//     //when first starting -> fetch data, store it as local data\n//     //once all editing done, data gets sent back to objData\n//     if (this.context.dataBudget) {\n//       this.initialState();\n//     }\n//     let disabledDeductBtnWeek = { ...this.state.activityWeekCategories };\n//     for (let key in disabledDeductBtnWeek) {\n//       disabledDeductBtnWeek[key] = disabledDeductBtnWeek[key] <= 0;\n//     }\n//     let displayDailyTimeBudget = null;\n//     let pickedDay = this.state.pickedDay;\n//     displayDailyTimeBudget = Object.keys(this.state.activityWeekCategories).map(\n//       eachCategory => {\n//         let moreButtonDisabled = null;\n//         let lessButtonDisabled = null;\n//         if (this.state.activityWeekCategories.totalHours >= 168) {\n//           moreButtonDisabled = true;\n//         }\n//         if (this.state.activityWeekCategories[eachCategory] <= 0) {\n//           lessButtonDisabled = true;\n//         }\n//         let disabled24hr = null;\n//         let pickDayLess0hours = null;\n//         if (pickedDay) {\n//           if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n//             disabled24hr = true;\n//           }\n//           if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n//             pickDayLess0hours = true;\n//           }\n//         }\n//         return (\n//           <PickedDayBudget\n//             key={eachCategory.concat(eachCategory)}\n//             activity={eachCategory}\n//             hours={this.state.activityWeekCategories[eachCategory]}\n//             reduce={() => this.deductHourToActivity(eachCategory)}\n//             add={() => this.addHourToActivity(eachCategory)}\n//             reducePickedDay={() =>\n//               this.deductHourToActivityPickedDay(eachCategory)\n//             }\n//             addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n//             pickedDay={this.state.pickedDay}\n//             dailyBudget={this.state.dailyBudget}\n//             //disabled24hr={disabled24hr}\n//             moreButtonDisabled={moreButtonDisabled}\n//             lessButtonDisabled={lessButtonDisabled}\n//             disabled24hr={disabled24hr}\n//             pickDayLess0hours={pickDayLess0hours}\n//           />\n//         );\n//       }\n//     );\n//     //if display displayPickedDay if its true\n//     let displayPickedDay = null;\n//     if (this.state.pickedDay) {\n//       let pickedDayBudget = { ...this.state.dailyBudget };\n//       let foundDayBudget = { ...this.state.dailyBudget[pickedDay] };\n//       displayPickedDay = Object.keys(this.state.dailyBudget[pickedDay]).map(\n//         eachCategory => {\n//           let disabled24hr = null;\n//           let pickDayLess0hours = null;\n//           if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n//             disabled24hr = true;\n//           }\n//           if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n//             pickDayLess0hours = true;\n//           }\n//           return (\n//             <PickedDayBudget\n//               key={eachCategory.concat(eachCategory)}\n//               activity={eachCategory}\n//               hours={foundDayBudget[eachCategory]}\n//               reducePickedDay={() =>\n//                 this.deductHourToActivityPickedDay(eachCategory)\n//               }\n//               addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n//               pickedDay={this.state.pickedDay}\n//               dailyBudget={this.state.dailyBudget}\n//               disabled24hr={disabled24hr}\n//               pickDayLess0hours={pickDayLess0hours}\n//             />\n//           );\n//         }\n//       );\n//     }\n//     let PickDaysOfWeekTimeBudget = (\n//       <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Monday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Monday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Tuesday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Tuesday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Wednesday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Wednesday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Thursday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Thursday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Friday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Friday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Saturday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Saturday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Sunday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Sunday\n//         </button>\n//       </div>\n//     );\n//     return (\n//       <React.Fragment>\n//         <label className=\"btn  dropdown m-2 active\">\n//           <button\n//             className=\"btn btn-success dropdown-toggle\"\n//             type=\"button\"\n//             id=\"dropdownMenu2\"\n//             data-toggle=\"dropdown\"\n//             aria-haspopup=\"true\"\n//             aria-expanded=\"false\"\n//           >\n//             Pick Day to edit Time Budget\n//           </button>\n//           {PickDaysOfWeekTimeBudget}\n//         </label>\n//         <div>\n//           <h3 className=\"\">Time Budget for Week</h3>\n//           {displayDailyTimeBudget}\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n// export default WeeklyTimeBudget;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Objectives/TimeBudget/WeeklyTimeBudget.js"],"names":["React","Component","classes","StoreDataContext","ObjectiveData","PickedDayBudget","daily","WeeklyTimeBudget","constructor","props","state","word","addHourToActivityPickedDay","activity","pickedDay","allDaysTimeBudget","dailyBudget","pickedDayDailyBudget","pickedDayCurrentTotalHourCount","totalHours","pickedDayCurrentActivityHourCount","pickedDayUpdatedTotalHourCount","pickedDayUpdatedActivityHourCount","setState","addHourToActivity","deductHourToActivityPickedDay","deductHourToActivity","activityWeekCategories","currentTotalHourCount","currentActivityHourCount","updatedTotalHourCount","updatedActivityHourCount","pickDayHandler","event","target","value","dataRequestMessage","typeOfData","handlerChoice","dataLocation","infoType","info","context","dataRequestHandler","contentViewObject","contentViewHandler","initialState","dataBudget","requestDataHandler","alert","handlerchoice","thisWeek","timeBudgetDay","initialDataRequest","render","displayDailyTimeBudget","dataBudget2","dataBudget3","dailyBudgetObj","activityDayCategoriesObj","activityDayCategories","console","dir","disabledDeductBtnWeek","key","Object","keys","map","eachCategory","moreButtonDisabled","lessButtonDisabled","disabled24hr","pickDayLess0hours","DailyTimeBudget","Activity","toUpperCase","ActivityHours","Less","More","PickDaysOfWeekTimeBudget","contextType"],"mappings":"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":["import React, { Component } from 'react';\nimport classes from './WeeklyTimeBudget.module.css';\nimport StoreDataContext from '../../../../context/StoreDataContext';\n\nimport ObjectiveData from '../../../../containers/Store/ObjectiveData';\nimport PickedDayBudget from './PickedDayBudget/PickedDayBudget';\nimport daily from './PickedDayBudget/PickedDayBudget.module.css';\n//import classes2 from '../DailyTimeBudget/DailyTimeBudget.module.css';\n\n//each day have a predetermined amt of time for each category\n//then each day you can balance it according to 24 hours\n//after balancing for each day, you have to go back to balance the weekly total\n\nclass WeeklyTimeBudget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.thisWeek = new ObjectiveData();\n    this.thisWeek.timeBudgetDay();\n    // this.state = {\n    //   activityWeekCategories: '',\n    //   dailyBudget: '',\n    //   pickedDay: '',\n    //   word: 'chicken3'\n    // };\n\n    this.state = {\n      word: 'chicken4',\n      activityWeekCategories: this.thisWeek.activityWeekCategories,\n      dailyBudget: this.thisWeek.dailyBudget,\n      pickedDay: ''\n    };\n\n    this.initialDataRequest = () => {\n      let dataRequestMessage = {\n        typeOfData: 'obj',\n        handlerChoice: '1',\n        dataLocation: '',\n        infoType: '',\n        info: ''\n      };\n      this.context.dataRequestHandler(dataRequestMessage);\n    };\n  }\n  state = {\n    word: 'chicken5'\n  };\n  addHourToActivityPickedDay = activity => {\n    let pickedDay = this.state.pickedDay;\n    let allDaysTimeBudget = this.state.dailyBudget;\n    let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n\n    let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n    let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount + 1;\n\n    let pickedDayUpdatedActivityHourCount =\n      pickedDayCurrentActivityHourCount + 1;\n    pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n    pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n    allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n\n    this.setState({ dailyBudget: allDaysTimeBudget });\n    this.addHourToActivity(activity);\n    //this.updatePurchaseState(updatedIngredients);\n  };\n\n  deductHourToActivityPickedDay = activity => {\n    let pickedDay = this.state.pickedDay;\n    let allDaysTimeBudget = this.state.dailyBudget;\n    let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n\n    let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n    let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount - 1;\n\n    let pickedDayUpdatedActivityHourCount =\n      pickedDayCurrentActivityHourCount - 1;\n    pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n    pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n    allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n\n    this.setState({ dailyBudget: allDaysTimeBudget });\n    this.deductHourToActivity(activity);\n  };\n\n  addHourToActivity = activity => {\n    let activityWeekCategories = { ...this.state.activityWeekCategories };\n    let currentTotalHourCount = activityWeekCategories.totalHours;\n    let currentActivityHourCount = activityWeekCategories[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let updatedTotalHourCount = currentTotalHourCount + 1;\n    activityWeekCategories.totalHours = updatedTotalHourCount;\n    let updatedActivityHourCount = currentActivityHourCount + 1;\n    activityWeekCategories[activity] = updatedActivityHourCount;\n\n    this.setState({ activityWeekCategories: activityWeekCategories });\n    //this.deductHourToActivity(activity);\n    //this.updatePurchaseState(updatedIngredients);\n  };\n  deductHourToActivity = activity => {\n    let activityWeekCategories = { ...this.state.activityWeekCategories };\n    let currentTotalHourCount = activityWeekCategories.totalHours;\n    let currentActivityHourCount = activityWeekCategories[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let updatedTotalHourCount = currentTotalHourCount - 1;\n    activityWeekCategories.totalHours = updatedTotalHourCount;\n    let updatedActivityHourCount = currentActivityHourCount - 1;\n    activityWeekCategories[activity] = updatedActivityHourCount;\n\n    this.setState({ activityWeekCategories: activityWeekCategories });\n  };\n\n  pickDayHandler = event => {\n    let pickedDay = event.target.value;\n\n    let dataRequestMessage = {\n      typeOfData: 'obj',\n      handlerChoice: '2',\n      dataLocation: '',\n      infoType: 'pickedDay',\n      info: pickedDay\n    };\n    this.context.dataRequestHandler(event, dataRequestMessage);\n\n    let contentViewObject = {\n      target: {\n        value: '12'\n      }\n    };\n    this.context.contentViewHandler(contentViewObject);\n\n    // this.setState(\n    //   {\n    //     pickedDay: pickedDay\n    //   },\n    //   () => this.context.contentViewHandler(contentViewObject)\n    // );\n  };\n\n  initialState = () => {\n    let dataBudget = this.context.dataBudget.dailyBudget;\n    let activityWeekCategories = this.context.dataBudget.activityWeekCategories;\n\n    this.setState({\n      dataBudget: dataBudget,\n      activityWeekCategories: activityWeekCategories,\n      word: 'chicken'\n    });\n  };\n\n  requestDataHandler = () => {\n    let event = {\n      target: {\n        value: 'blah'\n      }\n    };\n    let dataRequestMessage = {\n      typeOfData: 'obj',\n      handlerChoice: '1',\n      dataLocation: '',\n      infoType: '',\n      info: ''\n    };\n    alert(\n      `dataRequestMessage.handlerchoice ${dataRequestMessage.handlerchoice}`\n    );\n    this.context.dataRequestHandler(event, dataRequestMessage);\n  };\n\n  static contextType = StoreDataContext;\n  render() {\n    if (!this.context.dataBudget) {\n      alert('what the fuck');\n      //this.requestDataHandler();\n    }\n    //alert('run it');\n    //when first starting -> fetch data, store it as local data\n    //once all editing done, data gets sent back to objData\n\n    //Display Week Data\n    let displayDailyTimeBudget = null;\n\n    if (this.context.dataBudget && this.context.dataBudget.dataBudget) {\n      let dataBudget = { ...this.context.dataBudget };\n      let dataBudget2 = dataBudget.dataBudget;\n      let dataBudget3 = { ...dataBudget2 };\n      let dailyBudgetObj = dataBudget3.dailyBudget;\n      let activityDayCategoriesObj = dataBudget3.activityDayCategories;\n      let dailyBudget = { ...dailyBudgetObj };\n      let activityDayCategories = { ...activityDayCategoriesObj };\n      console.dir(\n        `inside WeelyTimeBudget activityDayCategories: ${activityDayCategories} `\n      );\n      // alert(activityDayCategories.sleep);\n      // let dataBudgetObj = { ...this.context.dataBudget };\n      // //this.initialState();\n      // // alert(\n      // //   `this.context.dataBudget.dataBudget: ${this.context.dataBudget.dataBudget}`\n      // // );\n\n      // let dailyBudget = this.context.dataBudget.dailyBudget;\n      // let activityWeekCategories = {\n      //   ...dataBudgetObj.activityWeekCategories\n      // };\n      // alert(Object.keys(activityWeekCategories));\n      let disabledDeductBtnWeek = { ...activityDayCategories };\n\n      for (let key in disabledDeductBtnWeek) {\n        disabledDeductBtnWeek[key] = disabledDeductBtnWeek[key] <= 0;\n      }\n\n      displayDailyTimeBudget = Object.keys(activityDayCategories).map(\n        eachCategory => {\n          let moreButtonDisabled = null;\n          let lessButtonDisabled = null;\n\n          if (activityDayCategories.totalHours >= 168) {\n            moreButtonDisabled = true;\n          }\n          if (activityDayCategories[eachCategory] <= 0) {\n            lessButtonDisabled = true;\n          }\n          let disabled24hr = null;\n          let pickDayLess0hours = null;\n\n          if (this.context.dataBudget.pickedDay) {\n            let pickedDay = this.context.dataBudget.pickedDay;\n            if (dailyBudget[pickedDay].totalHours >= 24) {\n              disabled24hr = true;\n            }\n            if (dailyBudget[pickedDay][eachCategory] <= 0) {\n              pickDayLess0hours = true;\n            }\n          }\n          return (\n            // <PickedDayBudget\n            //   key={eachCategory.concat(eachCategory)}\n            //   activity={eachCategory}\n            //   hours={this.state.activityWeekCategories[eachCategory]}\n            //   reduce={() => this.deductHourToActivity(eachCategory)}\n            //   add={() => this.addHourToActivity(eachCategory)}\n            //   reducePickedDay={() =>\n            //     this.deductHourToActivityPickedDay(eachCategory)\n            //   }\n            //   addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n            //   pickedDay={this.state.pickedDay}\n            //   dailyBudget={this.state.dailyBudget}\n            //   //disabled24hr={disabled24hr}\n            //   moreButtonDisabled={moreButtonDisabled}\n            //   lessButtonDisabled={lessButtonDisabled}\n            //   disabled24hr={disabled24hr}\n            //   pickDayLess0hours={pickDayLess0hours}\n            // />\n\n            <div className={daily.DailyTimeBudget}>\n              <div className={daily.DailyTimeBudget}>\n                <div className={daily.Activity}>\n                  {eachCategory.toUpperCase()}\n                </div>\n                <div className={daily.ActivityHours}>\n                  {activityDayCategories[eachCategory]}\n                </div>\n\n                <button\n                  className={daily.Less}\n                  onClick={() => this.deductHourToActivity(eachCategory)}\n                  disabled={lessButtonDisabled}\n                >\n                  Less\n                </button>\n\n                <button\n                  className={daily.More}\n                  onClick={() => this.addHourToActivity(eachCategory)}\n                  // disabled={this.props.moreButtonDisabled}\n\n                  disabled={moreButtonDisabled}\n                >\n                  More\n                </button>\n              </div>\n              {/* <div>{displayPickedDay}</div> */}\n            </div>\n          );\n        }\n      );\n    }\n\n    // //if display displayPickedDay if its true\n    // let displayPickedDay = null;\n\n    // if (this.context.dailyBudget.pickedDay) {\n    //   //let pickedDayBudget = { ...this.state.dailyBudget };\n    //   let foundDayBudget = dailyBudget[pickedDay]\n\n    //   displayPickedDay = Object.keys(this.state.dailyBudget[pickedDay]).map(\n    //     eachCategory => {\n    //       let disabled24hr = null;\n    //       let pickDayLess0hours = null;\n    //       if (dailyBudget[pickedDay].totalHours >= 24) {\n    //         disabled24hr = true;\n    //       }\n    //       if (dailyBudget[pickedDay][eachCategory] <= 0) {\n    //         pickDayLess0hours = true;\n    //       }\n\n    //       return (\n    //         <PickedDayBudget\n    //           key={eachCategory.concat(eachCategory)}\n    //           activity={eachCategory}\n    //           hours={foundDayBudget[eachCategory]}\n    //           reducePickedDay={() =>\n    //             this.deductHourToActivityPickedDay(eachCategory)\n    //           }\n    //           addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n    //           pickedDay={this.state.pickedDay}\n    //           dailyBudget={this.state.dailyBudget}\n    //           disabled24hr={disabled24hr}\n    //           pickDayLess0hours={pickDayLess0hours}\n    //         />\n    //       );\n    //     }\n    //   );\n    // }\n    let PickDaysOfWeekTimeBudget = (\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Monday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Monday\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Tuesday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Tuesday\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Wednesday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Wednesday\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Thursday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Thursday\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Friday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Friday\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Saturday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Saturday\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Sunday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Sunday\n        </button>\n      </div>\n    );\n    return (\n      <React.Fragment>\n        <div>Inside WeeklyTimeBudget</div>\n        <label className=\"btn  dropdown m-2 active\">\n          <button\n            className=\"btn btn-success dropdown-toggle\"\n            type=\"button\"\n            id=\"dropdownMenu2\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            Pick Day to edit Time Budget\n          </button>\n\n          {PickDaysOfWeekTimeBudget}\n        </label>\n\n        <div>\n          <h3 className=\"\">Time Budget for Week</h3>\n          {displayDailyTimeBudget}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WeeklyTimeBudget;\n\n//24 hours a day //broken down into .5 hour\n//\n// class WeeklyTimeBudget extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.thisWeek = new ObjectiveData();\n//     this.thisWeek.timeBudgetDay();\n//     this.state = {\n//       activityWeekCategories: '',\n//       dailyBudget: '',\n//       pickedDay: ''\n//     };\n\n//     // this.state = {\n//     //   activityWeekCategories: this.thisWeek.activityWeekCategories,\n//     //   dailyBudget: this.thisWeek.dailyBudget,\n//     //   pickedDay: ''\n//     // };\n//     this.initialDataRequest = () => {\n//       let dataRequestMessage = {\n//         typeOfData: 'obj',\n//         handlerChoice: '1',\n//         dataLocation: '',\n//         infoType: '',\n//         info: ''\n//       };\n//       this.context.dataRequestHandler(dataRequestMessage);\n//     };\n//   }\n\n//   requestDataHandler = () => {\n//     //let contentChoice = event.target.value; //'' number used in displayContent component\n//     let newContentChoice = '';\n//     let typeOfData = ''; //string: syllabus,tasks,events,objectives\n//     let handlerChoice = ''; //string: '#' handler inside of database\n//     let dataLocation = ''; // string: where obj found inside database\n//     let infoType = ''; //string: index/id/\n//     let info = ''; //string: actual info\n//     //let today = calendarObj();\n\n//     typeOfData = 'tasks';\n//     handlerChoice = '1';\n//     dataLocation = '';\n//     infoType = null;\n//     info = null;\n//     newContentChoice = '1';\n\n//     let dataRequestMessage = {\n//       typeOfData: 'obj',\n//       handlerChoice: '1',\n//       dataLocation: dataLocation,\n//       infoType: infoType,\n//       info: info\n//     };\n//     // alert(newContentChoice);\n//     let contentViewObject = {\n//       target: {\n//         value: newContentChoice\n//       }\n//     };\n\n//     this.context.dataRequestHandler(dataRequestMessage);\n\n//     this.context.contentViewHandler(contentViewObject);\n//   };\n\n//   addHourToActivityPickedDay = activity => {\n//     let pickedDay = this.state.pickedDay;\n//     let allDaysTimeBudget = this.state.dailyBudget;\n//     let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n\n//     let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n//     let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount + 1;\n\n//     let pickedDayUpdatedActivityHourCount =\n//       pickedDayCurrentActivityHourCount + 1;\n//     pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n//     pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n//     allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n\n//     this.setState({ dailyBudget: allDaysTimeBudget });\n//     this.addHourToActivity(activity);\n//     //this.updatePurchaseState(updatedIngredients);\n//   };\n\n//   deductHourToActivityPickedDay = activity => {\n//     let pickedDay = this.state.pickedDay;\n//     let allDaysTimeBudget = this.state.dailyBudget;\n//     let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n\n//     let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n//     let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount - 1;\n\n//     let pickedDayUpdatedActivityHourCount =\n//       pickedDayCurrentActivityHourCount - 1;\n//     pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n//     pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n//     allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n\n//     this.setState({ dailyBudget: allDaysTimeBudget });\n//     this.deductHourToActivity(activity);\n//   };\n\n//   addHourToActivity = activity => {\n//     let activityWeekCategories = { ...this.state.activityWeekCategories };\n//     let currentTotalHourCount = activityWeekCategories.totalHours;\n//     let currentActivityHourCount = activityWeekCategories[activity];\n\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let updatedTotalHourCount = currentTotalHourCount + 1;\n//     activityWeekCategories.totalHours = updatedTotalHourCount;\n//     let updatedActivityHourCount = currentActivityHourCount + 1;\n//     activityWeekCategories[activity] = updatedActivityHourCount;\n\n//     this.setState({ activityWeekCategories: activityWeekCategories });\n//     //this.deductHourToActivity(activity);\n//     //this.updatePurchaseState(updatedIngredients);\n//   };\n//   deductHourToActivity = activity => {\n//     let activityWeekCategories = { ...this.state.activityWeekCategories };\n//     let currentTotalHourCount = activityWeekCategories.totalHours;\n//     let currentActivityHourCount = activityWeekCategories[activity];\n\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let updatedTotalHourCount = currentTotalHourCount - 1;\n//     activityWeekCategories.totalHours = updatedTotalHourCount;\n//     let updatedActivityHourCount = currentActivityHourCount - 1;\n//     activityWeekCategories[activity] = updatedActivityHourCount;\n\n//     this.setState({ activityWeekCategories: activityWeekCategories });\n//   };\n\n//   pickDayHandler = event => {\n//     let pickedDay = event.target.value;\n//     //alert(pickedDay);\n//     this.setState({\n//       pickedDay: pickedDay\n//     });\n//     let contentViewObject = {\n//       target: {\n//         value: '12'\n//       }\n//     };\n\n//     this.context.contentViewHandler(contentViewObject);\n//   };\n//   static contextType = StoreDataContext;\n\n//   initialState = () => {\n//     let dataBudget = this.context.dataBudget.dailyBudget;\n//     let activityWeekCategories = this.context.dataBudget.activityWeekCategories;\n\n//     this.setState({\n//       dataBudget: dataBudget,\n//       activityWeekCategories: activityWeekCategories\n//     });\n//   };\n//   render() {\n//     //when first starting -> fetch data, store it as local data\n//     //once all editing done, data gets sent back to objData\n\n//     if (this.context.dataBudget) {\n//       this.initialState();\n//     }\n//     let disabledDeductBtnWeek = { ...this.state.activityWeekCategories };\n\n//     for (let key in disabledDeductBtnWeek) {\n//       disabledDeductBtnWeek[key] = disabledDeductBtnWeek[key] <= 0;\n//     }\n\n//     let displayDailyTimeBudget = null;\n//     let pickedDay = this.state.pickedDay;\n\n//     displayDailyTimeBudget = Object.keys(this.state.activityWeekCategories).map(\n//       eachCategory => {\n//         let moreButtonDisabled = null;\n//         let lessButtonDisabled = null;\n\n//         if (this.state.activityWeekCategories.totalHours >= 168) {\n//           moreButtonDisabled = true;\n//         }\n//         if (this.state.activityWeekCategories[eachCategory] <= 0) {\n//           lessButtonDisabled = true;\n//         }\n//         let disabled24hr = null;\n//         let pickDayLess0hours = null;\n//         if (pickedDay) {\n//           if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n//             disabled24hr = true;\n//           }\n//           if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n//             pickDayLess0hours = true;\n//           }\n//         }\n//         return (\n//           <PickedDayBudget\n//             key={eachCategory.concat(eachCategory)}\n//             activity={eachCategory}\n//             hours={this.state.activityWeekCategories[eachCategory]}\n//             reduce={() => this.deductHourToActivity(eachCategory)}\n//             add={() => this.addHourToActivity(eachCategory)}\n//             reducePickedDay={() =>\n//               this.deductHourToActivityPickedDay(eachCategory)\n//             }\n//             addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n//             pickedDay={this.state.pickedDay}\n//             dailyBudget={this.state.dailyBudget}\n//             //disabled24hr={disabled24hr}\n//             moreButtonDisabled={moreButtonDisabled}\n//             lessButtonDisabled={lessButtonDisabled}\n//             disabled24hr={disabled24hr}\n//             pickDayLess0hours={pickDayLess0hours}\n//           />\n//         );\n//       }\n//     );\n\n//     //if display displayPickedDay if its true\n//     let displayPickedDay = null;\n\n//     if (this.state.pickedDay) {\n//       let pickedDayBudget = { ...this.state.dailyBudget };\n//       let foundDayBudget = { ...this.state.dailyBudget[pickedDay] };\n\n//       displayPickedDay = Object.keys(this.state.dailyBudget[pickedDay]).map(\n//         eachCategory => {\n//           let disabled24hr = null;\n//           let pickDayLess0hours = null;\n//           if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n//             disabled24hr = true;\n//           }\n//           if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n//             pickDayLess0hours = true;\n//           }\n\n//           return (\n//             <PickedDayBudget\n//               key={eachCategory.concat(eachCategory)}\n//               activity={eachCategory}\n//               hours={foundDayBudget[eachCategory]}\n//               reducePickedDay={() =>\n//                 this.deductHourToActivityPickedDay(eachCategory)\n//               }\n//               addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n//               pickedDay={this.state.pickedDay}\n//               dailyBudget={this.state.dailyBudget}\n//               disabled24hr={disabled24hr}\n//               pickDayLess0hours={pickDayLess0hours}\n//             />\n//           );\n//         }\n//       );\n//     }\n//     let PickDaysOfWeekTimeBudget = (\n//       <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Monday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Monday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Tuesday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Tuesday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Wednesday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Wednesday\n//         </button>\n\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Thursday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Thursday\n//         </button>\n\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Friday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Friday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Saturday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Saturday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Sunday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Sunday\n//         </button>\n//       </div>\n//     );\n//     return (\n//       <React.Fragment>\n//         <label className=\"btn  dropdown m-2 active\">\n//           <button\n//             className=\"btn btn-success dropdown-toggle\"\n//             type=\"button\"\n//             id=\"dropdownMenu2\"\n//             data-toggle=\"dropdown\"\n//             aria-haspopup=\"true\"\n//             aria-expanded=\"false\"\n//           >\n//             Pick Day to edit Time Budget\n//           </button>\n\n//           {PickDaysOfWeekTimeBudget}\n//         </label>\n\n//         <div>\n//           <h3 className=\"\">Time Budget for Week</h3>\n//           {displayDailyTimeBudget}\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n// export default WeeklyTimeBudget;\n"]},"metadata":{},"sourceType":"module"}
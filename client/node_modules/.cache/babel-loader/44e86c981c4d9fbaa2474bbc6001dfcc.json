{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/displayContent.js\";\nimport React, { Component, useContext } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from './Cockpit';\nimport Cockpit2 from './Cockpit2';\nimport Navbar2 from './Navbar/Navbar2';\nimport Tasks from '../ViewContent/Tasks/Tasks';\nimport TodayTasks from '../ViewContent/TodayTasks/TodayTasks';\nimport Lessons from '../ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContentOptions';\nimport NewTask from '../Creation/newTask';\nimport NewEvent from '../Creation/NewEvent';\nimport NewSyllabus from '../Creation/newSyllabus';\nimport SyllabusContext from '../../context/syllabusContext';\nimport TasksContext from '../../context/tasksContext';\nimport statusClass from '../../components/ViewContent/Tasks/Tasks.module.css';\nimport Syllabi from '../ViewContent/Syllabus/Syllabi';\n\nconst DisplayContent = props => {\n  const syllabusContext = useContext(SyllabusContext);\n  const tasksContext = useContext(TasksContext);\n  let displayContent = null;\n\n  switch (props.everything.contentChoice) {\n    case '0':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Hello Thomas.... What would you like to see?\"), React.createElement(\"img\", {\n        className: classes.logoImage,\n        src: require('../../Assets/cockpitIcon.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n      break;\n\n    case '1':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, tasksContext.tasksData.tasksData ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        everything: props.everything,\n        contentChoice: props.everything.contentChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })) : null, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '2':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(TodayTasks, {\n        everything: props.everything,\n        reRenderTodayTasks: props.everything.reRenderTodayTasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '3':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, syllabusContext.everythingSyllabus.syllabusData ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"tasks has #\", ' ', syllabusContext.everythingSyllabus.syllabusData.maxReact.length), React.createElement(Lessons, {\n        everything: props.everything,\n        lessons: syllabusContext.everythingSyllabus.syllabusData.maxReact,\n        lessonsLength: syllabusContext.everythingSyllabus.syllabusData.maxReact.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })) : null);\n      /*\n        clicked={(event, index, handlerType) =>\n                    props.deleteLessonHandler(event, index, handlerType)\n                  }\n        */\n\n      break;\n\n    case '4':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(NewTask, {\n        newestTaskHandler: props.newestTaskHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n      break;\n\n    case '5':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(NewEvent, {\n        newestEvent: props.newestEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n      break;\n    //showLeftOverLessonsFromSyllabus: for Table Header (add/delete this lesson message)\n\n    case '6':\n      if (syllabusContext.everythingSyllabus.syllabusData) {\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(NewSyllabus, {\n          newestSyllabus: props.newestSyllabus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), syllabusContext.everythingSyllabus.syllabusData.showLeftOverLessonsFromSyllabus ? React.createElement(Lessons, {\n          everything: props.everything // showLeftOverLessonsFromOrigSyllabus={\n          //   this.props.everythingSyllabus.syllabusData\n          //     .showLeftOverLessonsFromSyllabus\n          // }\n          ,\n          lessons: syllabusContext.everythingSyllabus.syllabusData.maxReactWorkLeft // changed={(event, handlerType, id) =>\n          //   this.props.leftOverLessonChangeHandler(event, handlerType, id)\n          // }\n          ,\n          lastLessonHeader: syllabusContext.everythingSyllabus.syllabusData.lastLessonHeader,\n          lessonsLength: syllabusContext.everythingSyllabus.syllabusData.maxReactWorkLeft.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }) : null);\n      }\n\n      break;\n\n    case '7':\n      alert('inside displayContent case');\n\n      if (syllabusContext.everythingSyllabus.syllabusData == true) {\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(Syllabi, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }));\n      }\n\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, displayContent);\n};\n\nexport default DisplayContent;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/displayContent.js"],"names":["React","Component","useContext","classes","Cockpit","Cockpit2","Navbar2","Tasks","TodayTasks","Lessons","ViewContent","NewTask","NewEvent","NewSyllabus","SyllabusContext","TasksContext","statusClass","Syllabi","DisplayContent","props","syllabusContext","tasksContext","displayContent","everything","contentChoice","logoImage","require","tasksData","reRenderTodayTasks","everythingSyllabus","syllabusData","maxReact","length","newestTaskHandler","newestEvent","newestSyllabus","showLeftOverLessonsFromSyllabus","maxReactWorkLeft","lastLessonHeader","alert"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from './Cockpit';\nimport Cockpit2 from './Cockpit2';\nimport Navbar2 from './Navbar/Navbar2';\nimport Tasks from '../ViewContent/Tasks/Tasks';\nimport TodayTasks from '../ViewContent/TodayTasks/TodayTasks';\nimport Lessons from '../ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContentOptions';\nimport NewTask from '../Creation/newTask';\nimport NewEvent from '../Creation/NewEvent';\nimport NewSyllabus from '../Creation/newSyllabus';\nimport SyllabusContext from '../../context/syllabusContext';\nimport TasksContext from '../../context/tasksContext';\nimport statusClass from '../../components/ViewContent/Tasks/Tasks.module.css';\nimport Syllabi from '../ViewContent/Syllabus/Syllabi';\n\nconst DisplayContent = props => {\n  const syllabusContext = useContext(SyllabusContext);\n  const tasksContext = useContext(TasksContext);\n  let displayContent = null;\n\n  switch (props.everything.contentChoice) {\n    case '0':\n      displayContent = (\n        <React.Fragment>\n          <h3>Hello Thomas.... What would you like to see?</h3>\n          <img\n            className={classes.logoImage}\n            src={require('../../Assets/cockpitIcon.png')}\n          />\n        </React.Fragment>\n      );\n      break;\n\n    case '1':\n      displayContent = (\n        <React.Fragment>\n          {tasksContext.tasksData.tasksData ? (\n            <div>\n              <Tasks\n                everything={props.everything}\n                contentChoice={props.everything.contentChoice}\n              />\n            </div>\n          ) : null}\n                                 \n        </React.Fragment>\n      );\n      break;\n\n    case '2':\n      displayContent = (\n        <React.Fragment>\n                      \n          <TodayTasks\n            everything={props.everything}\n            reRenderTodayTasks={props.everything.reRenderTodayTasks}\n          />\n                    \n        </React.Fragment>\n      );\n      break;\n\n    case '3':\n      displayContent = (\n        <React.Fragment>\n          {syllabusContext.everythingSyllabus.syllabusData ? (\n            <div>\n              <p>\n                tasks has #{' '}\n                {\n                  syllabusContext.everythingSyllabus.syllabusData.maxReact\n                    .length\n                }\n              </p>\n\n              <Lessons\n                everything={props.everything}\n                lessons={\n                  syllabusContext.everythingSyllabus.syllabusData.maxReact\n                }\n                lessonsLength={\n                  syllabusContext.everythingSyllabus.syllabusData.maxReact\n                    .length\n                }\n              />\n            </div>\n          ) : null}\n        </React.Fragment>\n      );\n      /*\n        clicked={(event, index, handlerType) =>\n                    props.deleteLessonHandler(event, index, handlerType)\n                  }\n        */\n\n      break;\n    case '4':\n      displayContent = (\n        <React.Fragment>\n          <NewTask newestTaskHandler={props.newestTaskHandler} />\n        </React.Fragment>\n      );\n      break;\n    case '5':\n      displayContent = (\n        <React.Fragment>\n          <NewEvent newestEvent={props.newestEvent} />\n        </React.Fragment>\n      );\n      break;\n    //showLeftOverLessonsFromSyllabus: for Table Header (add/delete this lesson message)\n\n    case '6':\n      if (syllabusContext.everythingSyllabus.syllabusData) {\n        displayContent = (\n          <React.Fragment>\n            <NewSyllabus newestSyllabus={props.newestSyllabus} />\n\n            {syllabusContext.everythingSyllabus.syllabusData\n              .showLeftOverLessonsFromSyllabus ? (\n              <Lessons\n                everything={props.everything}\n                // showLeftOverLessonsFromOrigSyllabus={\n                //   this.props.everythingSyllabus.syllabusData\n                //     .showLeftOverLessonsFromSyllabus\n                // }\n                lessons={\n                  syllabusContext.everythingSyllabus.syllabusData\n                    .maxReactWorkLeft\n                }\n                // changed={(event, handlerType, id) =>\n                //   this.props.leftOverLessonChangeHandler(event, handlerType, id)\n                // }\n                lastLessonHeader={\n                  syllabusContext.everythingSyllabus.syllabusData\n                    .lastLessonHeader\n                }\n                lessonsLength={\n                  syllabusContext.everythingSyllabus.syllabusData\n                    .maxReactWorkLeft.length\n                }\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      }\n\n      break;\n    case '7':\n      alert('inside displayContent case');\n      if (syllabusContext.everythingSyllabus.syllabusData == true) {\n        displayContent = (\n          <React.Fragment>\n            <Syllabi />\n          </React.Fragment>\n        );\n      }\n\n      break;\n  }\n\n  return <div>{displayContent}</div>;\n};\n\nexport default DisplayContent;\n"]},"metadata":{},"sourceType":"module"}
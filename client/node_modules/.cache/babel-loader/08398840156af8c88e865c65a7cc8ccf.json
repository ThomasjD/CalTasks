{"ast":null,"code":"import _defineProperty from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport moment from 'moment';\nimport { RRuleSet, rrulestr } from 'rrule';\nimport config from './config';\nimport behaviors from './behaviors';\nimport { ViewTypes, CellUnits, DATE_FORMAT, DATETIME_FORMAT } from './index';\nexport default class SchedulerData {\n  constructor(date = moment().format(DATE_FORMAT), viewType = ViewTypes.Week, showAgenda = false, isEventPerspective = false, newConfig = undefined, newBehaviors = undefined, localeMoment = undefined) {\n    this.resources = [];\n    this.events = [];\n    this.eventGroups = [];\n    this.eventGroupsAutoGenerated = true;\n    this.viewType = viewType;\n    this.cellUnit = viewType === ViewTypes.Day ? CellUnits.Hour : CellUnits.Day;\n    this.showAgenda = showAgenda;\n    this.isEventPerspective = isEventPerspective;\n    this.resizing = false;\n    this.scrollToSpecialMoment = false;\n    this.documentWidth = 0;\n    this.localeMoment = moment;\n    if (!!localeMoment) this.localeMoment = localeMoment;\n    this.config = newConfig == undefined ? config : _objectSpread({}, config, {}, newConfig);\n\n    this._validateMinuteStep(this.config.minuteStep);\n\n    this.behaviors = newBehaviors == undefined ? behaviors : _objectSpread({}, behaviors, {}, newBehaviors);\n\n    this._resolveDate(0, date);\n\n    this._createHeaders();\n\n    this._createRenderData();\n  }\n\n  setLocaleMoment(localeMoment) {\n    if (!!localeMoment) {\n      this.localeMoment = localeMoment;\n\n      this._createHeaders();\n\n      this._createRenderData();\n    }\n  }\n\n  setResources(resources) {\n    this._validateResource(resources);\n\n    this.resources = Array.from(new Set(resources));\n\n    this._createRenderData();\n\n    this.setScrollToSpecialMoment(true);\n  }\n\n  setEventGroupsAutoGenerated(autoGenerated) {\n    this.eventGroupsAutoGenerated = autoGenerated;\n  } //optional\n\n\n  setEventGroups(eventGroups) {\n    this._validateEventGroups(eventGroups);\n\n    this.eventGroups = Array.from(new Set(eventGroups));\n    this.eventGroupsAutoGenerated = false;\n\n    this._createRenderData();\n\n    this.setScrollToSpecialMoment(true);\n  }\n\n  setMinuteStep(minuteStep) {\n    if (this.config.minuteStep !== minuteStep) {\n      this._validateMinuteStep(minuteStep);\n\n      this.config.minuteStep = minuteStep;\n\n      this._createHeaders();\n\n      this._createRenderData();\n    }\n  }\n\n  setBesidesWidth(besidesWidth) {\n    if (besidesWidth >= 0) {\n      this.config.besidesWidth = besidesWidth;\n    }\n  }\n\n  getMinuteStepsInHour() {\n    return 60 / this.config.minuteStep;\n  }\n\n  addResource(resource) {\n    let existedResources = this.resources.filter(x => x.id === resource.id);\n\n    if (existedResources.length === 0) {\n      this.resources.push(resource);\n\n      this._createRenderData();\n    }\n  }\n\n  addEventGroup(eventGroup) {\n    let existedEventGroups = this.eventGroups.filter(x => x.id === eventGroup.id);\n\n    if (existedEventGroups.length === 0) {\n      this.eventGroups.push(eventGroup);\n\n      this._createRenderData();\n    }\n  }\n\n  removeEventGroupById(eventGroupId) {\n    let index = -1;\n    this.eventGroups.forEach((item, idx) => {\n      if (item.id === eventGroupId) index = idx;\n    });\n    if (index !== -1) this.eventGroups.splice(index, 1);\n  }\n\n  containsEventGroupId(eventGroupId) {\n    let index = -1;\n    this.eventGroups.forEach((item, idx) => {\n      if (item.id === eventGroupId) index = idx;\n    });\n    return index !== -1;\n  }\n\n  setEvents(events) {\n    this._validateEvents(events);\n\n    this.events = Array.from(events);\n    if (this.eventGroupsAutoGenerated) this._generateEventGroups();\n    if (this.config.recurringEventsEnabled) this._handleRecurringEvents();\n\n    this._createRenderData();\n  }\n\n  setScrollToSpecialMoment(scrollToSpecialMoment) {\n    if (this.config.scrollToSpecialMomentEnabled) this.scrollToSpecialMoment = scrollToSpecialMoment;\n  }\n\n  prev() {\n    this._resolveDate(-1);\n\n    this.events = [];\n\n    this._createHeaders();\n\n    this._createRenderData();\n  }\n\n  next() {\n    this._resolveDate(1);\n\n    this.events = [];\n\n    this._createHeaders();\n\n    this._createRenderData();\n  }\n\n  setDate(date = moment().format(DATE_FORMAT)) {\n    this._resolveDate(0, date);\n\n    this.events = [];\n\n    this._createHeaders();\n\n    this._createRenderData();\n  }\n\n  setViewType(viewType = ViewTypes.Week, showAgenda = false, isEventPerspective = false) {\n    this.showAgenda = showAgenda;\n    this.isEventPerspective = isEventPerspective;\n    this.cellUnit = CellUnits.Day;\n\n    if (this.viewType !== viewType) {\n      let date = this.startDate;\n\n      if (viewType === ViewTypes.Custom || viewType === ViewTypes.Custom1 || viewType === ViewTypes.Custom2) {\n        this.viewType = viewType;\n\n        this._resolveDate(0, date);\n      } else {\n        if (this.viewType < viewType) {\n          if (viewType === ViewTypes.Week) {\n            this.startDate = this.localeMoment(date).startOf('week').format(DATE_FORMAT);\n            this.endDate = this.localeMoment(this.startDate).endOf('week').format(DATE_FORMAT);\n          } else if (viewType === ViewTypes.Month) {\n            this.startDate = this.localeMoment(date).startOf('month').format(DATE_FORMAT);\n            this.endDate = this.localeMoment(this.startDate).endOf('month').format(DATE_FORMAT);\n          } else if (viewType === ViewTypes.Quarter) {\n            this.startDate = this.localeMoment(date).startOf('quarter').format(DATE_FORMAT);\n            this.endDate = this.localeMoment(this.startDate).endOf('quarter').format(DATE_FORMAT);\n          } else if (viewType === ViewTypes.Year) {\n            this.startDate = this.localeMoment(date).startOf('year').format(DATE_FORMAT);\n            this.endDate = this.localeMoment(this.startDate).endOf('year').format(DATE_FORMAT);\n          }\n        } else {\n          let start = this.localeMoment(this.startDate);\n          let end = this.localeMoment(this.endDate).add(1, 'days');\n\n          if (this.selectDate !== undefined) {\n            let selectDate = this.localeMoment(this.selectDate);\n\n            if (selectDate >= start && selectDate < end) {\n              date = this.selectDate;\n            }\n          }\n\n          let now = this.localeMoment();\n\n          if (now >= start && now < end) {\n            date = now.format(DATE_FORMAT);\n          }\n\n          if (viewType === ViewTypes.Day) {\n            this.startDate = date;\n            this.endDate = this.startDate;\n            this.cellUnit = CellUnits.Hour;\n          } else if (viewType === ViewTypes.Week) {\n            this.startDate = this.localeMoment(date).startOf('week').format(DATE_FORMAT);\n            this.endDate = this.localeMoment(this.startDate).endOf('week').format(DATE_FORMAT);\n          } else if (viewType === ViewTypes.Month) {\n            this.startDate = this.localeMoment(date).startOf('month').format(DATE_FORMAT);\n            this.endDate = this.localeMoment(this.startDate).endOf('month').format(DATE_FORMAT);\n          } else if (viewType === ViewTypes.Quarter) {\n            this.startDate = this.localeMoment(date).startOf('quarter').format(DATE_FORMAT);\n            this.endDate = this.localeMoment(this.startDate).endOf('quarter').format(DATE_FORMAT);\n          }\n        }\n\n        this.viewType = viewType;\n      }\n\n      this.events = [];\n\n      this._createHeaders();\n\n      this._createRenderData();\n\n      this.setScrollToSpecialMoment(true);\n    }\n  }\n\n  setSchedulerMaxHeight(newSchedulerMaxHeight) {\n    this.config.schedulerMaxHeight = newSchedulerMaxHeight;\n  }\n\n  isSchedulerResponsive() {\n    return !!this.config.schedulerWidth.endsWith && this.config.schedulerWidth.endsWith(\"%\");\n  }\n\n  toggleExpandStatus(slotId) {\n    let slotEntered = false;\n    let slotIndent = -1;\n    let isExpanded = false;\n    let expandedMap = new Map();\n    this.renderData.forEach(item => {\n      if (slotEntered === false) {\n        if (item.slotId === slotId && item.hasChildren) {\n          slotEntered = true;\n          isExpanded = !item.expanded;\n          item.expanded = isExpanded;\n          slotIndent = item.indent;\n          expandedMap.set(item.indent, {\n            expanded: item.expanded,\n            render: item.render\n          });\n        }\n      } else {\n        if (item.indent > slotIndent) {\n          let expandStatus = expandedMap.get(item.indent - 1);\n          item.render = expandStatus.expanded && expandStatus.render;\n\n          if (item.hasChildren) {\n            expandedMap.set(item.indent, {\n              expanded: item.expanded,\n              render: item.render\n            });\n          }\n        } else {\n          slotEntered = false;\n        }\n      }\n    });\n  }\n\n  isResourceViewResponsive() {\n    let resourceTableWidth = this.getResourceTableConfigWidth();\n    return !!resourceTableWidth.endsWith && resourceTableWidth.endsWith(\"%\");\n  }\n\n  isContentViewResponsive() {\n    let contentCellWidth = this.getContentCellConfigWidth();\n    return !!contentCellWidth.endsWith && contentCellWidth.endsWith(\"%\");\n  }\n\n  getSchedulerWidth() {\n    let baseWidth = this.documentWidth - this.config.besidesWidth > 0 ? this.documentWidth - this.config.besidesWidth : 0;\n    return this.isSchedulerResponsive() ? parseInt(baseWidth * Number(this.config.schedulerWidth.slice(0, -1)) / 100) : this.config.schedulerWidth;\n  }\n\n  getResourceTableWidth() {\n    let resourceTableConfigWidth = this.getResourceTableConfigWidth();\n    let schedulerWidth = this.getSchedulerWidth();\n    let resourceTableWidth = this.isResourceViewResponsive() ? parseInt(schedulerWidth * Number(resourceTableConfigWidth.slice(0, -1)) / 100) : resourceTableConfigWidth;\n    if (this.isSchedulerResponsive() && this.getContentTableWidth() + resourceTableWidth < schedulerWidth) resourceTableWidth = schedulerWidth - this.getContentTableWidth();\n    return resourceTableWidth;\n  }\n\n  getContentCellWidth() {\n    let contentCellConfigWidth = this.getContentCellConfigWidth();\n    let schedulerWidth = this.getSchedulerWidth();\n    return this.isContentViewResponsive() ? parseInt(schedulerWidth * Number(contentCellConfigWidth.slice(0, -1)) / 100) : contentCellConfigWidth;\n  }\n\n  getContentTableWidth() {\n    return this.headers.length * this.getContentCellWidth();\n  }\n\n  getScrollToSpecialMoment() {\n    if (this.config.scrollToSpecialMomentEnabled) return this.scrollToSpecialMoment;\n    return false;\n  }\n\n  getSlots() {\n    return this.isEventPerspective ? this.eventGroups : this.resources;\n  }\n\n  getSlotById(slotId) {\n    let slots = this.getSlots();\n    let slot = undefined;\n    slots.forEach(item => {\n      if (item.id === slotId) slot = item;\n    });\n    return slot;\n  }\n\n  getResourceById(resourceId) {\n    let resource = undefined;\n    this.resources.forEach(item => {\n      if (item.id === resourceId) resource = item;\n    });\n    return resource;\n  }\n\n  getTableHeaderHeight() {\n    return this.config.tableHeaderHeight;\n  }\n\n  getSchedulerContentDesiredHeight() {\n    let height = 0;\n    this.renderData.forEach(item => {\n      if (item.render) height += item.rowHeight;\n    });\n    return height;\n  }\n\n  getCellMaxEvents() {\n    return this.viewType === ViewTypes.Week ? this.config.weekMaxEvents : this.viewType === ViewTypes.Day ? this.config.dayMaxEvents : this.viewType === ViewTypes.Month ? this.config.monthMaxEvents : this.viewType === ViewTypes.Year ? this.config.yearMaxEvents : this.viewType === ViewTypes.Quarter ? this.config.quarterMaxEvents : this.config.customMaxEvents;\n  }\n\n  getDateLabel() {\n    let start = this.localeMoment(this.startDate);\n    let end = this.localeMoment(this.endDate);\n    let dateLabel = start.format('LL');\n    if (start != end) dateLabel = \"\".concat(start.format('LL'), \"-\").concat(end.format('LL'));\n    if (!!this.behaviors.getDateLabelFunc) dateLabel = this.behaviors.getDateLabelFunc(this, this.viewType, this.startDate, this.endDate);\n    return dateLabel;\n  }\n\n  addEvent(newEvent) {\n    this._attachEvent(newEvent);\n\n    if (this.eventGroupsAutoGenerated) this._generateEventGroups();\n\n    this._createRenderData();\n  }\n\n  updateEventStart(event, newStart) {\n    this._detachEvent(event);\n\n    event.start = newStart;\n\n    this._attachEvent(event);\n\n    this._createRenderData();\n  }\n\n  updateEventEnd(event, newEnd) {\n    event.end = newEnd;\n\n    this._createRenderData();\n  }\n\n  moveEvent(event, newSlotId, newSlotName, newStart, newEnd) {\n    this._detachEvent(event);\n\n    if (this.isEventPerspective) {\n      event.groupId = newSlotId;\n      event.groupName = newSlotName;\n    } else event.resourceId = newSlotId;\n\n    event.end = newEnd;\n    event.start = newStart;\n\n    this._attachEvent(event);\n\n    this._createRenderData();\n  }\n\n  isEventInTimeWindow(eventStart, eventEnd, windowStart, windowEnd) {\n    return eventStart < windowEnd && eventEnd > windowStart;\n  }\n\n  removeEvent(event) {\n    let index = this.events.indexOf(event);\n\n    if (index !== -1) {\n      this.events.splice(index, 1);\n\n      this._createRenderData();\n    }\n  }\n\n  removeEventById(eventId) {\n    let index = -1;\n    this.events.forEach((item, idx) => {\n      if (item.id === eventId) index = idx;\n    });\n\n    if (index !== -1) {\n      this.events.splice(index, 1);\n\n      this._createRenderData();\n    }\n  }\n\n  getResourceTableConfigWidth() {\n    if (this.showAgenda) return this.config.agendaResourceTableWidth;\n    return this.viewType === ViewTypes.Week ? this.config.weekResourceTableWidth : this.viewType === ViewTypes.Day ? this.config.dayResourceTableWidth : this.viewType === ViewTypes.Month ? this.config.monthResourceTableWidth : this.viewType === ViewTypes.Year ? this.config.yearResourceTableWidth : this.viewType === ViewTypes.Quarter ? this.config.quarterResourceTableWidth : this.config.customResourceTableWidth;\n  }\n\n  getContentCellConfigWidth() {\n    return this.viewType === ViewTypes.Week ? this.config.weekCellWidth : this.viewType === ViewTypes.Day ? this.config.dayCellWidth : this.viewType === ViewTypes.Month ? this.config.monthCellWidth : this.viewType === ViewTypes.Year ? this.config.yearCellWidth : this.viewType === ViewTypes.Quarter ? this.config.quarterCellWidth : this.config.customCellWidth;\n  }\n\n  _setDocumentWidth(documentWidth) {\n    if (documentWidth >= 0) {\n      this.documentWidth = documentWidth;\n    }\n  }\n\n  _detachEvent(event) {\n    let index = this.events.indexOf(event);\n    if (index !== -1) this.events.splice(index, 1);\n  }\n\n  _attachEvent(event) {\n    let pos = 0;\n    let eventStart = this.localeMoment(event.start);\n    this.events.forEach((item, index) => {\n      let start = this.localeMoment(item.start);\n      if (eventStart >= start) pos = index + 1;\n    });\n    this.events.splice(pos, 0, event);\n  }\n\n  _handleRecurringEvents() {\n    let recurringEvents = this.events.filter(x => !!x.rrule);\n    recurringEvents.forEach(item => {\n      this._detachEvent(item);\n    });\n    recurringEvents.forEach(item => {\n      let windowStart = this.localeMoment(this.startDate),\n          windowEnd = this.localeMoment(this.endDate).add(1, 'days'),\n          oldStart = this.localeMoment(item.start),\n          oldEnd = this.localeMoment(item.end),\n          rule = rrulestr(item.rrule),\n          oldDtstart = undefined;\n\n      if (!!rule.origOptions.dtstart) {\n        oldDtstart = this.localeMoment(rule.origOptions.dtstart);\n      } //rule.origOptions.dtstart = oldStart.toDate();\n\n\n      if (!rule.origOptions.until || windowEnd < this.localeMoment(rule.origOptions.until)) {\n        rule.origOptions.until = windowEnd.toDate();\n      } //reload\n\n\n      rule = rrulestr(rule.toString());\n\n      if (item.exdates || item.exrule) {\n        const rruleSet = new RRuleSet();\n        rruleSet.rrule(rule);\n\n        if (item.exrule) {\n          rruleSet.exrule(rrulestr(item.exrule));\n        }\n\n        if (item.exdates) {\n          item.exdates.forEach(exdate => {\n            rruleSet.exdate(this.localeMoment(exdate).toDate());\n          });\n        }\n\n        rule = rruleSet;\n      }\n\n      let all = rule.all();\n      let newEvents = all.map((time, index) => {\n        return _objectSpread({}, item, {\n          recurringEventId: item.id,\n          recurringEventStart: item.start,\n          recurringEventEnd: item.end,\n          id: \"\".concat(item.id, \"-\").concat(index),\n          start: rule.origOptions.tzid ? this.localeMoment.utc(time).utcOffset(this.localeMoment().utcOffset(), true).format(DATETIME_FORMAT) : this.localeMoment(time).format(DATETIME_FORMAT),\n          end: rule.origOptions.tzid ? this.localeMoment.utc(time).utcOffset(this.localeMoment().utcOffset(), true).add(oldEnd.diff(oldStart), 'ms').format(DATETIME_FORMAT) : this.localeMoment(time).add(oldEnd.diff(oldStart), 'ms').format(DATETIME_FORMAT)\n        });\n      });\n      newEvents.forEach(newEvent => {\n        let eventStart = this.localeMoment(newEvent.start),\n            eventEnd = this.localeMoment(newEvent.end);\n\n        if (this.isEventInTimeWindow(eventStart, eventEnd, windowStart, windowEnd) && (!oldDtstart || eventStart >= oldDtstart)) {\n          this._attachEvent(newEvent);\n        }\n      });\n    });\n  }\n\n  _resolveDate(num, date = undefined) {\n    if (date != undefined) this.selectDate = this.localeMoment(date).format(DATE_FORMAT);\n\n    if (this.viewType === ViewTypes.Week) {\n      this.startDate = date != undefined ? this.localeMoment(date).startOf('week').format(DATE_FORMAT) : this.localeMoment(this.startDate).add(num, 'weeks').format(DATE_FORMAT);\n      this.endDate = this.localeMoment(this.startDate).endOf('week').format(DATE_FORMAT);\n    } else if (this.viewType === ViewTypes.Day) {\n      this.startDate = date != undefined ? this.selectDate : this.localeMoment(this.startDate).add(num, 'days').format(DATE_FORMAT);\n      this.endDate = this.startDate;\n    } else if (this.viewType === ViewTypes.Month) {\n      this.startDate = date != undefined ? this.localeMoment(date).startOf('month').format(DATE_FORMAT) : this.localeMoment(this.startDate).add(num, 'months').format(DATE_FORMAT);\n      this.endDate = this.localeMoment(this.startDate).endOf('month').format(DATE_FORMAT);\n    } else if (this.viewType === ViewTypes.Quarter) {\n      this.startDate = date != undefined ? this.localeMoment(date).startOf('quarter').format(DATE_FORMAT) : this.localeMoment(this.startDate).add(num, 'quarters').format(DATE_FORMAT);\n      this.endDate = this.localeMoment(this.startDate).endOf('quarter').format(DATE_FORMAT);\n    } else if (this.viewType === ViewTypes.Year) {\n      this.startDate = date != undefined ? this.localeMoment(date).startOf('year').format(DATE_FORMAT) : this.localeMoment(this.startDate).add(num, 'years').format(DATE_FORMAT);\n      this.endDate = this.localeMoment(this.startDate).endOf('year').format(DATE_FORMAT);\n    } else if (this.viewType === ViewTypes.Custom || this.viewType === ViewTypes.Custom1 || this.viewType === ViewTypes.Custom2) {\n      if (this.behaviors.getCustomDateFunc != undefined) {\n        let customDate = this.behaviors.getCustomDateFunc(this, num, date);\n        this.startDate = customDate.startDate;\n        this.endDate = customDate.endDate;\n        if (!!customDate.cellUnit) this.cellUnit = customDate.cellUnit;\n      } else {\n        throw new Error('This is custom view type, set behaviors.getCustomDateFunc func to resolve the time window(startDate and endDate) yourself');\n      }\n    }\n  }\n\n  _createHeaders() {\n    let headers = [],\n        start = this.localeMoment(this.startDate),\n        end = this.localeMoment(this.endDate),\n        header = start;\n\n    if (this.showAgenda) {\n      headers.push({\n        time: header.format(DATETIME_FORMAT),\n        nonWorkingTime: false\n      });\n    } else {\n      if (this.cellUnit === CellUnits.Hour) {\n        start = start.add(this.config.dayStartFrom, 'hours');\n        end = end.add(this.config.dayStopTo, 'hours');\n        header = start;\n\n        while (header >= start && header <= end) {\n          let minuteSteps = this.getMinuteStepsInHour();\n\n          for (let i = 0; i < minuteSteps; i++) {\n            let hour = header.hour();\n\n            if (hour >= this.config.dayStartFrom && hour <= this.config.dayStopTo) {\n              let time = header.format(DATETIME_FORMAT);\n              let nonWorkingTime = this.behaviors.isNonWorkingTimeFunc(this, time);\n              headers.push({\n                time: time,\n                nonWorkingTime: nonWorkingTime\n              });\n            }\n\n            header = header.add(this.config.minuteStep, 'minutes');\n          }\n        }\n      } else {\n        while (header >= start && header <= end) {\n          let time = header.format(DATETIME_FORMAT);\n          let dayOfWeek = header.weekday();\n\n          if (this.config.displayWeekend || dayOfWeek !== 0 && dayOfWeek !== 6) {\n            let nonWorkingTime = this.behaviors.isNonWorkingTimeFunc(this, time);\n            headers.push({\n              time: time,\n              nonWorkingTime: nonWorkingTime\n            });\n          }\n\n          header = header.add(1, 'days');\n        }\n      }\n    }\n\n    this.headers = headers;\n  }\n\n  _createInitHeaderEvents(header) {\n    let start = this.localeMoment(header.time),\n        startValue = start.format(DATETIME_FORMAT);\n    let endValue = this.showAgenda ? this.viewType === ViewTypes.Week ? start.add(1, 'weeks').format(DATETIME_FORMAT) : this.viewType === ViewTypes.Day ? start.add(1, 'days').format(DATETIME_FORMAT) : this.viewType === ViewTypes.Month ? start.add(1, 'months').format(DATETIME_FORMAT) : this.viewType === ViewTypes.Year ? start.add(1, 'years').format(DATETIME_FORMAT) : this.viewType === ViewTypes.Quarter ? start.add(1, 'quarters').format(DATETIME_FORMAT) : this.localeMoment(this.endDate).add(1, 'days').format(DATETIME_FORMAT) : this.cellUnit === CellUnits.Hour ? start.add(this.config.minuteStep, 'minutes').format(DATETIME_FORMAT) : start.add(1, 'days').format(DATETIME_FORMAT);\n    return {\n      time: header.time,\n      nonWorkingTime: header.nonWorkingTime,\n      start: startValue,\n      end: endValue,\n      count: 0,\n      addMore: 0,\n      addMoreIndex: 0,\n      events: [,,,]\n    };\n  }\n\n  _createHeaderEvent(render, span, eventItem) {\n    return {\n      render: render,\n      span: span,\n      eventItem: eventItem\n    };\n  }\n\n  _getEventSlotId(event) {\n    return this.isEventPerspective ? this._getEventGroupId(event) : event.resourceId;\n  }\n\n  _getEventGroupId(event) {\n    return !!event.groupId ? event.groupId.toString() : event.id.toString();\n  }\n\n  _getEventGroupName(event) {\n    return !!event.groupName ? event.groupName : event.title;\n  }\n\n  _generateEventGroups() {\n    let eventGroups = [];\n    let set = new Set();\n    this.events.forEach(item => {\n      let groupId = this._getEventGroupId(item);\n\n      let groupName = this._getEventGroupName(item);\n\n      if (!set.has(groupId)) {\n        eventGroups.push({\n          id: groupId,\n          name: groupName,\n          state: item\n        });\n        set.add(groupId);\n      }\n    });\n    this.eventGroups = eventGroups;\n  }\n\n  _createInitRenderData(isEventPerspective, eventGroups, resources, headers) {\n    let slots = isEventPerspective ? eventGroups : resources;\n    let slotTree = [],\n        slotMap = new Map();\n    slots.forEach(slot => {\n      let headerEvents = headers.map(header => {\n        return this._createInitHeaderEvents(header);\n      });\n      let slotRenderData = {\n        slotId: slot.id,\n        slotName: slot.name,\n        parentId: slot.parentId,\n        groupOnly: slot.groupOnly,\n        hasSummary: false,\n        rowMaxCount: 0,\n        rowHeight: this.config.nonAgendaSlotMinHeight !== 0 ? this.config.nonAgendaSlotMinHeight : this.config.eventItemLineHeight + 2,\n        headerItems: headerEvents,\n        indent: 0,\n        hasChildren: false,\n        expanded: true,\n        render: true\n      };\n      let id = slot.id;\n      let value = undefined;\n\n      if (slotMap.has(id)) {\n        value = slotMap.get(id);\n        value.data = slotRenderData;\n      } else {\n        value = {\n          data: slotRenderData,\n          children: []\n        };\n        slotMap.set(id, value);\n      }\n\n      let parentId = slot.parentId;\n\n      if (!parentId || parentId === id) {\n        slotTree.push(value);\n      } else {\n        let parentValue = undefined;\n\n        if (slotMap.has(parentId)) {\n          parentValue = slotMap.get(parentId);\n        } else {\n          parentValue = {\n            data: undefined,\n            children: []\n          };\n          slotMap.set(parentId, parentValue);\n        }\n\n        parentValue.children.push(value);\n      }\n    });\n    let slotStack = [];\n    let i;\n\n    for (i = slotTree.length - 1; i >= 0; i--) {\n      slotStack.push(slotTree[i]);\n    }\n\n    let initRenderData = [];\n    let currentNode = undefined;\n\n    while (slotStack.length > 0) {\n      currentNode = slotStack.pop();\n\n      if (currentNode.data.indent > 0) {\n        currentNode.data.render = this.config.defaultExpanded;\n      }\n\n      if (currentNode.children.length > 0) {\n        currentNode.data.hasChildren = true;\n        currentNode.data.expanded = this.config.defaultExpanded;\n      }\n\n      initRenderData.push(currentNode.data);\n\n      for (i = currentNode.children.length - 1; i >= 0; i--) {\n        currentNode.children[i].data.indent = currentNode.data.indent + 1;\n        slotStack.push(currentNode.children[i]);\n      }\n    }\n\n    return initRenderData;\n  }\n\n  _getSpan(startTime, endTime, headers) {\n    if (this.showAgenda) return 1;\n    let start = this.localeMoment(startTime),\n        end = this.localeMoment(endTime),\n        span = 0;\n\n    for (let header of headers) {\n      let spanStart = this.localeMoment(header.time),\n          spanEnd = this.cellUnit === CellUnits.Hour ? this.localeMoment(header.time).add(this.config.minuteStep, 'minutes') : this.localeMoment(header.time).add(1, 'days');\n\n      if (spanStart < end && spanEnd > start) {\n        span++;\n      }\n    }\n\n    return span;\n  }\n\n  _validateResource(resources) {\n    if (Object.prototype.toString.call(resources) !== \"[object Array]\") {\n      throw new Error('Resources should be Array object');\n    }\n\n    resources.forEach((item, index) => {\n      if (item == undefined) {\n        console.error(\"Resource undefined: \".concat(index));\n        throw new Error(\"Resource undefined: \".concat(index));\n      }\n\n      if (item.id == undefined || item.name == undefined) {\n        console.error('Resource property missed', index, item);\n        throw new Error(\"Resource property undefined: \".concat(index));\n      }\n    });\n  }\n\n  _validateEventGroups(eventGroups) {\n    if (Object.prototype.toString.call(eventGroups) !== \"[object Array]\") {\n      throw new Error('Event groups should be Array object');\n    }\n\n    eventGroups.forEach((item, index) => {\n      if (item == undefined) {\n        console.error(\"Event group undefined: \".concat(index));\n        throw new Error(\"Event group undefined: \".concat(index));\n      }\n\n      if (item.id == undefined || item.name == undefined) {\n        console.error('Event group property missed', index, item);\n        throw new Error(\"Event group property undefined: \".concat(index));\n      }\n    });\n  }\n\n  _validateEvents(events) {\n    if (Object.prototype.toString.call(events) !== \"[object Array]\") {\n      throw new Error('Events should be Array object');\n    }\n\n    events.forEach((e, index) => {\n      if (e == undefined) {\n        console.error(\"Event undefined: \".concat(index));\n        throw new Error(\"Event undefined: \".concat(index));\n      }\n\n      if (e.id == undefined || e.resourceId == undefined || e.title == undefined || e.start == undefined || e.end == undefined) {\n        console.error('Event property missed', index, e);\n        throw new Error(\"Event property undefined: \".concat(index));\n      }\n    });\n  }\n\n  _validateMinuteStep(minuteStep) {\n    if (60 % minuteStep !== 0) {\n      console.error('Minute step is not set properly - 60 minutes must be divisible without remainder by this number');\n      throw new Error('Minute step is not set properly - 60 minutes must be divisible without remainder by this number');\n    }\n  }\n\n  _compare(event1, event2) {\n    let start1 = this.localeMoment(event1.start),\n        start2 = this.localeMoment(event2.start);\n    if (start1 !== start2) return start1 < start2 ? -1 : 1;\n    let end1 = this.localeMoment(event1.end),\n        end2 = this.localeMoment(event2.end);\n    if (end1 !== end2) return end1 < end2 ? -1 : 1;\n    return event1.id < event2.id ? -1 : 1;\n  }\n\n  _createRenderData() {\n    let initRenderData = this._createInitRenderData(this.isEventPerspective, this.eventGroups, this.resources, this.headers); //this.events.sort(this._compare);\n\n\n    let cellMaxEventsCount = this.getCellMaxEvents();\n    const cellMaxEventsCountValue = 30;\n    this.events.forEach(item => {\n      let resourceEventsList = initRenderData.filter(x => x.slotId === this._getEventSlotId(item));\n\n      if (resourceEventsList.length > 0) {\n        let resourceEvents = resourceEventsList[0];\n\n        let span = this._getSpan(item.start, item.end, this.headers);\n\n        let eventStart = this.localeMoment(item.start),\n            eventEnd = this.localeMoment(item.end);\n        let pos = -1;\n        resourceEvents.headerItems.forEach((header, index) => {\n          let headerStart = this.localeMoment(header.start),\n              headerEnd = this.localeMoment(header.end);\n\n          if (headerEnd > eventStart && headerStart < eventEnd) {\n            header.count = header.count + 1;\n\n            if (header.count > resourceEvents.rowMaxCount) {\n              resourceEvents.rowMaxCount = header.count;\n              let rowsCount = cellMaxEventsCount <= cellMaxEventsCountValue && resourceEvents.rowMaxCount > cellMaxEventsCount ? cellMaxEventsCount : resourceEvents.rowMaxCount;\n              let newRowHeight = rowsCount * this.config.eventItemLineHeight + (this.config.creatable && this.config.checkConflict === false ? 20 : 2);\n              if (newRowHeight > resourceEvents.rowHeight) resourceEvents.rowHeight = newRowHeight;\n            }\n\n            if (pos === -1) {\n              let tmp = 0;\n\n              while (header.events[tmp] !== undefined) tmp++;\n\n              pos = tmp;\n            }\n\n            let render = headerStart <= eventStart || index === 0;\n\n            if (render === false) {\n              let previousHeader = resourceEvents.headerItems[index - 1];\n              let previousHeaderStart = this.localeMoment(previousHeader.start),\n                  previousHeaderEnd = this.localeMoment(previousHeader.end);\n              if (previousHeaderEnd <= eventStart || previousHeaderStart >= eventEnd) render = true;\n            }\n\n            header.events[pos] = this._createHeaderEvent(render, span, item);\n          }\n        });\n      }\n    });\n\n    if (cellMaxEventsCount <= cellMaxEventsCountValue || this.behaviors.getSummaryFunc !== undefined) {\n      initRenderData.forEach(resourceEvents => {\n        let hasSummary = false;\n        resourceEvents.headerItems.forEach(headerItem => {\n          if (cellMaxEventsCount <= cellMaxEventsCountValue) {\n            let renderItemsCount = 0,\n                addMoreIndex = 0,\n                index = 0;\n\n            while (index < cellMaxEventsCount - 1) {\n              if (headerItem.events[index] !== undefined) {\n                renderItemsCount++;\n                addMoreIndex = index + 1;\n              }\n\n              index++;\n            }\n\n            if (headerItem.events[index] !== undefined) {\n              if (renderItemsCount + 1 < headerItem.count) {\n                headerItem.addMore = headerItem.count - renderItemsCount;\n                headerItem.addMoreIndex = addMoreIndex;\n              }\n            } else {\n              if (renderItemsCount < headerItem.count) {\n                headerItem.addMore = headerItem.count - renderItemsCount;\n                headerItem.addMoreIndex = addMoreIndex;\n              }\n            }\n          }\n\n          if (this.behaviors.getSummaryFunc !== undefined) {\n            let events = [];\n            headerItem.events.forEach(e => {\n              if (!!e && !!e.eventItem) events.push(e.eventItem);\n            });\n            headerItem.summary = this.behaviors.getSummaryFunc(this, events, resourceEvents.slotId, resourceEvents.slotName, headerItem.start, headerItem.end);\n            if (!!headerItem.summary && headerItem.summary.text != undefined) hasSummary = true;\n          }\n        });\n        resourceEvents.hasSummary = hasSummary;\n\n        if (hasSummary) {\n          let rowsCount = cellMaxEventsCount <= cellMaxEventsCountValue && resourceEvents.rowMaxCount > cellMaxEventsCount ? cellMaxEventsCount : resourceEvents.rowMaxCount;\n          let newRowHeight = (rowsCount + 1) * this.config.eventItemLineHeight + (this.config.creatable && this.config.checkConflict === false ? 20 : 2);\n          if (newRowHeight > resourceEvents.rowHeight) resourceEvents.rowHeight = newRowHeight;\n        }\n      });\n    }\n\n    this.renderData = initRenderData;\n  }\n\n  _startResizing() {\n    this.resizing = true;\n  }\n\n  _stopResizing() {\n    this.resizing = false;\n  }\n\n  _isResizing() {\n    return this.resizing;\n  }\n\n}","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/src/SchedulerData.js"],"names":["moment","RRuleSet","rrulestr","config","behaviors","ViewTypes","CellUnits","DATE_FORMAT","DATETIME_FORMAT","SchedulerData","constructor","date","format","viewType","Week","showAgenda","isEventPerspective","newConfig","undefined","newBehaviors","localeMoment","resources","events","eventGroups","eventGroupsAutoGenerated","cellUnit","Day","Hour","resizing","scrollToSpecialMoment","documentWidth","_validateMinuteStep","minuteStep","_resolveDate","_createHeaders","_createRenderData","setLocaleMoment","setResources","_validateResource","Array","from","Set","setScrollToSpecialMoment","setEventGroupsAutoGenerated","autoGenerated","setEventGroups","_validateEventGroups","setMinuteStep","setBesidesWidth","besidesWidth","getMinuteStepsInHour","addResource","resource","existedResources","filter","x","id","length","push","addEventGroup","eventGroup","existedEventGroups","removeEventGroupById","eventGroupId","index","forEach","item","idx","splice","containsEventGroupId","setEvents","_validateEvents","_generateEventGroups","recurringEventsEnabled","_handleRecurringEvents","scrollToSpecialMomentEnabled","prev","next","setDate","setViewType","startDate","Custom","Custom1","Custom2","startOf","endDate","endOf","Month","Quarter","Year","start","end","add","selectDate","now","setSchedulerMaxHeight","newSchedulerMaxHeight","schedulerMaxHeight","isSchedulerResponsive","schedulerWidth","endsWith","toggleExpandStatus","slotId","slotEntered","slotIndent","isExpanded","expandedMap","Map","renderData","hasChildren","expanded","indent","set","render","expandStatus","get","isResourceViewResponsive","resourceTableWidth","getResourceTableConfigWidth","isContentViewResponsive","contentCellWidth","getContentCellConfigWidth","getSchedulerWidth","baseWidth","parseInt","Number","slice","getResourceTableWidth","resourceTableConfigWidth","getContentTableWidth","getContentCellWidth","contentCellConfigWidth","headers","getScrollToSpecialMoment","getSlots","getSlotById","slots","slot","getResourceById","resourceId","getTableHeaderHeight","tableHeaderHeight","getSchedulerContentDesiredHeight","height","rowHeight","getCellMaxEvents","weekMaxEvents","dayMaxEvents","monthMaxEvents","yearMaxEvents","quarterMaxEvents","customMaxEvents","getDateLabel","dateLabel","getDateLabelFunc","addEvent","newEvent","_attachEvent","updateEventStart","event","newStart","_detachEvent","updateEventEnd","newEnd","moveEvent","newSlotId","newSlotName","groupId","groupName","isEventInTimeWindow","eventStart","eventEnd","windowStart","windowEnd","removeEvent","indexOf","removeEventById","eventId","agendaResourceTableWidth","weekResourceTableWidth","dayResourceTableWidth","monthResourceTableWidth","yearResourceTableWidth","quarterResourceTableWidth","customResourceTableWidth","weekCellWidth","dayCellWidth","monthCellWidth","yearCellWidth","quarterCellWidth","customCellWidth","_setDocumentWidth","pos","recurringEvents","rrule","oldStart","oldEnd","rule","oldDtstart","origOptions","dtstart","until","toDate","toString","exdates","exrule","rruleSet","exdate","all","newEvents","map","time","recurringEventId","recurringEventStart","recurringEventEnd","tzid","utc","utcOffset","diff","num","getCustomDateFunc","customDate","Error","header","nonWorkingTime","dayStartFrom","dayStopTo","minuteSteps","i","hour","isNonWorkingTimeFunc","dayOfWeek","weekday","displayWeekend","_createInitHeaderEvents","startValue","endValue","count","addMore","addMoreIndex","_createHeaderEvent","span","eventItem","_getEventSlotId","_getEventGroupId","_getEventGroupName","title","has","name","state","_createInitRenderData","slotTree","slotMap","headerEvents","slotRenderData","slotName","parentId","groupOnly","hasSummary","rowMaxCount","nonAgendaSlotMinHeight","eventItemLineHeight","headerItems","value","data","children","parentValue","slotStack","initRenderData","currentNode","pop","defaultExpanded","_getSpan","startTime","endTime","spanStart","spanEnd","Object","prototype","call","console","error","e","_compare","event1","event2","start1","start2","end1","end2","cellMaxEventsCount","cellMaxEventsCountValue","resourceEventsList","resourceEvents","headerStart","headerEnd","rowsCount","newRowHeight","creatable","checkConflict","tmp","previousHeader","previousHeaderStart","previousHeaderEnd","getSummaryFunc","headerItem","renderItemsCount","summary","text","_startResizing","_stopResizing","_isResizing"],"mappings":"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","sourcesContent":["import moment from 'moment'\r\nimport {RRuleSet,rrulestr} from 'rrule'\r\nimport config from './config'\r\nimport behaviors from './behaviors'\r\nimport {ViewTypes, CellUnits, DATE_FORMAT, DATETIME_FORMAT} from './index'\r\n\r\nexport default class SchedulerData {\r\n    constructor(date=moment().format(DATE_FORMAT), viewType = ViewTypes.Week,\r\n                showAgenda = false, isEventPerspective = false,\r\n                newConfig = undefined, newBehaviors = undefined,\r\n                localeMoment = undefined) {        \r\n        this.resources = [];\r\n        this.events = [];\r\n        this.eventGroups = [];\r\n        this.eventGroupsAutoGenerated = true;\r\n        this.viewType = viewType;\r\n        this.cellUnit = viewType === ViewTypes.Day ? CellUnits.Hour : CellUnits.Day;\r\n        this.showAgenda = showAgenda;\r\n        this.isEventPerspective = isEventPerspective;\r\n        this.resizing = false;\r\n        this.scrollToSpecialMoment = false;\r\n        this.documentWidth = 0;\r\n\r\n        this.localeMoment = moment;\r\n        if(!!localeMoment)\r\n            this.localeMoment = localeMoment;\r\n        this.config = newConfig == undefined ? config : {...config, ...newConfig};\r\n        this._validateMinuteStep(this.config.minuteStep);\r\n        this.behaviors = newBehaviors == undefined ? behaviors : {...behaviors, ...newBehaviors};\r\n        this._resolveDate(0, date);\r\n        this._createHeaders();\r\n        this._createRenderData();\r\n    }\r\n\r\n    setLocaleMoment(localeMoment){\r\n        if(!!localeMoment){\r\n            this.localeMoment = localeMoment;\r\n            this._createHeaders();\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    setResources(resources) {\r\n        this._validateResource(resources);\r\n        this.resources = Array.from(new Set(resources));\r\n        this._createRenderData();\r\n        this.setScrollToSpecialMoment(true);\r\n    }\r\n\r\n    setEventGroupsAutoGenerated(autoGenerated){\r\n        this.eventGroupsAutoGenerated = autoGenerated;\r\n    }\r\n\r\n    //optional\r\n    setEventGroups(eventGroups) {\r\n        this._validateEventGroups(eventGroups);\r\n        this.eventGroups = Array.from(new Set(eventGroups));\r\n        this.eventGroupsAutoGenerated = false;\r\n        this._createRenderData();\r\n        this.setScrollToSpecialMoment(true);\r\n    }\r\n\r\n    setMinuteStep(minuteStep) {\r\n        if(this.config.minuteStep !== minuteStep) {\r\n            this._validateMinuteStep(minuteStep);\r\n            this.config.minuteStep = minuteStep;\r\n            this._createHeaders();\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    setBesidesWidth(besidesWidth) {\r\n        if(besidesWidth >= 0) {\r\n            this.config.besidesWidth = besidesWidth;\r\n        }\r\n    }\r\n\r\n    getMinuteStepsInHour(){\r\n        return 60 / this.config.minuteStep;\r\n    }\r\n\r\n    addResource(resource){\r\n        let existedResources = this.resources.filter(x => x.id === resource.id);\r\n        if(existedResources.length === 0){\r\n            this.resources.push(resource);\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    addEventGroup(eventGroup){\r\n        let existedEventGroups = this.eventGroups.filter(x => x.id === eventGroup.id);\r\n        if(existedEventGroups.length === 0){\r\n            this.eventGroups.push(eventGroup);\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    removeEventGroupById(eventGroupId){\r\n        let index = -1;\r\n        this.eventGroups.forEach((item, idx) => {\r\n            if(item.id === eventGroupId)\r\n                index = idx;\r\n        })\r\n        if(index !== -1)\r\n            this.eventGroups.splice(index, 1);\r\n    }\r\n\r\n    containsEventGroupId(eventGroupId){\r\n        let index = -1;\r\n        this.eventGroups.forEach((item, idx) => {\r\n            if(item.id === eventGroupId)\r\n                index = idx;\r\n        })\r\n        return index !== -1;\r\n    }\r\n\r\n    setEvents(events) {\r\n        this._validateEvents(events);\r\n        this.events = Array.from(events);\r\n        if(this.eventGroupsAutoGenerated)\r\n            this._generateEventGroups();\r\n        if(this.config.recurringEventsEnabled)\r\n            this._handleRecurringEvents();\r\n        \r\n        this._createRenderData();\r\n    }\r\n\r\n    setScrollToSpecialMoment(scrollToSpecialMoment){\r\n        if(this.config.scrollToSpecialMomentEnabled)\r\n            this.scrollToSpecialMoment = scrollToSpecialMoment;\r\n    }\r\n\r\n    prev() {\r\n        this._resolveDate(-1);\r\n        this.events = [];\r\n        this._createHeaders();\r\n        this._createRenderData();\r\n    }\r\n\r\n    next() {\r\n        this._resolveDate(1);\r\n        this.events = [];\r\n        this._createHeaders();\r\n        this._createRenderData();\r\n    }\r\n\r\n    setDate(date=moment().format(DATE_FORMAT)){\r\n        this._resolveDate(0, date);\r\n        this.events = [];\r\n        this._createHeaders();\r\n        this._createRenderData();\r\n    }\r\n\r\n    setViewType(viewType = ViewTypes.Week, showAgenda = false, isEventPerspective = false) {\r\n        this.showAgenda = showAgenda;\r\n        this.isEventPerspective = isEventPerspective;\r\n        this.cellUnit = CellUnits.Day;\r\n\r\n        if(this.viewType !== viewType) {\r\n            let date = this.startDate;\r\n\r\n            if(viewType === ViewTypes.Custom || viewType === ViewTypes.Custom1 || viewType === ViewTypes.Custom2) {\r\n                this.viewType = viewType;\r\n                this._resolveDate(0, date);\r\n            } else {\r\n                if(this.viewType < viewType){\r\n                    if(viewType === ViewTypes.Week) {\r\n                        this.startDate = this.localeMoment(date).startOf('week').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('week').format(DATE_FORMAT);\r\n                    }\r\n                    else if(viewType === ViewTypes.Month){\r\n                        this.startDate = this.localeMoment(date).startOf('month').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('month').format(DATE_FORMAT);\r\n                    }\r\n                    else if(viewType === ViewTypes.Quarter){\r\n                        this.startDate = this.localeMoment(date).startOf('quarter').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('quarter').format(DATE_FORMAT);\r\n                    }\r\n                    else if(viewType === ViewTypes.Year) {\r\n                        this.startDate = this.localeMoment(date).startOf('year').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('year').format(DATE_FORMAT);\r\n                    }\r\n                }\r\n                else{\r\n                    let start = this.localeMoment(this.startDate);\r\n                    let end = this.localeMoment(this.endDate).add(1, 'days');\r\n    \r\n                    if(this.selectDate !== undefined) {\r\n                        let selectDate = this.localeMoment(this.selectDate);\r\n                        if(selectDate >= start && selectDate < end) {\r\n                            date = this.selectDate;\r\n                        }\r\n                    }\r\n    \r\n                    let now = this.localeMoment();\r\n                    if(now >= start && now < end) {\r\n                        date = now.format(DATE_FORMAT);\r\n                    }\r\n    \r\n                    if(viewType === ViewTypes.Day) {\r\n                        this.startDate = date;\r\n                        this.endDate = this.startDate;\r\n                        this.cellUnit = CellUnits.Hour;\r\n                    }\r\n                    else if(viewType === ViewTypes.Week) {\r\n                        this.startDate = this.localeMoment(date).startOf('week').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('week').format(DATE_FORMAT);\r\n                    }\r\n                    else if(viewType === ViewTypes.Month){\r\n                        this.startDate = this.localeMoment(date).startOf('month').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('month').format(DATE_FORMAT);\r\n                    }\r\n                    else if(viewType === ViewTypes.Quarter){\r\n                        this.startDate = this.localeMoment(date).startOf('quarter').format(DATE_FORMAT);\r\n                        this.endDate = this.localeMoment(this.startDate).endOf('quarter').format(DATE_FORMAT);\r\n                    }\r\n                }\r\n\r\n                this.viewType = viewType;\r\n            }\r\n\r\n            this.events = [];\r\n            this._createHeaders();\r\n            this._createRenderData();\r\n            this.setScrollToSpecialMoment(true);\r\n        }\r\n    }\r\n\r\n    setSchedulerMaxHeight(newSchedulerMaxHeight){\r\n        this.config.schedulerMaxHeight = newSchedulerMaxHeight;\r\n    }\r\n\r\n    isSchedulerResponsive() {\r\n        return !!this.config.schedulerWidth.endsWith && this.config.schedulerWidth.endsWith(\"%\");\r\n    }\r\n\r\n    toggleExpandStatus(slotId) {\r\n        let slotEntered = false;\r\n        let slotIndent = -1;\r\n        let isExpanded = false;\r\n        let expandedMap = new Map();\r\n        this.renderData.forEach((item) => {\r\n            if(slotEntered === false) {\r\n                if(item.slotId === slotId && item.hasChildren) {\r\n                    slotEntered = true;\r\n                    \r\n                    isExpanded = !item.expanded;\r\n                    item.expanded = isExpanded;\r\n                    slotIndent = item.indent;\r\n                    expandedMap.set(item.indent, {\r\n                        expanded: item.expanded,\r\n                        render: item.render,\r\n                    });\r\n                }\r\n            } else {\r\n                if(item.indent > slotIndent) {\r\n                    let expandStatus = expandedMap.get(item.indent - 1);\r\n                    item.render = expandStatus.expanded && expandStatus.render;\r\n\r\n                    if(item.hasChildren) {\r\n                        expandedMap.set(item.indent, {\r\n                            expanded: item.expanded,\r\n                            render: item.render,\r\n                        });\r\n                    }\r\n                } else {\r\n                    slotEntered = false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    isResourceViewResponsive() {\r\n        let resourceTableWidth = this.getResourceTableConfigWidth();\r\n        return !!resourceTableWidth.endsWith && resourceTableWidth.endsWith(\"%\");\r\n    }\r\n\r\n    isContentViewResponsive() {\r\n        let contentCellWidth = this.getContentCellConfigWidth();\r\n        return !!contentCellWidth.endsWith && contentCellWidth.endsWith(\"%\");\r\n    }\r\n\r\n    getSchedulerWidth() {\r\n        let baseWidth = this.documentWidth - this.config.besidesWidth > 0 ? this.documentWidth - this.config.besidesWidth : 0;\r\n        return this.isSchedulerResponsive() ? parseInt(baseWidth * Number(this.config.schedulerWidth.slice(0,-1)) / 100) : this.config.schedulerWidth;\r\n    }    \r\n\r\n    getResourceTableWidth() {\r\n        let resourceTableConfigWidth = this.getResourceTableConfigWidth();\r\n        let schedulerWidth = this.getSchedulerWidth();\r\n        let resourceTableWidth = this.isResourceViewResponsive() ? parseInt(schedulerWidth * Number(resourceTableConfigWidth.slice(0,-1)) / 100)\r\n            : resourceTableConfigWidth;\r\n        if(this.isSchedulerResponsive() && ( this.getContentTableWidth() + resourceTableWidth < schedulerWidth ))\r\n            resourceTableWidth = schedulerWidth - this.getContentTableWidth();\r\n        return resourceTableWidth;\r\n    }\r\n\r\n    getContentCellWidth(){\r\n        let contentCellConfigWidth = this.getContentCellConfigWidth();\r\n        let schedulerWidth = this.getSchedulerWidth();\r\n        return this.isContentViewResponsive() ? parseInt(schedulerWidth * Number(contentCellConfigWidth.slice(0,-1)) / 100) : contentCellConfigWidth;\r\n    }    \r\n\r\n    getContentTableWidth(){\r\n        return this.headers.length * (this.getContentCellWidth());\r\n    }\r\n\r\n    getScrollToSpecialMoment(){\r\n        if(this.config.scrollToSpecialMomentEnabled)\r\n            return this.scrollToSpecialMoment;\r\n        return false;\r\n    }\r\n\r\n    getSlots(){\r\n        return this.isEventPerspective ? this.eventGroups : this.resources;\r\n    }\r\n\r\n    getSlotById(slotId){\r\n        let slots = this.getSlots();\r\n        let slot = undefined;\r\n        slots.forEach((item) => {\r\n            if(item.id === slotId)\r\n                slot = item;\r\n        })\r\n        return slot;\r\n    }\r\n\r\n    getResourceById(resourceId){\r\n        let resource = undefined;\r\n        this.resources.forEach((item) => {\r\n            if(item.id === resourceId)\r\n                resource = item;\r\n        })\r\n        return resource;\r\n    }\r\n\r\n    getTableHeaderHeight() {\r\n        return this.config.tableHeaderHeight;\r\n    }\r\n\r\n    getSchedulerContentDesiredHeight() {\r\n        let height = 0;\r\n        this.renderData.forEach((item) => {\r\n            if(item.render)\r\n                height += item.rowHeight;\r\n        });\r\n        return height;\r\n    }\r\n\r\n    getCellMaxEvents(){\r\n        return this.viewType === ViewTypes.Week ? this.config.weekMaxEvents : (\r\n            this.viewType === ViewTypes.Day ? this.config.dayMaxEvents : (\r\n                this.viewType === ViewTypes.Month ? this.config.monthMaxEvents : (\r\n                    this.viewType === ViewTypes.Year ? this.config.yearMaxEvents : (\r\n                        this.viewType === ViewTypes.Quarter ? this.config.quarterMaxEvents : \r\n                            this.config.customMaxEvents\r\n                    )\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    getDateLabel(){\r\n        let start = this.localeMoment(this.startDate);\r\n        let end = this.localeMoment(this.endDate);\r\n        let dateLabel = start.format('LL');\r\n\r\n        if(start != end)\r\n            dateLabel = `${start.format('LL')}-${end.format('LL')}`;\r\n\r\n        if(!!this.behaviors.getDateLabelFunc)\r\n            dateLabel = this.behaviors.getDateLabelFunc(this, this.viewType, this.startDate, this.endDate);\r\n\r\n        return dateLabel;\r\n    }\r\n\r\n    addEvent(newEvent){\r\n        this._attachEvent(newEvent);\r\n        if(this.eventGroupsAutoGenerated)\r\n            this._generateEventGroups();\r\n        this._createRenderData();\r\n    }\r\n\r\n    updateEventStart(event, newStart) {\r\n        this._detachEvent(event);\r\n        event.start = newStart;\r\n        this._attachEvent(event);\r\n        this._createRenderData();\r\n    }\r\n\r\n    updateEventEnd(event, newEnd) {\r\n        event.end = newEnd;\r\n        this._createRenderData();\r\n    }\r\n\r\n    moveEvent(event, newSlotId, newSlotName, newStart, newEnd){\r\n        this._detachEvent(event);\r\n        if(this.isEventPerspective) {\r\n            event.groupId = newSlotId;\r\n            event.groupName = newSlotName;\r\n        }\r\n        else\r\n            event.resourceId = newSlotId;\r\n        event.end = newEnd;\r\n        event.start = newStart;\r\n        this._attachEvent(event);\r\n        this._createRenderData();\r\n    }\r\n\r\n    isEventInTimeWindow(eventStart, eventEnd, windowStart, windowEnd) {\r\n        return eventStart < windowEnd && eventEnd >windowStart;\r\n    }\r\n\r\n    removeEvent(event) {\r\n        let index = this.events.indexOf(event);\r\n        if(index !== -1) {\r\n            this.events.splice(index, 1);\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    removeEventById(eventId) {\r\n        let index = -1;\r\n        this.events.forEach((item, idx) => {\r\n            if(item.id === eventId)\r\n                index = idx;\r\n        })\r\n        if(index !== -1) {\r\n            this.events.splice(index, 1);\r\n            this._createRenderData();\r\n        }\r\n    }\r\n\r\n    getResourceTableConfigWidth() {\r\n        if(this.showAgenda) return this.config.agendaResourceTableWidth;\r\n\r\n        return this.viewType === ViewTypes.Week ? this.config.weekResourceTableWidth : (\r\n            this.viewType === ViewTypes.Day ? this.config.dayResourceTableWidth : (\r\n                this.viewType === ViewTypes.Month ? this.config.monthResourceTableWidth : (\r\n                    this.viewType === ViewTypes.Year ? this.config.yearResourceTableWidth : (\r\n                        this.viewType === ViewTypes.Quarter ? this.config.quarterResourceTableWidth : \r\n                            this.config.customResourceTableWidth\r\n                    )\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    getContentCellConfigWidth() {\r\n        return this.viewType === ViewTypes.Week ? this.config.weekCellWidth : (\r\n            this.viewType === ViewTypes.Day ? this.config.dayCellWidth : (\r\n                this.viewType === ViewTypes.Month ? this.config.monthCellWidth : (\r\n                    this.viewType === ViewTypes.Year ? this.config.yearCellWidth : (\r\n                        this.viewType === ViewTypes.Quarter ? this.config.quarterCellWidth : \r\n                            this.config.customCellWidth\r\n                    )\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    _setDocumentWidth(documentWidth) {\r\n        if(documentWidth >= 0) {\r\n            this.documentWidth = documentWidth;\r\n        }\r\n    }\r\n\r\n    _detachEvent(event) {\r\n        let index = this.events.indexOf(event);\r\n        if(index !== -1)\r\n            this.events.splice(index, 1);\r\n    }\r\n\r\n    _attachEvent(event) {\r\n        let pos = 0;\r\n        let eventStart = this.localeMoment(event.start);\r\n        this.events.forEach((item, index) => {\r\n            let start = this.localeMoment(item.start);\r\n            if(eventStart >= start)\r\n                pos = index + 1;\r\n        });\r\n        this.events.splice(pos, 0, event);\r\n    }\r\n\r\n    _handleRecurringEvents(){\r\n        let recurringEvents = this.events.filter(x => !!x.rrule);\r\n        recurringEvents.forEach((item) => {\r\n            this._detachEvent(item);\r\n        });\r\n        \r\n        recurringEvents.forEach((item) => {\r\n            let windowStart = this.localeMoment(this.startDate),\r\n                windowEnd = this.localeMoment(this.endDate).add(1, 'days'),\r\n                oldStart = this.localeMoment(item.start),\r\n                oldEnd = this.localeMoment(item.end),\r\n                rule = rrulestr(item.rrule),\r\n                oldDtstart = undefined;\r\n            if(!!rule.origOptions.dtstart) {\r\n                oldDtstart = this.localeMoment(rule.origOptions.dtstart);\r\n            }\r\n            //rule.origOptions.dtstart = oldStart.toDate();\r\n            if(!rule.origOptions.until || windowEnd < this.localeMoment(rule.origOptions.until)) {\r\n                rule.origOptions.until = windowEnd.toDate();\r\n            }\r\n                \r\n            //reload\r\n            rule = rrulestr(rule.toString());\r\n            if (item.exdates || item.exrule)\r\n            {\r\n                const rruleSet = new RRuleSet()    \r\n                rruleSet.rrule(rule); \r\n                if(item.exrule) {\r\n                    rruleSet.exrule(rrulestr(item.exrule));\r\n                }\r\n                if(item.exdates) {\r\n                    item.exdates.forEach((exdate) => \r\n                    {\r\n                        rruleSet.exdate(this.localeMoment(exdate).toDate());\r\n                    });\r\n                }\r\n                rule = rruleSet;\r\n            }\r\n            \r\n            let all = rule.all();\r\n            let newEvents = all.map((time, index) => {\r\n                return {\r\n                    ...item,\r\n                    recurringEventId: item.id,\r\n                    recurringEventStart: item.start,\r\n                    recurringEventEnd: item.end,\r\n                    id: `${item.id}-${index}`,\r\n                    start: rule.origOptions.tzid\r\n                      ? this.localeMoment.utc(time).utcOffset(this.localeMoment().utcOffset(), true).format(DATETIME_FORMAT)\r\n                      : this.localeMoment(time).format(DATETIME_FORMAT),\r\n                    end: rule.origOptions.tzid\r\n                      ? this.localeMoment.utc(time).utcOffset(this.localeMoment().utcOffset(), true).add(oldEnd.diff(oldStart), 'ms').format(DATETIME_FORMAT)\r\n                      : this.localeMoment(time).add(oldEnd.diff(oldStart), 'ms').format(DATETIME_FORMAT)\r\n                };\r\n            });\r\n            newEvents.forEach((newEvent) => {\r\n                let eventStart = this.localeMoment(newEvent.start),\r\n                    eventEnd = this.localeMoment(newEvent.end);\r\n                if(this.isEventInTimeWindow(eventStart, eventEnd, windowStart, windowEnd) && (!oldDtstart || eventStart >= oldDtstart)) {\r\n                    this._attachEvent(newEvent);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    _resolveDate(num, date = undefined){\r\n        if(date != undefined)\r\n            this.selectDate = this.localeMoment(date).format(DATE_FORMAT);\r\n\r\n        if(this.viewType === ViewTypes.Week) {\r\n            this.startDate = date != undefined ? this.localeMoment(date).startOf('week').format(DATE_FORMAT)\r\n                : this.localeMoment(this.startDate).add(num, 'weeks').format(DATE_FORMAT);\r\n            this.endDate = this.localeMoment(this.startDate).endOf('week').format(DATE_FORMAT);\r\n        }\r\n        else if(this.viewType === ViewTypes.Day) {\r\n            this.startDate = date != undefined ? this.selectDate\r\n                : this.localeMoment(this.startDate).add(num, 'days').format(DATE_FORMAT);\r\n            this.endDate = this.startDate;\r\n        }\r\n        else if(this.viewType === ViewTypes.Month) {\r\n            this.startDate = date != undefined ? this.localeMoment(date).startOf('month').format(DATE_FORMAT)\r\n                : this.localeMoment(this.startDate).add(num, 'months').format(DATE_FORMAT);\r\n            this.endDate = this.localeMoment(this.startDate).endOf('month').format(DATE_FORMAT);\r\n        }\r\n        else if(this.viewType === ViewTypes.Quarter) {\r\n            this.startDate = date != undefined ? this.localeMoment(date).startOf('quarter').format(DATE_FORMAT)\r\n                : this.localeMoment(this.startDate).add(num, 'quarters').format(DATE_FORMAT);\r\n            this.endDate = this.localeMoment(this.startDate).endOf('quarter').format(DATE_FORMAT);\r\n        }\r\n        else if(this.viewType === ViewTypes.Year) {\r\n            this.startDate = date != undefined ? this.localeMoment(date).startOf('year').format(DATE_FORMAT)\r\n                : this.localeMoment(this.startDate).add(num, 'years').format(DATE_FORMAT);\r\n            this.endDate = this.localeMoment(this.startDate).endOf('year').format(DATE_FORMAT);\r\n        }\r\n        else if(this.viewType === ViewTypes.Custom || this.viewType === ViewTypes.Custom1 || this.viewType === ViewTypes.Custom2) {\r\n            if(this.behaviors.getCustomDateFunc != undefined){\r\n                let customDate = this.behaviors.getCustomDateFunc(this, num, date);\r\n                this.startDate = customDate.startDate;\r\n                this.endDate = customDate.endDate;\r\n                if(!!customDate.cellUnit)\r\n                    this.cellUnit = customDate.cellUnit;\r\n            } else {\r\n                throw new Error('This is custom view type, set behaviors.getCustomDateFunc func to resolve the time window(startDate and endDate) yourself');\r\n            }\r\n        }\r\n    }\r\n\r\n    _createHeaders() {\r\n        let headers = [],\r\n            start = this.localeMoment(this.startDate),\r\n            end = this.localeMoment(this.endDate),\r\n            header = start;\r\n\r\n        if(this.showAgenda){\r\n            headers.push({time: header.format(DATETIME_FORMAT), nonWorkingTime: false});\r\n        }\r\n        else {\r\n            if (this.cellUnit === CellUnits.Hour) {\r\n                start = start.add(this.config.dayStartFrom, 'hours');\r\n                end = end.add(this.config.dayStopTo, 'hours');\r\n                header = start;\r\n\r\n                while (header >= start && header <= end) {\r\n                    let minuteSteps = this.getMinuteStepsInHour();\r\n                    for(let i=0; i<minuteSteps; i++){\r\n                        let hour = header.hour();\r\n                        if(hour >= this.config.dayStartFrom && hour <= this.config.dayStopTo) {\r\n                            let time = header.format(DATETIME_FORMAT);\r\n                            let nonWorkingTime = this.behaviors.isNonWorkingTimeFunc(this, time);\r\n                            headers.push({ time: time, nonWorkingTime: nonWorkingTime });\r\n                        }\r\n    \r\n                        header = header.add(this.config.minuteStep, 'minutes');\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (header >= start && header <= end) {\r\n                    let time = header.format(DATETIME_FORMAT);\r\n                    let dayOfWeek = header.weekday();\r\n                    if( this.config.displayWeekend || (dayOfWeek !== 0 && dayOfWeek !== 6))\r\n                    {\r\n                        let nonWorkingTime = this.behaviors.isNonWorkingTimeFunc(this, time);\r\n                        headers.push({ time: time, nonWorkingTime: nonWorkingTime });\r\n                    }\r\n\r\n                    header = header.add(1, 'days');\r\n                }\r\n            }\r\n        }\r\n\r\n        this.headers = headers;\r\n    }\r\n\r\n    _createInitHeaderEvents(header) {\r\n        let start = this.localeMoment(header.time),\r\n            startValue = start.format(DATETIME_FORMAT);\r\n        let endValue = this.showAgenda ? (this.viewType === ViewTypes.Week ? start.add(1, 'weeks').format(DATETIME_FORMAT) : (\r\n            this.viewType === ViewTypes.Day ? start.add(1, 'days').format(DATETIME_FORMAT) : (\r\n                this.viewType === ViewTypes.Month ? start.add(1, 'months').format(DATETIME_FORMAT) : (\r\n                    this.viewType === ViewTypes.Year ? start.add(1, 'years').format(DATETIME_FORMAT) : (\r\n                        this.viewType === ViewTypes.Quarter ? start.add(1, 'quarters').format(DATETIME_FORMAT) :\r\n                            this.localeMoment(this.endDate).add(1, 'days').format(DATETIME_FORMAT)\r\n                    )\r\n                )\r\n            )\r\n        )) : (this.cellUnit === CellUnits.Hour ?  start.add(this.config.minuteStep, 'minutes').format(DATETIME_FORMAT)\r\n            : start.add(1, 'days').format(DATETIME_FORMAT));\r\n        return {\r\n            time:  header.time,\r\n            nonWorkingTime: header.nonWorkingTime,\r\n            start: startValue,\r\n            end:   endValue,\r\n            count: 0,\r\n            addMore: 0,\r\n            addMoreIndex: 0,\r\n            events: [,,,],\r\n        };\r\n    }\r\n\r\n    _createHeaderEvent(render, span, eventItem) {\r\n        return {\r\n            render: render,\r\n            span: span,\r\n            eventItem: eventItem\r\n        };\r\n    }\r\n\r\n    _getEventSlotId(event){\r\n        return this.isEventPerspective ? this._getEventGroupId(event) : event.resourceId;\r\n    }\r\n\r\n    _getEventGroupId(event){\r\n        return !!event.groupId ? event.groupId.toString() : event.id.toString();\r\n    }\r\n\r\n    _getEventGroupName(event){\r\n        return !!event.groupName ? event.groupName : event.title;\r\n    }\r\n\r\n    _generateEventGroups(){\r\n        let eventGroups = [];\r\n        let set = new Set();\r\n        this.events.forEach((item) => {\r\n            let groupId = this._getEventGroupId(item);\r\n            let groupName = this._getEventGroupName(item);\r\n\r\n            if(!set.has(groupId)){\r\n                eventGroups.push({\r\n                    id: groupId,\r\n                    name: groupName,\r\n                    state: item,\r\n                });\r\n                set.add(groupId);\r\n            }\r\n        })\r\n        this.eventGroups = eventGroups;\r\n    }\r\n\r\n    _createInitRenderData(isEventPerspective, eventGroups, resources, headers) {\r\n        let slots = isEventPerspective ? eventGroups : resources;\r\n        let slotTree = [],\r\n            slotMap = new Map();\r\n        slots.forEach((slot) => {\r\n            let headerEvents = headers.map((header) => {\r\n                return this._createInitHeaderEvents(header);\r\n            });\r\n\r\n            let slotRenderData = {\r\n                slotId: slot.id,\r\n                slotName: slot.name,\r\n                parentId: slot.parentId,\r\n                groupOnly: slot.groupOnly,\r\n                hasSummary: false,\r\n                rowMaxCount: 0,\r\n                rowHeight: this.config.nonAgendaSlotMinHeight !== 0 ? this.config.nonAgendaSlotMinHeight : this.config.eventItemLineHeight + 2,\r\n                headerItems: headerEvents,\r\n                indent: 0,\r\n                hasChildren: false,\r\n                expanded: true,\r\n                render: true,\r\n            };\r\n            let id = slot.id;\r\n            let value = undefined;\r\n            if(slotMap.has(id)) {\r\n                value = slotMap.get(id);\r\n                value.data = slotRenderData;\r\n            } else {\r\n                value = {\r\n                    data: slotRenderData,\r\n                    children: [],\r\n                };\r\n                slotMap.set(id, value);\r\n            }\r\n\r\n            let parentId = slot.parentId;\r\n            if(!parentId || parentId === id) {\r\n                slotTree.push(value);\r\n            } else {\r\n                let parentValue = undefined;\r\n                if(slotMap.has(parentId)) {\r\n                    parentValue = slotMap.get(parentId);\r\n                } else {\r\n                    parentValue = {\r\n                        data: undefined,\r\n                        children: [],\r\n                    };\r\n                    slotMap.set(parentId, parentValue);\r\n                }\r\n\r\n                parentValue.children.push(value);\r\n            }\r\n        });\r\n\r\n        let slotStack = [];\r\n        let i;\r\n        for(i=slotTree.length-1; i>=0; i--) {\r\n            slotStack.push(slotTree[i]);\r\n        }\r\n        let initRenderData = [];\r\n        let currentNode = undefined;\r\n        while(slotStack.length > 0) {\r\n            currentNode = slotStack.pop();\r\n            if(currentNode.data.indent > 0) {\r\n                currentNode.data.render = this.config.defaultExpanded;\r\n            }\r\n            if(currentNode.children.length > 0) {\r\n                currentNode.data.hasChildren = true;\r\n                currentNode.data.expanded = this.config.defaultExpanded;\r\n            }\r\n            initRenderData.push(currentNode.data);\r\n            \r\n            for(i=currentNode.children.length -1; i>=0; i--) {\r\n                currentNode.children[i].data.indent = currentNode.data.indent + 1;\r\n                slotStack.push(currentNode.children[i]);\r\n            }\r\n        }\r\n\r\n        return initRenderData;\r\n    }\r\n\r\n    _getSpan(startTime, endTime, headers){\r\n        if(this.showAgenda) return 1;\r\n\r\n        let start = this.localeMoment(startTime),\r\n            end = this.localeMoment(endTime),\r\n            span = 0;\r\n\r\n        for(let header of headers) {\r\n            let spanStart = this.localeMoment(header.time),\r\n            spanEnd = this.cellUnit === CellUnits.Hour ? this.localeMoment(header.time).add(this.config.minuteStep, 'minutes') \r\n                : this.localeMoment(header.time).add(1, 'days');\r\n            \r\n                if(spanStart < end && spanEnd > start) {\r\n                    span++;\r\n                }\r\n        }\r\n\r\n        return span;\r\n    }\r\n\r\n    _validateResource(resources){\r\n        if(Object.prototype.toString.call(resources) !== \"[object Array]\") {\r\n            throw new Error('Resources should be Array object');\r\n        }\r\n\r\n        resources.forEach((item, index) => {\r\n            if(item == undefined) {\r\n                console.error(`Resource undefined: ${index}`);\r\n                throw new Error(`Resource undefined: ${index}`);\r\n            }\r\n            if(item.id == undefined || item.name == undefined)\r\n            {\r\n                console.error('Resource property missed', index, item);\r\n                throw new Error(`Resource property undefined: ${index}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    _validateEventGroups(eventGroups){\r\n        if(Object.prototype.toString.call(eventGroups) !== \"[object Array]\") {\r\n            throw new Error('Event groups should be Array object');\r\n        }\r\n\r\n        eventGroups.forEach((item, index) => {\r\n            if(item == undefined) {\r\n                console.error(`Event group undefined: ${index}`);\r\n                throw new Error(`Event group undefined: ${index}`);\r\n            }\r\n            if(item.id == undefined || item.name == undefined)\r\n            {\r\n                console.error('Event group property missed', index, item);\r\n                throw new Error(`Event group property undefined: ${index}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    _validateEvents(events){\r\n        if(Object.prototype.toString.call(events) !== \"[object Array]\") {\r\n            throw new Error('Events should be Array object');\r\n        }\r\n\r\n        events.forEach((e, index) => {\r\n            if(e == undefined) {\r\n                console.error(`Event undefined: ${index}`);\r\n                throw new Error(`Event undefined: ${index}`);\r\n            }\r\n            if(e.id == undefined || e.resourceId == undefined || e.title == undefined || e.start == undefined || e.end == undefined)\r\n            {\r\n                console.error('Event property missed', index, e);\r\n                throw new Error(`Event property undefined: ${index}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    _validateMinuteStep(minuteStep) {\r\n        if (60 % minuteStep !== 0) {\r\n            console.error('Minute step is not set properly - 60 minutes must be divisible without remainder by this number');\r\n            throw new Error('Minute step is not set properly - 60 minutes must be divisible without remainder by this number');\r\n        }\r\n    }\r\n\r\n    _compare(event1, event2){\r\n        let start1 = this.localeMoment(event1.start), start2 = this.localeMoment(event2.start);\r\n        if(start1 !== start2) return start1 < start2 ? -1 : 1;\r\n\r\n        let end1 = this.localeMoment(event1.end), end2 = this.localeMoment(event2.end);\r\n        if(end1 !== end2) return end1 < end2 ? -1 : 1;\r\n\r\n        return event1.id < event2.id ? -1 : 1;\r\n    }\r\n\r\n    _createRenderData() {\r\n        let initRenderData = this._createInitRenderData(this.isEventPerspective, this.eventGroups, this.resources, this.headers);\r\n        //this.events.sort(this._compare);\r\n        let cellMaxEventsCount = this.getCellMaxEvents();        \r\n        const cellMaxEventsCountValue = 30;\r\n\r\n        this.events.forEach((item) => {\r\n            let resourceEventsList = initRenderData.filter(x => x.slotId === this._getEventSlotId(item));\r\n            if(resourceEventsList.length > 0) {\r\n                let resourceEvents = resourceEventsList[0];\r\n                let span = this._getSpan(item.start, item.end, this.headers);\r\n                let eventStart = this.localeMoment(item.start), eventEnd = this.localeMoment(item.end);\r\n                let pos = -1;\r\n\r\n                resourceEvents.headerItems.forEach((header, index) => {\r\n                    let headerStart = this.localeMoment(header.start), headerEnd = this.localeMoment(header.end);\r\n                    if(headerEnd > eventStart && headerStart < eventEnd) {\r\n                        header.count = header.count + 1;\r\n                        if(header.count > resourceEvents.rowMaxCount) {\r\n                            resourceEvents.rowMaxCount = header.count;\r\n                            let rowsCount = (cellMaxEventsCount <= cellMaxEventsCountValue && resourceEvents.rowMaxCount > cellMaxEventsCount) ? cellMaxEventsCount : resourceEvents.rowMaxCount;\r\n                            let newRowHeight = rowsCount * this.config.eventItemLineHeight + (this.config.creatable && this.config.checkConflict === false ? 20 : 2);\r\n                            if(newRowHeight > resourceEvents.rowHeight)\r\n                                resourceEvents.rowHeight = newRowHeight;\r\n                        }\r\n\r\n                        if(pos === -1)\r\n                        {\r\n                            let tmp = 0;\r\n                            while (header.events[tmp] !== undefined)\r\n                                tmp++;\r\n\r\n                            pos = tmp;\r\n                        }\r\n                        let render = headerStart <= eventStart || index === 0;\r\n                        if(render === false){\r\n                            let previousHeader = resourceEvents.headerItems[index - 1];\r\n                            let previousHeaderStart = this.localeMoment(previousHeader.start), previousHeaderEnd = this.localeMoment(previousHeader.end);\r\n                            if(previousHeaderEnd <= eventStart || previousHeaderStart >= eventEnd)\r\n                                render = true;\r\n                        }\r\n                        header.events[pos] = this._createHeaderEvent(render, span, item);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if(cellMaxEventsCount <= cellMaxEventsCountValue || this.behaviors.getSummaryFunc !== undefined) {\r\n            initRenderData.forEach((resourceEvents) => {\r\n                let hasSummary = false;\r\n\r\n                resourceEvents.headerItems.forEach((headerItem) => {\r\n                    if(cellMaxEventsCount <= cellMaxEventsCountValue) {\r\n                        let renderItemsCount = 0, addMoreIndex = 0, index = 0;\r\n                        while (index < cellMaxEventsCount - 1) {\r\n                            if(headerItem.events[index] !== undefined) {\r\n                                renderItemsCount++;\r\n                                addMoreIndex = index + 1;\r\n                            }\r\n        \r\n                            index++;\r\n                        }\r\n        \r\n                        if(headerItem.events[index] !== undefined) {\r\n                            if(renderItemsCount + 1 < headerItem.count) {\r\n                                headerItem.addMore = headerItem.count - renderItemsCount;\r\n                                headerItem.addMoreIndex = addMoreIndex;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if(renderItemsCount < headerItem.count) {\r\n                                headerItem.addMore = headerItem.count - renderItemsCount;\r\n                                headerItem.addMoreIndex = addMoreIndex;\r\n                            }\r\n                        }\r\n                    }                    \r\n    \r\n                    if(this.behaviors.getSummaryFunc !== undefined){\r\n                        let events = [];\r\n                        headerItem.events.forEach((e) => {\r\n                            if(!!e && !!e.eventItem)\r\n                                events.push(e.eventItem);\r\n                        });\r\n    \r\n                        headerItem.summary = this.behaviors.getSummaryFunc(this, events, resourceEvents.slotId, resourceEvents.slotName, headerItem.start, headerItem.end);\r\n                        if(!!headerItem.summary && headerItem.summary.text != undefined)\r\n                            hasSummary = true;\r\n                    }\r\n                });\r\n    \r\n                resourceEvents.hasSummary = hasSummary;\r\n                if(hasSummary) {\r\n                    let rowsCount = (cellMaxEventsCount <= cellMaxEventsCountValue && resourceEvents.rowMaxCount > cellMaxEventsCount) ? cellMaxEventsCount : resourceEvents.rowMaxCount;\r\n                    let newRowHeight = (rowsCount + 1) * this.config.eventItemLineHeight + (this.config.creatable && this.config.checkConflict === false ? 20 : 2);\r\n                    if(newRowHeight > resourceEvents.rowHeight)\r\n                        resourceEvents.rowHeight = newRowHeight;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.renderData = initRenderData;\r\n    }\r\n\r\n    _startResizing() {\r\n        this.resizing = true;\r\n    }\r\n\r\n    _stopResizing() {\r\n        this.resizing = false;\r\n    }\r\n\r\n    _isResizing() {\r\n        return this.resizing;\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/SchedulerView.js\";\nimport React from 'react';\nimport Scheduler, { SchedulerData, ViewTypes, DATE_FORMAT } from 'react-big-scheduler'; //include `react-big-scheduler/lib/css/style.css` for styles, link it in html or import it here\n\nimport 'react-big-scheduler/lib/css/style.css';\nimport moment from 'moment'; //2. create the view model, put it in the props obj\n\nlet schedulerData = new SchedulerData(new moment().format(DATE_FORMAT), ViewTypes.Week); //set locale moment to the schedulerData, if your locale isn't English. By default, Scheduler comes with English(en, United States).\n\nmoment.locale('zh-cn');\nschedulerData.setLocaleMoment(moment); //set resources here or later\n\nlet resources = [{\n  id: 'r1',\n  name: 'Resource1'\n}, {\n  id: 'r2',\n  name: 'Resource2'\n}, {\n  id: 'r3',\n  name: 'Resource3'\n}];\nschedulerData.setResources(resources); //set events here or later,\n//the event array should be sorted in ascending order by event.start property, otherwise there will be some rendering errors\n\nlet events = [{\n  id: 1,\n  start: '2017-12-18 09:30:00',\n  end: '2017-12-19 23:30:00',\n  resourceId: 'r1',\n  title: 'I am finished',\n  bgColor: '#D9D9D9'\n}, {\n  id: 2,\n  start: '2017-12-18 12:30:00',\n  end: '2017-12-26 23:30:00',\n  resourceId: 'r2',\n  title: 'I am not resizable',\n  resizable: false\n}, {\n  id: 3,\n  start: '2017-12-19 12:30:00',\n  end: '2017-12-20 23:30:00',\n  resourceId: 'r3',\n  title: 'I am not movable',\n  movable: false\n}, {\n  id: 4,\n  start: '2017-12-19 14:30:00',\n  end: '2017-12-20 23:30:00',\n  resourceId: 'r1',\n  title: 'I am not start-resizable',\n  startResizable: false\n}, {\n  id: 5,\n  start: '2017-12-19 15:30:00',\n  end: '2017-12-20 23:30:00',\n  resourceId: 'r2',\n  title: 'R2 has recurring tasks every week on Tuesday, Friday',\n  rrule: 'FREQ=WEEKLY;DTSTART=20171219T013000Z;BYDAY=TU,FR',\n  bgColor: '#f759ab'\n}];\nschedulerData.setEvents(events);\n\nclass ScheduleView extends Component {\n  render() {\n    const schedulerData = this.props.schedulerData;\n    return React.createElement(Scheduler, {\n      schedulerData: schedulerData,\n      prevClick: this.prevClick,\n      nextClick: this.nextClick,\n      onSelectDate: this.onSelectDate,\n      onViewChange: this.onViewChange,\n      eventItemClick: this.eventClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default ScheduleView;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/SchedulerView.js"],"names":["React","Scheduler","SchedulerData","ViewTypes","DATE_FORMAT","moment","schedulerData","format","Week","locale","setLocaleMoment","resources","id","name","setResources","events","start","end","resourceId","title","bgColor","resizable","movable","startResizable","rrule","setEvents","ScheduleView","Component","render","props","prevClick","nextClick","onSelectDate","onViewChange","eventClicked"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IACEC,aADF,EAEEC,SAFF,EAGEC,WAHF,QAIO,qBAJP,C,CAKA;;AACA,OAAO,uCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,IAAIC,aAAa,GAAG,IAAIJ,aAAJ,CAClB,IAAIG,MAAJ,GAAaE,MAAb,CAAoBH,WAApB,CADkB,EAElBD,SAAS,CAACK,IAFQ,CAApB,C,CAIA;;AACAH,MAAM,CAACI,MAAP,CAAc,OAAd;AACAH,aAAa,CAACI,eAAd,CAA8BL,MAA9B,E,CACA;;AACA,IAAIM,SAAS,GAAG,CACd;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADc,EAKd;AACED,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALc,EASd;AACED,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATc,CAAhB;AAcAP,aAAa,CAACQ,YAAd,CAA2BH,SAA3B,E,CACA;AACA;;AACA,IAAII,MAAM,GAAG,CACX;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEI,EAAAA,KAAK,EAAE,qBAFT;AAGEC,EAAAA,GAAG,EAAE,qBAHP;AAIEC,EAAAA,UAAU,EAAE,IAJd;AAKEC,EAAAA,KAAK,EAAE,eALT;AAMEC,EAAAA,OAAO,EAAE;AANX,CADW,EASX;AACER,EAAAA,EAAE,EAAE,CADN;AAEEI,EAAAA,KAAK,EAAE,qBAFT;AAGEC,EAAAA,GAAG,EAAE,qBAHP;AAIEC,EAAAA,UAAU,EAAE,IAJd;AAKEC,EAAAA,KAAK,EAAE,oBALT;AAMEE,EAAAA,SAAS,EAAE;AANb,CATW,EAiBX;AACET,EAAAA,EAAE,EAAE,CADN;AAEEI,EAAAA,KAAK,EAAE,qBAFT;AAGEC,EAAAA,GAAG,EAAE,qBAHP;AAIEC,EAAAA,UAAU,EAAE,IAJd;AAKEC,EAAAA,KAAK,EAAE,kBALT;AAMEG,EAAAA,OAAO,EAAE;AANX,CAjBW,EAyBX;AACEV,EAAAA,EAAE,EAAE,CADN;AAEEI,EAAAA,KAAK,EAAE,qBAFT;AAGEC,EAAAA,GAAG,EAAE,qBAHP;AAIEC,EAAAA,UAAU,EAAE,IAJd;AAKEC,EAAAA,KAAK,EAAE,0BALT;AAMEI,EAAAA,cAAc,EAAE;AANlB,CAzBW,EAiCX;AACEX,EAAAA,EAAE,EAAE,CADN;AAEEI,EAAAA,KAAK,EAAE,qBAFT;AAGEC,EAAAA,GAAG,EAAE,qBAHP;AAIEC,EAAAA,UAAU,EAAE,IAJd;AAKEC,EAAAA,KAAK,EAAE,sDALT;AAMEK,EAAAA,KAAK,EAAE,kDANT;AAOEJ,EAAAA,OAAO,EAAE;AAPX,CAjCW,CAAb;AA2CAd,aAAa,CAACmB,SAAd,CAAwBV,MAAxB;;AAEA,MAAMW,YAAN,SAA2BC,SAA3B,CAAqC;AACnCC,EAAAA,MAAM,GAAG;AAAA,UACCtB,aADD,GACmB,KAAKuB,KADxB,CACCvB,aADD;AAEP,WACE,oBAAC,SAAD;AACE,MAAA,aAAa,EAAEA,aADjB;AAEE,MAAA,SAAS,EAAE,KAAKwB,SAFlB;AAGE,MAAA,SAAS,EAAE,KAAKC,SAHlB;AAIE,MAAA,YAAY,EAAE,KAAKC,YAJrB;AAKE,MAAA,YAAY,EAAE,KAAKC,YALrB;AAME,MAAA,cAAc,EAAE,KAAKC,YANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAbkC;;AAgBrC,eAAeR,YAAf","sourcesContent":["import React from 'react';\nimport Scheduler, {\n  SchedulerData,\n  ViewTypes,\n  DATE_FORMAT\n} from 'react-big-scheduler';\n//include `react-big-scheduler/lib/css/style.css` for styles, link it in html or import it here\nimport 'react-big-scheduler/lib/css/style.css';\nimport moment from 'moment';\n\n//2. create the view model, put it in the props obj\nlet schedulerData = new SchedulerData(\n  new moment().format(DATE_FORMAT),\n  ViewTypes.Week\n);\n//set locale moment to the schedulerData, if your locale isn't English. By default, Scheduler comes with English(en, United States).\nmoment.locale('zh-cn');\nschedulerData.setLocaleMoment(moment);\n//set resources here or later\nlet resources = [\n  {\n    id: 'r1',\n    name: 'Resource1'\n  },\n  {\n    id: 'r2',\n    name: 'Resource2'\n  },\n  {\n    id: 'r3',\n    name: 'Resource3'\n  }\n];\nschedulerData.setResources(resources);\n//set events here or later,\n//the event array should be sorted in ascending order by event.start property, otherwise there will be some rendering errors\nlet events = [\n  {\n    id: 1,\n    start: '2017-12-18 09:30:00',\n    end: '2017-12-19 23:30:00',\n    resourceId: 'r1',\n    title: 'I am finished',\n    bgColor: '#D9D9D9'\n  },\n  {\n    id: 2,\n    start: '2017-12-18 12:30:00',\n    end: '2017-12-26 23:30:00',\n    resourceId: 'r2',\n    title: 'I am not resizable',\n    resizable: false\n  },\n  {\n    id: 3,\n    start: '2017-12-19 12:30:00',\n    end: '2017-12-20 23:30:00',\n    resourceId: 'r3',\n    title: 'I am not movable',\n    movable: false\n  },\n  {\n    id: 4,\n    start: '2017-12-19 14:30:00',\n    end: '2017-12-20 23:30:00',\n    resourceId: 'r1',\n    title: 'I am not start-resizable',\n    startResizable: false\n  },\n  {\n    id: 5,\n    start: '2017-12-19 15:30:00',\n    end: '2017-12-20 23:30:00',\n    resourceId: 'r2',\n    title: 'R2 has recurring tasks every week on Tuesday, Friday',\n    rrule: 'FREQ=WEEKLY;DTSTART=20171219T013000Z;BYDAY=TU,FR',\n    bgColor: '#f759ab'\n  }\n];\nschedulerData.setEvents(events);\n\nclass ScheduleView extends Component {\n  render() {\n    const { schedulerData } = this.props;\n    return (\n      <Scheduler\n        schedulerData={schedulerData}\n        prevClick={this.prevClick}\n        nextClick={this.nextClick}\n        onSelectDate={this.onSelectDate}\n        onViewChange={this.onViewChange}\n        eventItemClick={this.eventClicked}\n      />\n    );\n  }\n}\n\nexport default ScheduleView;\n"]},"metadata":{},"sourceType":"module"}
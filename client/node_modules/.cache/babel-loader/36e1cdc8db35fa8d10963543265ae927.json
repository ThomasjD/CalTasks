{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Cockpit/displayContent.js\";\nimport React, { Component, useContext } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from './Cockpit';\nimport Cockpit2 from './Cockpit2';\nimport Navbar2 from './Navbar/Navbar2';\nimport Tasks from '../ViewContent/Tasks/Tasks';\nimport TodayTasks from '../ViewContent/TodayTasks/TodayTasks';\nimport Lessons from '../ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContentOptions';\nimport NewTask from '../Creation/newTask';\nimport NewEvent from '../Creation/NewEvent';\nimport NewSyllabus from '../Creation/newSyllabus';\nimport SyllabusContext from '../../context/syllabusContext'; //const displayContent = this.props => {\n\nclass DisplayContent extends Component {\n  //const this.context = useContext(SyllabusContext);\n  render() {\n    let displayContent = null;\n\n    switch (this.props.everything.contentChoice) {\n      case '0':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Hello Thomas.... What would you like to see?\"), React.createElement(\"img\", {\n          className: classes.logoImage,\n          src: require('../../Assets/cockpitIcon.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }));\n        break;\n\n      case '1':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"tasks\\xA0has\\xA0#\\xA0\", this.props.everything.tasks.length), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Tasks, {\n          reRenderTasks: this.props.everything.reRenderTasks,\n          tasks: this.props.everything.tasks,\n          clicked: this.props.deleteTaskhandler,\n          changed: this.props.taskChangeHandler,\n          lastHeader: this.props.everything.lastHeader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n        break;\n\n      case '2':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(TodayTasks, {\n          reRenderTodayTasks: this.props.everything.reRenderTodayTasks,\n          monday: this.props.everything.Monday,\n          clicked: this.props.deleteTodayTaskhandler,\n          clicked: this.props.deleteTaskhandler,\n          changed: this.props.todayTaskChangeHandler,\n          lastTodayTasksHeader: this.props.everything.lastTodayTasksHeader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n        break;\n\n      case '3':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, this.context.everythingSyllabus.syllabusData ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"tasks has #\", ' ', this.context.everythingSyllabus.syllabusData.maxReact.length), React.createElement(Lessons, {\n          everything: this.props.everything,\n          lessons: this.context.everythingSyllabus.syllabusData.maxReact //changed={this.props.lessonChangeHandler}\n          //lastLessonHeader={\n          //   this.props.everythingSyllabus.syllabusData.lastLessonHeader\n          // }\n          ,\n          lessonsLength: this.context.everythingSyllabus.syllabusData.maxReact.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        })) : null);\n        /*\n        clicked={(event, index, handlerType) =>\n                  this.props.deleteLessonHandler(event, index, handlerType)\n                }\n        */\n\n        break;\n\n      case '4':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(NewTask, {\n          newestTask: this.props.newestTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }));\n        break;\n\n      case '5':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(NewEvent, {\n          newestEvent: this.props.newestEvent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }));\n        break;\n      //showLeftOverLessonsFromSyllabus: for Table Header (add/delete this lesson message)\n\n      case '6':\n        // while (!this.props.everythingSyllabus.syllabusData) {\n        //   console.log('still waiting');\n        //}\n        // function waitTillTrue() {\n        //   if (this.props.everythingSyllabus.syllabusData) {\n        //     console.log(this.props.everythingSyllabus.syllabusData.lastLessonHeader);\n        //   } else {\n        //     setTimeout(waitTillTrue, 900);\n        //   }\n        // }\n        if (this.props.everythingSyllabus.syllabusData) {\n          displayContent = React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, React.createElement(NewSyllabus, {\n            newestSyllabus: this.props.newestSyllabus,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }), this.context.everythingSyllabus.syllabusData.showLeftOverLessonsFromSyllabus ? React.createElement(Lessons, {\n            everything: this.props.everything // showLeftOverLessonsFromOrigSyllabus={\n            //   this.props.everythingSyllabus.syllabusData\n            //     .showLeftOverLessonsFromSyllabus\n            // }\n            ,\n            lessons: this.context.everythingSyllabus.syllabusData.maxReactWorkLeft // changed={(event, handlerType, id) =>\n            //   this.props.leftOverLessonChangeHandler(event, handlerType, id)\n            // }\n            ,\n            lastLessonHeader: this.context.everythingSyllabus.syllabusData.lastLessonHeader,\n            lessonsLength: this.context.everythingSyllabus.syllabusData.maxReactWorkLeft.length,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }) : null);\n        }\n        /*\n        clicked={(event, index) =>\n                  this.props.addLessonFromOriginalSyllabusHandler(event, index)\n                }\n        */\n\n\n        break;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, displayContent);\n  }\n\n}\n\nDisplayContent.contextType = SyllabusContext;\nexport default DisplayContent;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Cockpit/displayContent.js"],"names":["React","Component","useContext","classes","Cockpit","Cockpit2","Navbar2","Tasks","TodayTasks","Lessons","ViewContent","NewTask","NewEvent","NewSyllabus","SyllabusContext","DisplayContent","render","displayContent","props","everything","contentChoice","logoImage","require","tasks","length","reRenderTasks","deleteTaskhandler","taskChangeHandler","lastHeader","reRenderTodayTasks","Monday","deleteTodayTaskhandler","todayTaskChangeHandler","lastTodayTasksHeader","context","everythingSyllabus","syllabusData","maxReact","newestTask","newestEvent","newestSyllabus","showLeftOverLessonsFromSyllabus","maxReactWorkLeft","lastLessonHeader","contextType"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from './Cockpit';\nimport Cockpit2 from './Cockpit2';\nimport Navbar2 from './Navbar/Navbar2';\nimport Tasks from '../ViewContent/Tasks/Tasks';\nimport TodayTasks from '../ViewContent/TodayTasks/TodayTasks';\nimport Lessons from '../ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContentOptions';\nimport NewTask from '../Creation/newTask';\nimport NewEvent from '../Creation/NewEvent';\nimport NewSyllabus from '../Creation/newSyllabus';\nimport SyllabusContext from '../../context/syllabusContext';\n\n//const displayContent = this.props => {\nclass DisplayContent extends Component {\n  //const this.context = useContext(SyllabusContext);\n  static contextType = SyllabusContext;\n  render() {\n    let displayContent = null;\n\n    switch (this.props.everything.contentChoice) {\n      case '0':\n        displayContent = (\n          <React.Fragment>\n            <h3>Hello Thomas.... What would you like to see?</h3>\n            <img\n              className={classes.logoImage}\n              src={require('../../Assets/cockpitIcon.png')}\n            />\n          </React.Fragment>\n        );\n        break;\n\n      case '1':\n        displayContent = (\n          <React.Fragment>\n            <p>tasks has # {this.props.everything.tasks.length}</p>\n                        \n            <Tasks\n              reRenderTasks={this.props.everything.reRenderTasks}\n              tasks={this.props.everything.tasks}\n              clicked={this.props.deleteTaskhandler}\n              changed={this.props.taskChangeHandler}\n              lastHeader={this.props.everything.lastHeader}\n            />\n                      \n          </React.Fragment>\n        );\n        break;\n\n      case '2':\n        displayContent = (\n          <React.Fragment>\n                        \n            <TodayTasks\n              reRenderTodayTasks={this.props.everything.reRenderTodayTasks}\n              monday={this.props.everything.Monday}\n              clicked={this.props.deleteTodayTaskhandler}\n              clicked={this.props.deleteTaskhandler}\n              changed={this.props.todayTaskChangeHandler}\n              lastTodayTasksHeader={this.props.everything.lastTodayTasksHeader}\n            />\n                      \n          </React.Fragment>\n        );\n        break;\n\n      case '3':\n        displayContent = (\n          <React.Fragment>\n            {this.context.everythingSyllabus.syllabusData ? (\n              <div>\n                <p>\n                  tasks has #{' '}\n                  {this.context.everythingSyllabus.syllabusData.maxReact.length}\n                </p>\n\n                <Lessons\n                  everything={this.props.everything}\n                  lessons={\n                    this.context.everythingSyllabus.syllabusData.maxReact\n                  }\n                  //changed={this.props.lessonChangeHandler}\n                  //lastLessonHeader={\n                  //   this.props.everythingSyllabus.syllabusData.lastLessonHeader\n                  // }\n                  lessonsLength={\n                    this.context.everythingSyllabus.syllabusData.maxReact.length\n                  }\n                />\n              </div>\n            ) : null}\n          </React.Fragment>\n        );\n        /*\n      clicked={(event, index, handlerType) =>\n                  this.props.deleteLessonHandler(event, index, handlerType)\n                }\n      */\n\n        break;\n      case '4':\n        displayContent = (\n          <React.Fragment>\n            <NewTask newestTask={this.props.newestTask} />\n          </React.Fragment>\n        );\n        break;\n      case '5':\n        displayContent = (\n          <React.Fragment>\n            <NewEvent newestEvent={this.props.newestEvent} />\n          </React.Fragment>\n        );\n        break;\n      //showLeftOverLessonsFromSyllabus: for Table Header (add/delete this lesson message)\n\n      case '6':\n        // while (!this.props.everythingSyllabus.syllabusData) {\n        //   console.log('still waiting');\n        //}\n        // function waitTillTrue() {\n        //   if (this.props.everythingSyllabus.syllabusData) {\n        //     console.log(this.props.everythingSyllabus.syllabusData.lastLessonHeader);\n        //   } else {\n        //     setTimeout(waitTillTrue, 900);\n        //   }\n        // }\n\n        if (this.props.everythingSyllabus.syllabusData) {\n          displayContent = (\n            <React.Fragment>\n              <NewSyllabus newestSyllabus={this.props.newestSyllabus} />\n\n              {this.context.everythingSyllabus.syllabusData\n                .showLeftOverLessonsFromSyllabus ? (\n                <Lessons\n                  everything={this.props.everything}\n                  // showLeftOverLessonsFromOrigSyllabus={\n                  //   this.props.everythingSyllabus.syllabusData\n                  //     .showLeftOverLessonsFromSyllabus\n                  // }\n                  lessons={\n                    this.context.everythingSyllabus.syllabusData\n                      .maxReactWorkLeft\n                  }\n                  // changed={(event, handlerType, id) =>\n                  //   this.props.leftOverLessonChangeHandler(event, handlerType, id)\n                  // }\n                  lastLessonHeader={\n                    this.context.everythingSyllabus.syllabusData\n                      .lastLessonHeader\n                  }\n                  lessonsLength={\n                    this.context.everythingSyllabus.syllabusData\n                      .maxReactWorkLeft.length\n                  }\n                />\n              ) : null}\n            </React.Fragment>\n          );\n        }\n        /*\n      clicked={(event, index) =>\n                  this.props.addLessonFromOriginalSyllabusHandler(event, index)\n                }\n\n      */\n        break;\n    }\n\n    return <div>{displayContent}</div>;\n  }\n}\n\nexport default DisplayContent;\n"]},"metadata":{},"sourceType":"module"}
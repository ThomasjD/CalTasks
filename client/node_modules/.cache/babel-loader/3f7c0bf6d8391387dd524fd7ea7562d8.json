{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/RightCockpit/RightCockpit.js\";\nimport React, { Component } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport rightcockpitClasses from './RightCockpit.module.css';\nimport Cockpit from '../../components/Cockpit/Cockpit';\nimport Navbar from '../../components/Cockpit/Navbar/Navbar';\nimport Lessons from '../../components/ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContentOptions from '../../components/Cockpit/ViewContentOptions';\nimport NewTask from '../../components/Creation/newTask';\nimport DisplayContent from '../../components/Cockpit/displayContent';\nimport DatePickerPicker from './DatePicker.js';\nimport SyllabusContext from '../../context/syllabusContext';\nimport TasksDataContext from '../../context/tasksContext'; //import Layout from '../../hoc/Layout';\n\nimport NewEvent from '../../components/Creation/NewEvent';\nimport RightCockpitContext from '../../context/RightCockpitContext';\nimport WeeklyTimeBudget from '../../components/Creation/WeeklyTimeBudget/WeeklyTimeBudget';\n\nclass RightCockpit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [],\n      showEvents: false,\n      showDatePicker: false,\n      newTask: [],\n      newTaskTitle: '',\n      newTaskLocation: '',\n      numberOfGuests: 2,\n      contentChoice: '0',\n      showCockpit: true,\n      lastHeader: [],\n      lastTodayTasksHeader: [],\n      lastLessonHeader: [],\n      reRenderTasks: false,\n      syllabi: [],\n      contentChoiceHandlerTestNum: 7,\n      showLeftOverLessonsFromSyllabus: false\n    };\n\n    this.newTaskInfo2 = event => {\n      let newSyllabus = event.target.value;\n      const syllabi = this.state.syllabi;\n      syllabi.push(newSyllabus);\n      this.setState({\n        syllabi: syllabi\n      });\n      console.log(`this is this.state.syllabi after maxReact push ${JSON.stringify(this.state.syllabi, null, 2)}`);\n    };\n\n    this.contentViewHandler = event => {\n      let newViewChoice = event.target.value; //alert(`inside contentViewHandler ${newViewChoice}`);\n\n      this.setState({\n        contentChoice: newViewChoice\n      }); //Comparing new contentChoice with previous contentChoice\n      //if newContentChoice === oldContentChoice\n      //turn off the view\n      //alert(`contentChoice: ${this.state.contentChoice}`);\n\n      if (newViewChoice === this.state.contentChoice) {\n        return this.setState({\n          contentChoice: '0'\n        });\n      } else {\n        switch (newViewChoice) {\n          case '1':\n            //All tasks\n            //this.context.dataRequestHandler(event, 'tasks', '1', null, null);\n            break;\n\n          case '2':\n            //TodaysTasks\n            //this.context.dataRequestHandler(event, 'tasks', '2', null, null);\n            break;\n\n          case '3':\n            //Syllabus (for viewing List of syllabus\n            //reaching out to SyllabusData\n            //this.context.dataRequestHandler(event, 'syllabus', '1', null, null);\n            break;\n\n          case '4':\n            //view tasks for picked day\n            //this.context.dataRequestHandler(event, 'tasks', '', null, null);\n            break;\n\n          case '6':\n            //Adding Lessons from Syllabus\n            //this.context.dataRequestHandler(event, 'syllabus', '6', null, null);\n            //this.props.showLeftOverLessonsFromSyllabus();\n            break;\n\n          case '7':\n            //View MaxReact\n            //this.context.dataRequestHandler(event, 'syllabus', '8', null, null);\n            break;\n\n          case '8':\n            //newEvent submitForm, later change the typeOfData to event\n            // this.context.dataRequestHandler(\n            //   event,\n            //   'tasks',\n            //   '8',\n            //   'unAssignedTasksForWeek',\n            //   info\n            // );\n            break;\n\n          case '9':\n            //view tasks for picked day\n            // this.context.dataRequestHandler(event, 'tasks', '9', null, null);\n            // console.log('Inside case 9');\n            break;\n\n          case '11':\n            break;\n        }\n      }\n    };\n\n    this.viewRequestHandler = message => {\n      const event = message.event,\n            typeOfView = message.typeOfView,\n            viewHandlerChoice = message.viewHandlerChoice,\n            dataLocation = message.dataLocation,\n            dataHandlerChoice = message.dataHandlerChoice,\n            infoType = message.infoType,\n            info = message.info;\n      let newViewChoice = viewHandlerChoice;\n\n      if (newViewChoice === this.state.contentChoice) {\n        return this.setState({\n          contentChoice: '0'\n        });\n      } else {\n        switch (newViewChoice) {\n          case '1':\n            //All tasks\n            // this.context.dataRequestHandler(event, typeOfView, '1', null, null);\n            break;\n\n          case '2':\n            //TodaysTasks\n            // this.context.dataRequestHandler(event, typeOfView, '2', null, null);\n            break;\n\n          case '3':\n            //Syllabus (for viewing Syllabus)\n            //reaching out to SyllabusData\n            // this.context.dataRequestHandler(event, typeOfView, '1', null, null);\n            break;\n\n          case '4':\n            //newEvent submitForm, later change the typeOfData to event\n            // this.context.dataRequestHandler(\n            //   event,\n            //   typeOfView,\n            //   '8',\n            //   dataLocation,\n            //   null\n            // );\n            break;\n\n          case '6':\n            //Adding Lessons from Syllabus\n            // this.context.dataRequestHandler(event, typeOfView, '6', null, null);\n            //this.props.showLeftOverLessonsFromSyllabus();\n            break;\n\n          case '7':\n            // this.context.dataRequestHandler(event, typeOfView, '8', null, null);\n            //console.log('Inside case 7');\n            break;\n\n          case '8':\n            break;\n\n          case '9':\n            break;\n        }\n      }\n    };\n  }\n\n  //static contextType = SyllabusContext;\n  render() {\n    let leftCockpit = null;\n\n    if (this.state.showCockpit == true) {\n      leftCockpit = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Cockpit, {\n        title: this.props.appTitle,\n        deleteCockpit: () => {\n          this.setState({\n            showCockpit: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }));\n    }\n\n    let displayCockpit = React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-8 order-0 float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card bg-light m-3 p-3 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(DisplayContent, {\n      dataLocation: this.state.dataLocation,\n      contentViewHandler: event => this.contentViewHandler(event),\n      newestSyllabus: event => this.newestSyllabusHandler(event),\n      everything: this.state,\n      newestTaskHandler: event => this.newestTaskHandler(event),\n      newestEvent: event => this.newestEventHandler(event),\n      syllabusData: this.context.syllabusData,\n      contentChoice: this.state.contentChoice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row d-flex d-lg-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-4 order-1 float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card text-white bg-info m-3 p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, leftCockpit))));\n    let navbar = React.createElement(Navbar, {\n      newTaskInfoComing: event => this.newTaskHandler(event),\n      newTaskInfo2: event => this.newTaskHandler(event),\n      title: this.props.appTitle,\n      contentViewHandler: event => this.contentViewHandler(event),\n      deleteCockpit: () => {\n        this.setState({\n          showCockpit: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, this.props.newTaskInfoComing);\n    let viewContentOptions = React.createElement(ViewContentOptions, {\n      viewRequestHandler: event => this.viewRequestHandler(event),\n      contentViewHandler: event => this.contentViewHandler(event),\n      contentChoice: this.state.contentChoice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(RightCockpitContext.Provider, {\n      value: {\n        contentViewHandler: this.contentViewHandler,\n        newContentViewHandler: (contentChoice, info) => this.newContentViewHandler(contentChoice, info),\n        rightCockpitState: this.state\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, navbar, React.createElement(\"div\", {\n      className: \"rightcockpitClasses.deskTop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, viewContentOptions, React.createElement(WeeklyTimeBudget, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), displayCockpit)));\n  }\n\n}\n\nRightCockpit.contextType = TasksDataContext;\nexport default RightCockpit;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/RightCockpit/RightCockpit.js"],"names":["React","Component","classes","rightcockpitClasses","Cockpit","Navbar","Lessons","ViewContentOptions","NewTask","DisplayContent","DatePickerPicker","SyllabusContext","TasksDataContext","NewEvent","RightCockpitContext","WeeklyTimeBudget","RightCockpit","constructor","props","state","events","showEvents","showDatePicker","newTask","newTaskTitle","newTaskLocation","numberOfGuests","contentChoice","showCockpit","lastHeader","lastTodayTasksHeader","lastLessonHeader","reRenderTasks","syllabi","contentChoiceHandlerTestNum","showLeftOverLessonsFromSyllabus","newTaskInfo2","event","newSyllabus","target","value","push","setState","console","log","JSON","stringify","contentViewHandler","newViewChoice","viewRequestHandler","message","typeOfView","viewHandlerChoice","dataLocation","dataHandlerChoice","infoType","info","render","leftCockpit","appTitle","displayCockpit","newestSyllabusHandler","newestTaskHandler","newestEventHandler","context","syllabusData","navbar","newTaskHandler","newTaskInfoComing","viewContentOptions","newContentViewHandler","rightCockpitState","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport rightcockpitClasses from './RightCockpit.module.css';\nimport Cockpit from '../../components/Cockpit/Cockpit';\nimport Navbar from '../../components/Cockpit/Navbar/Navbar';\nimport Lessons from '../../components/ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContentOptions from '../../components/Cockpit/ViewContentOptions';\nimport NewTask from '../../components/Creation/newTask';\nimport DisplayContent from '../../components/Cockpit/displayContent';\nimport DatePickerPicker from './DatePicker.js';\nimport SyllabusContext from '../../context/syllabusContext';\nimport TasksDataContext from '../../context/tasksContext';\n//import Layout from '../../hoc/Layout';\nimport NewEvent from '../../components/Creation/NewEvent';\nimport RightCockpitContext from '../../context/RightCockpitContext';\nimport WeeklyTimeBudget from '../../components/Creation/WeeklyTimeBudget/WeeklyTimeBudget';\n\nclass RightCockpit extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    events: [],\n    showEvents: false,\n    showDatePicker: false,\n    newTask: [],\n    newTaskTitle: '',\n    newTaskLocation: '',\n    numberOfGuests: 2,\n    contentChoice: '0',\n    showCockpit: true,\n    lastHeader: [],\n    lastTodayTasksHeader: [],\n    lastLessonHeader: [],\n    reRenderTasks: false,\n    syllabi: [],\n    contentChoiceHandlerTestNum: 7,\n\n    showLeftOverLessonsFromSyllabus: false\n  };\n\n  newTaskInfo2 = event => {\n    let newSyllabus = event.target.value;\n\n    const syllabi = this.state.syllabi;\n    syllabi.push(newSyllabus);\n    this.setState({ syllabi: syllabi });\n    console.log(\n      `this is this.state.syllabi after maxReact push ${JSON.stringify(\n        this.state.syllabi,\n        null,\n        2\n      )}`\n    );\n  };\n\n  /*\n      console.log(newViewChoice);\n    console.log(JSON.stringify(newViewChoice, null, 2));\n    //console.log(event.target.['location'].value);\n\n    let maxReact2 = new Syllabus(\n      'maxReact2',\n      'maxReact22222',\n      '11asfd',\n      'Use this in fusfsasgnctions',\n      '11.Read allasf about this'\n    );\n\n    //if array is empty no need to use spread operator\n    const tryOutSyllabi = this.state.syllabi;\n\n    tryOutSyllabi.push(maxReact2);\n\n    this.setState({ syllabi: tryOutSyllabi });\n*/\n\n  contentViewHandler = event => {\n    let newViewChoice = event.target.value;\n    //alert(`inside contentViewHandler ${newViewChoice}`);\n    this.setState({ contentChoice: newViewChoice });\n\n    //Comparing new contentChoice with previous contentChoice\n    //if newContentChoice === oldContentChoice\n    //turn off the view\n    //alert(`contentChoice: ${this.state.contentChoice}`);\n    if (newViewChoice === this.state.contentChoice) {\n      return this.setState({ contentChoice: '0' });\n    } else {\n      switch (newViewChoice) {\n        case '1': //All tasks\n          //this.context.dataRequestHandler(event, 'tasks', '1', null, null);\n\n          break;\n\n        case '2': //TodaysTasks\n          //this.context.dataRequestHandler(event, 'tasks', '2', null, null);\n\n          break;\n\n        case '3': //Syllabus (for viewing List of syllabus\n          //reaching out to SyllabusData\n\n          //this.context.dataRequestHandler(event, 'syllabus', '1', null, null);\n\n          break;\n        case '4': //view tasks for picked day\n          //this.context.dataRequestHandler(event, 'tasks', '', null, null);\n          break;\n\n        case '6': //Adding Lessons from Syllabus\n          //this.context.dataRequestHandler(event, 'syllabus', '6', null, null);\n          //this.props.showLeftOverLessonsFromSyllabus();\n          break;\n        case '7': //View MaxReact\n          //this.context.dataRequestHandler(event, 'syllabus', '8', null, null);\n\n          break;\n        case '8': //newEvent submitForm, later change the typeOfData to event\n          // this.context.dataRequestHandler(\n          //   event,\n          //   'tasks',\n          //   '8',\n          //   'unAssignedTasksForWeek',\n          //   info\n          // );\n          break;\n        case '9': //view tasks for picked day\n          // this.context.dataRequestHandler(event, 'tasks', '9', null, null);\n          // console.log('Inside case 9');\n\n          break;\n        case '11':\n          break;\n      }\n    }\n  };\n\n  viewRequestHandler = message => {\n    const {\n      event,\n      typeOfView, //'syllabus', 'tasks', 'events'\n      viewHandlerChoice, //determines view only\n      dataLocation, //object location where it needs to locate to pull, change, or alter\n      dataHandlerChoice, //# representing the what will get done in database\n      infoType, //category of index,id,\n      info //the actual info\n    } = message;\n    let newViewChoice = viewHandlerChoice;\n\n    if (newViewChoice === this.state.contentChoice) {\n      return this.setState({ contentChoice: '0' });\n    } else {\n      switch (newViewChoice) {\n        case '1': //All tasks\n          // this.context.dataRequestHandler(event, typeOfView, '1', null, null);\n\n          break;\n\n        case '2': //TodaysTasks\n          // this.context.dataRequestHandler(event, typeOfView, '2', null, null);\n\n          break;\n\n        case '3': //Syllabus (for viewing Syllabus)\n          //reaching out to SyllabusData\n\n          // this.context.dataRequestHandler(event, typeOfView, '1', null, null);\n\n          break;\n        case '4': //newEvent submitForm, later change the typeOfData to event\n          // this.context.dataRequestHandler(\n          //   event,\n          //   typeOfView,\n          //   '8',\n          //   dataLocation,\n          //   null\n          // );\n          break;\n\n        case '6': //Adding Lessons from Syllabus\n          // this.context.dataRequestHandler(event, typeOfView, '6', null, null);\n          //this.props.showLeftOverLessonsFromSyllabus();\n          break;\n        case '7':\n          // this.context.dataRequestHandler(event, typeOfView, '8', null, null);\n          //console.log('Inside case 7');\n\n          break;\n        case '8':\n          break;\n        case '9':\n          break;\n      }\n    }\n  };\n  //static usually used in getDerivedStateFromProps\n  //static contextType = ShowAllTasksAfterAddingTask;\n  static contextType = TasksDataContext;\n  //static contextType = SyllabusContext;\n  render() {\n    let leftCockpit = null;\n    if (this.state.showCockpit == true) {\n      leftCockpit = (\n        <React.Fragment>\n          <Cockpit\n            title={this.props.appTitle}\n            deleteCockpit={() => {\n              this.setState({ showCockpit: false });\n            }}\n          />\n        </React.Fragment>\n      );\n    }\n\n    let displayCockpit = (\n      <div className=\"container\">\n        <div className=\"col-lg-8 order-0 float-left\">\n          <div className=\"card bg-light m-3 p-3 \">\n            {/* <NewEvent\n              contentViewHandler={this.contentViewHandler}\n              contentChoice={this.state.contentChoice}\n            /> */}\n\n            <DisplayContent\n              dataLocation={this.state.dataLocation}\n              contentViewHandler={event => this.contentViewHandler(event)}\n              newestSyllabus={event => this.newestSyllabusHandler(event)}\n              everything={this.state}\n              newestTaskHandler={event => this.newestTaskHandler(event)}\n              newestEvent={event => this.newestEventHandler(event)}\n              syllabusData={this.context.syllabusData}\n              contentChoice={this.state.contentChoice}\n            />\n          </div>\n        </div>\n\n        <div className=\"row d-flex d-lg-block\">\n          <div className=\"col-lg-4 order-1 float-left\">\n            <div className=\"card text-white bg-info m-3 p-3\">{leftCockpit}</div>\n          </div>\n        </div>\n      </div>\n    );\n\n    let navbar = (\n      <Navbar\n        newTaskInfoComing={event => this.newTaskHandler(event)}\n        newTaskInfo2={event => this.newTaskHandler(event)}\n        title={this.props.appTitle}\n        contentViewHandler={event => this.contentViewHandler(event)}\n        deleteCockpit={() => {\n          this.setState({ showCockpit: false });\n        }}\n      >\n        {this.props.newTaskInfoComing}\n      </Navbar>\n    );\n\n    let viewContentOptions = (\n      <ViewContentOptions\n        viewRequestHandler={event => this.viewRequestHandler(event)}\n        contentViewHandler={event => this.contentViewHandler(event)}\n        contentChoice={this.state.contentChoice}\n      />\n    );\n\n    return (\n      <React.Fragment>\n        <RightCockpitContext.Provider\n          value={{\n            contentViewHandler: this.contentViewHandler,\n            newContentViewHandler: (contentChoice, info) =>\n              this.newContentViewHandler(contentChoice, info),\n            rightCockpitState: this.state\n          }}\n        >\n          {navbar}\n          <div className=\"rightcockpitClasses.deskTop\">\n            {viewContentOptions}\n\n            <WeeklyTimeBudget />\n            {displayCockpit}\n          </div>\n        </RightCockpitContext.Provider>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RightCockpit;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Tasks/Tasks.js\";\nimport React, { PureComponent } from 'react';\nimport Task from './Task/Task';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\n\nclass Tasks extends PureComponent {\n  constructor(props) {\n    super(props);\n  } // static getDerivedStateFromProps(props, state) {\n  //     console.log('[Tasks] getDerivedStateFromProps')\n  //     return state\n  // }\n  //niche -removed\n  // componentWillReceiveProps(props) {\n  //    console.log('[Persons.js] componentWillReceiveProps', props); \n  // }\n\n  /*\n  shouldComponentUpdate (nextProps, nextState) {\n      console.log('[Tasks] shouldComponentUpdate')\n      //comparing if props have changed\n      if (nextProps.tasks !== this.props.tasks) {\n          return true\n      } else {\n          return false\n      }\n     \n  }\n  */\n\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log('[Tasks] getSnapshotBeforeUpdate');\n    return {\n      message: 'Snapshot'\n    };\n  } // componentWillUpdate() {\n  //     return \n  // }\n\n\n  componentDidUpdate(prevProps, prevState, message) {\n    console.log('[Tasks] componentDidUpdate');\n    console.log(message);\n  }\n\n  componentWillUnmount() {\n    console.log('[Tasks.js] componentWillUnmount');\n  }\n\n  render() {\n    console.log('[Tasks] rendering...');\n    return this.props.tasks.map((task, index) => {\n      return React.createElement(ErrorBoundary, {\n        key: task.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Task, {\n        todo: task.todo,\n        deadline: task.deadline,\n        location: task.location,\n        key: task.id,\n        click: () => this.props.clicked(index),\n        changed: event => this.props.changed(event, task.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Change Task (below)\"));\n    });\n  }\n\n}\n\nexport default Tasks;\n/* original functional component\n\nimport React from 'react'\nimport Task from './Task/Task'\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\n\nconst tasks = (props) => {\n\n    console.log('[Tasks.js] rendering')\n\n//get props from app.js, run through each element in state to feed into <Task>\n    //todo,deadline,location,key,click, changed sent to <Task>\nreturn props.tasks.map((task, index) => {\n    return (<ErrorBoundary key = {task.id}>\n    <Task \n    todo = {task.todo} \n    deadline = {task.deadline}\n    location = {task.location}\n    key = {task.id}\n    click = {() => props.clicked(index)}\n    changed = {(event) => props.changed (event, task.id)}>Change Task (below)</Task>\n    </ErrorBoundary>\n    )\n  })\n}\nexport default tasks;\n\n*/","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Tasks/Tasks.js"],"names":["React","PureComponent","Task","ErrorBoundary","Tasks","constructor","props","getSnapshotBeforeUpdate","prevProps","prevState","console","log","message","componentDidUpdate","componentWillUnmount","render","tasks","map","task","index","id","todo","deadline","location","clicked","event","changed"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAGA,MAAMC,KAAN,SAAoBH,aAApB,CAAkC;AAE9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH,GAJ6B,CAM9B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AAaAC,EAAAA,uBAAuB,CAAEC,SAAF,EAAaC,SAAb,EAAwB;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,WAAO;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAP;AACH,GAhC6B,CAkC9B;AACA;AACA;;;AAEAC,EAAAA,kBAAkB,CAACL,SAAD,EAAYC,SAAZ,EAAuBG,OAAvB,EAAgC;AAC9CF,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACH;;AAEDE,EAAAA,oBAAoB,GAAG;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAa,iCAAb;AACH;;AAEDI,EAAAA,MAAM,GAAI;AACNL,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEA,WAAO,KAAKL,KAAL,CAAWU,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC,aAAQ,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAID,IAAI,CAACE,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,oBAAC,IAAD;AACA,QAAA,IAAI,EAAIF,IAAI,CAACG,IADb;AAEA,QAAA,QAAQ,EAAIH,IAAI,CAACI,QAFjB;AAGA,QAAA,QAAQ,EAAIJ,IAAI,CAACK,QAHjB;AAIA,QAAA,GAAG,EAAIL,IAAI,CAACE,EAJZ;AAKA,QAAA,KAAK,EAAI,MAAM,KAAKd,KAAL,CAAWkB,OAAX,CAAmBL,KAAnB,CALf;AAMA,QAAA,OAAO,EAAKM,KAAD,IAAW,KAAKnB,KAAL,CAAWoB,OAAX,CAAoBD,KAApB,EAA2BP,IAAI,CAACE,EAAhC,CANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADQ,CAAR;AAUD,KAXI,CAAP;AAYC;;AA9DyB;;AAmElC,eAAehB,KAAf;AAQA","sourcesContent":["import React, {PureComponent} from 'react'\nimport Task from './Task/Task'\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\n\n\nclass Tasks extends PureComponent {\n\n    constructor(props) {\n        super(props)\n    }\n\n    // static getDerivedStateFromProps(props, state) {\n    //     console.log('[Tasks] getDerivedStateFromProps')\n    //     return state\n    // }\n\n    //niche -removed\n    // componentWillReceiveProps(props) {\n    //    console.log('[Persons.js] componentWillReceiveProps', props); \n    // }\n\n    /*\n    shouldComponentUpdate (nextProps, nextState) {\n        console.log('[Tasks] shouldComponentUpdate')\n        //comparing if props have changed\n        if (nextProps.tasks !== this.props.tasks) {\n            return true\n        } else {\n            return false\n        }\n       \n    }\n    */\n   \n    getSnapshotBeforeUpdate (prevProps, prevState) {\n        console.log('[Tasks] getSnapshotBeforeUpdate')\n        return {message: 'Snapshot'}\n    }\n\n    // componentWillUpdate() {\n    //     return \n    // }\n\n    componentDidUpdate(prevProps, prevState, message) {\n        console.log('[Tasks] componentDidUpdate')\n        console.log(message)\n    }\n\n    componentWillUnmount() {\n        console.log ('[Tasks.js] componentWillUnmount' )\n    }\n\n    render () {\n        console.log('[Tasks] rendering...')\n        \n        return this.props.tasks.map((task, index) => {\n            return (<ErrorBoundary key = {task.id}>\n            <Task \n            todo = {task.todo} \n            deadline = {task.deadline}\n            location = {task.location}\n            key = {task.id}\n            click = {() => this.props.clicked(index)}\n            changed = {(event) => this.props.changed (event, task.id)}>Change Task (below)</Task>\n            </ErrorBoundary>\n            )\n          })\n        } \n\n    }\n\n\nexport default Tasks;\n\n\n\n\n\n\n\n/* original functional component\n\nimport React from 'react'\nimport Task from './Task/Task'\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary'\n\nconst tasks = (props) => {\n\n    console.log('[Tasks.js] rendering')\n\n//get props from app.js, run through each element in state to feed into <Task>\n    //todo,deadline,location,key,click, changed sent to <Task>\nreturn props.tasks.map((task, index) => {\n    return (<ErrorBoundary key = {task.id}>\n    <Task \n    todo = {task.todo} \n    deadline = {task.deadline}\n    location = {task.location}\n    key = {task.id}\n    click = {() => props.clicked(index)}\n    changed = {(event) => props.changed (event, task.id)}>Change Task (below)</Task>\n    </ErrorBoundary>\n    )\n  })\n}\nexport default tasks;\n\n*/"]},"metadata":{},"sourceType":"module"}
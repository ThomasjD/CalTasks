{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Cockpit.js\";\nimport React, { useEffect } from 'react'; //import rocky from '../../containers/App.module.css'\n\nimport classNames from 'classnames';\nimport classes from './Cockpit.module.css';\n\nconst Cockpit = props => {\n  useEffect(() => {\n    //can do anything that componentDidUpdate can do\n    //can send http request here\n    console.log('[Cockpit.js] useffect'); //getting rid of timer\n\n    const timer = setTimeout(() => {\n      alert('Saved data to cloud');\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n      console.log('[Cockpit.js] cleanup work in useEffect');\n    };\n  });\n  /*\n    setTimeout(() => {\n      alert('Saved data to cloud')\n    }, 1000);\n    return () => { //don't have to have a return statement\n      console.log('[Cockpit.js] cleanup work in useEffect')\n    }\n  }, []); \n  */\n  //if 2nd argument [props.tasks] it doesn't involve tasks -> it won't run this again\n  //[props.tasks]\n\n  useEffect(() => {\n    console.log('[Cockpit.js] 2nd useEffect');\n    return () => {\n      console.log('[Cockpit.js] cleanup work in 2nd UseEffect');\n    };\n  }); //styling the 'Things to Do' using strings for classnames\n\n  const assignedClasses = [];\n  let btnClass = '';\n\n  switch (props.tasksLength) {\n    case 3:\n      assignedClasses.push('bold', 'red');\n      break;\n\n    case 2:\n      assignedClasses.push('red');\n      break;\n\n    case 1:\n      assignedClasses.push('orange');\n      break;\n\n    default:\n      assignedClasses.push('green');\n      break;\n  } //console.log(assignedClasses[0])\n  //add multiple classes for <p> w/ strings\n  //const classesFinal = classes.join(' ')\n\n\n  const classesFinal = 'rocky.' + assignedClasses; //console.log(classesFinal)\n  //console.log(`This is classesFinal ${classesFinal}`)\n\n  return React.createElement(\"div\", {\n    className: classes.Cockpit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.title), React.createElement(\"p\", {\n    className: classNames({\n      [classes[assignedClasses[0]]]: true,\n      [classes[assignedClasses[1]]]: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Things to Do!\"), React.createElement(\"div\", {\n    class: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: classes.specialbtn,\n    onClick: props.clicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Show Task\")), React.createElement(\"div\", {\n    class: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: props.todayClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Show Today Schedule\")))));\n}; //export default Cockpit;\n\n\nexport default React.memo(Cockpit); // </div>\n\n/* <React.Fragment>\n        <div>\n\n      \n        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        <label class=\"btn btn-secondary active\">\n          <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Active\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Radio\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Radio\n        </label>\n      </div>\n      </div>\n      </React.Fragment>     */\n\n/* Radio Buttons\n<React.Fragment>\n            <div>\n                <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <label class=\"btn btn-secondary active\">\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Today\n                    </label>\n                    <label class=\"btn btn-secondary\">\n                        <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Week\n                        </label>\n                <label class=\"btn btn-secondary\">\n                    <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Month\n                    </label>\n                </div>\n            </div>\n        </React.Fragment> \n*/","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Cockpit.js"],"names":["React","useEffect","classNames","classes","Cockpit","props","console","log","timer","setTimeout","alert","clearTimeout","assignedClasses","btnClass","tasksLength","push","classesFinal","title","specialbtn","clicked","todayClicked","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvBJ,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAHc,CAKd;;AACA,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAIA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD,KAHD;AAID,GAdQ,CAAT;AAgBA;;;;;;;;;AASA;AACA;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACD,KAFD;AAGD,GALQ,CAAT,CA7BuB,CAoCvB;;AACA,QAAMK,eAAe,GAAG,EAAxB;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,UAAQR,KAAK,CAACS,WAAd;AACE,SAAK,CAAL;AACEF,MAAAA,eAAe,CAACG,IAAhB,CAAqB,MAArB,EAA6B,KAA7B;AACA;;AACF,SAAK,CAAL;AACEH,MAAAA,eAAe,CAACG,IAAhB,CAAqB,KAArB;AACA;;AACF,SAAK,CAAL;AACEH,MAAAA,eAAe,CAACG,IAAhB,CAAqB,QAArB;AACA;;AACF;AACEH,MAAAA,eAAe,CAACG,IAAhB,CAAqB,OAArB;AACA;AAZJ,GAxCuB,CAuDvB;AACA;AACA;;;AACA,QAAMC,YAAY,GAAG,WAAWJ,eAAhC,CA1DuB,CA4DvB;AAEA;;AAEA,SACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAK,CAACY,KAAX,CADF,EAEE;AACE,IAAA,SAAS,EAAEf,UAAU,CAAC;AACpB,OAACC,OAAO,CAACS,eAAe,CAAC,CAAD,CAAhB,CAAR,GAA+B,IADX;AAEpB,OAACT,OAAO,CAACS,eAAe,CAAC,CAAD,CAAhB,CAAR,GAA+B;AAFX,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAUE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAET,OAAO,CAACe,UAA3B;AAAuC,IAAA,OAAO,EAAEb,KAAK,CAACc,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAOE;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEd,KAAK,CAACe,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAPF,CADF,CAVF,CADF;AA0BD,CA1FD,C,CA2FA;;;AAEA,eAAepB,KAAK,CAACqB,IAAN,CAAWjB,OAAX,CAAf,C,CAEA;;AACA;;;;;;;;;;;;;;;;;;AAkBA","sourcesContent":["import React, { useEffect } from 'react';\n//import rocky from '../../containers/App.module.css'\nimport classNames from 'classnames';\nimport classes from './Cockpit.module.css';\n\nconst Cockpit = props => {\n  useEffect(() => {\n    //can do anything that componentDidUpdate can do\n    //can send http request here\n    console.log('[Cockpit.js] useffect');\n\n    //getting rid of timer\n    const timer = setTimeout(() => {\n      alert('Saved data to cloud');\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n      console.log('[Cockpit.js] cleanup work in useEffect');\n    };\n  });\n\n  /*\n    setTimeout(() => {\n      alert('Saved data to cloud')\n    }, 1000);\n    return () => { //don't have to have a return statement\n      console.log('[Cockpit.js] cleanup work in useEffect')\n    }\n  }, []); \n  */\n  //if 2nd argument [props.tasks] it doesn't involve tasks -> it won't run this again\n  //[props.tasks]\n\n  useEffect(() => {\n    console.log('[Cockpit.js] 2nd useEffect');\n    return () => {\n      console.log('[Cockpit.js] cleanup work in 2nd UseEffect');\n    };\n  });\n\n  //styling the 'Things to Do' using strings for classnames\n  const assignedClasses = [];\n  let btnClass = '';\n\n  switch (props.tasksLength) {\n    case 3:\n      assignedClasses.push('bold', 'red');\n      break;\n    case 2:\n      assignedClasses.push('red');\n      break;\n    case 1:\n      assignedClasses.push('orange');\n      break;\n    default:\n      assignedClasses.push('green');\n      break;\n  }\n\n  //console.log(assignedClasses[0])\n  //add multiple classes for <p> w/ strings\n  //const classesFinal = classes.join(' ')\n  const classesFinal = 'rocky.' + assignedClasses;\n\n  //console.log(classesFinal)\n\n  //console.log(`This is classesFinal ${classesFinal}`)\n\n  return (\n    <div className={classes.Cockpit}>\n      <h1>{props.title}</h1>\n      <p\n        className={classNames({\n          [classes[assignedClasses[0]]]: true,\n          [classes[assignedClasses[1]]]: true\n        })}\n      >\n        Things to Do!\n      </p>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <button className={classes.specialbtn} onClick={props.clicked}>\n              Show Task\n            </button>\n          </div>\n\n          <div class=\"col-md-6\">\n            <button onClick={props.todayClicked}>Show Today Schedule</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n//export default Cockpit;\n\nexport default React.memo(Cockpit);\n\n// </div>\n/* <React.Fragment>\n        <div>\n\n      \n        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        <label class=\"btn btn-secondary active\">\n          <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Active\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Radio\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Radio\n        </label>\n      </div>\n      </div>\n      </React.Fragment>     */\n\n/* Radio Buttons\n<React.Fragment>\n            <div>\n                <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <label class=\"btn btn-secondary active\">\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Today\n                    </label>\n                    <label class=\"btn btn-secondary\">\n                        <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Week\n                        </label>\n                <label class=\"btn btn-secondary\">\n                    <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Month\n                    </label>\n                </div>\n            </div>\n        </React.Fragment> \n*/\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/PickedDayTasks/PickedDayTasks.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport PickedDayTask from './PickedDayTask/PickedDayTask';\nimport student from '../../../containers/Student.css';\nimport TasksContext from '../../../context/tasksContext';\n\nconst PickedDayTasks = props => {\n  const tasksContext = useContext(TasksContext);\n\n  const renderTableHeaderHandler = () => {\n    if (tasksContext.tasksData.tasksData) {\n      let header = Object.keys(tasksContext.tasksData.tasksData.pickedDayTasksHeader);\n      return header.map((key, index) => {\n        switch (key) {\n          case 'id':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 17\n              },\n              __self: this\n            }, \"Click\\xA0to\\xA0Delete\");\n            break;\n\n          case 'timeOfDay':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, \"Schedule Task\");\n            break;\n\n          case 'task':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n\n          case 'deadline':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n\n          case 'category':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n        }\n      });\n    }\n  }; //todayTaskChanged={props.changed}\n\n\n  const tasksOfSelectedDayHandler = () => {\n    //let dataLocation = tasksContext.dataRequestDetails.value;\n    //alert(`dataLocation: ${dataLocation}`);\n    if (tasksContext.tasksData.tasksData) {\n      let dataLocation = tasksContext.tasksData.tasksData.dataLocation;\n      alert(`Inside tasksOfSelectedDayHandler dataLocation: ${dataLocation}`); //\n\n      return tasksContext.tasksData.tasksData[dataLocation].map((day, index) => {\n        let functionChoiceDelete = null;\n        let functionChoiceChange = null; //const { id, task } = day;\n\n        if (props.everything.contentChoice === '2') {\n          functionChoiceDelete = '5';\n          functionChoiceChange = '6';\n        } else {\n          functionChoiceDelete = '7';\n          functionChoiceChange = '8';\n        }\n\n        return React.createElement(React.Fragment, {\n          key: day.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(PickedDayTask, {\n          id: day.id,\n          timeOfDay: day.timeOfDay,\n          task: day.task,\n          deleteTodayTask: props.clicked,\n          deadline: day.deadline,\n          category: day.category,\n          click: event => tasksContext.dataRequestHandler(event, 'tasks', functionChoiceDelete, 'index', index),\n          changed: event => tasksContext.dataRequestHandler(event, 'tasks', functionChoiceChange, 'id', day.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      });\n    }\n  }; // const [lastTaskHeader, setLastTaskHeader] = useState({\n  //   lastHeader: props.monday\n  // });\n  // useEffect(() => {\n  //   let dataLocation = props.dataLocation\n  //   // console.log(`this is the state of alert ${onCallDelete.signalAlert}`);\n  //   // if (onCallDelete.signalAlert === 'true') {\n  //   if (\n  //     tasksContext.tasksData.tasksData == true &&\n  //     tasksContext.tasksData.tasksData[dataLocation].length === 1\n  //   ) {\n  //     //let savedHeader = Object.keys(props.tasks[0]);\n  //     //let savedHeader = props.tasks\n  //     console.log(props.monday);\n  //     setLastTaskHeader({ lastHeader: props.monday });\n  //     console.log(`this is the last task alert ${lastTaskHeader.lastHeader}`);\n  //   }\n  //   if (props.reRenderTodayTasks === true) {\n  //     // alert('Are you sure you want to delete this task?');\n  //     //return (props.reRender = {})\n  //   }\n  // });\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \" Tasks for The Day\"), React.createElement(\"table\", {\n    id: \"students\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, renderTableHeaderHandler()), tasksOfSelectedDayHandler())));\n};\n\nexport default PickedDayTasks;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/PickedDayTasks/PickedDayTasks.js"],"names":["React","useState","useEffect","useContext","PickedDayTask","student","TasksContext","PickedDayTasks","props","tasksContext","renderTableHeaderHandler","tasksData","header","Object","keys","pickedDayTasksHeader","map","key","index","toUpperCase","tasksOfSelectedDayHandler","dataLocation","alert","day","functionChoiceDelete","functionChoiceChange","everything","contentChoice","id","timeOfDay","task","clicked","deadline","category","event","dataRequestHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PickedDayTask from './PickedDayTask/PickedDayTask';\nimport student from '../../../containers/Student.css';\nimport TasksContext from '../../../context/tasksContext';\n\nconst PickedDayTasks = props => {\n  const tasksContext = useContext(TasksContext);\n\n  const renderTableHeaderHandler = () => {\n    if (tasksContext.tasksData.tasksData) {\n      let header = Object.keys(\n        tasksContext.tasksData.tasksData.pickedDayTasksHeader\n      );\n      return header.map((key, index) => {\n        switch (key) {\n          case 'id':\n            return <th key={index}>Click to Delete</th>;\n            break;\n\n          case 'timeOfDay':\n            return <th key={index}>Schedule Task</th>;\n            break;\n\n          case 'task':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n\n          case 'deadline':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n\n          case 'category':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n        }\n      });\n    }\n  };\n  //todayTaskChanged={props.changed}\n  const tasksOfSelectedDayHandler = () => {\n    //let dataLocation = tasksContext.dataRequestDetails.value;\n    //alert(`dataLocation: ${dataLocation}`);\n    if (tasksContext.tasksData.tasksData) {\n      let dataLocation = tasksContext.tasksData.tasksData.dataLocation;\n      alert(`Inside tasksOfSelectedDayHandler dataLocation: ${dataLocation}`); //\n      return tasksContext.tasksData.tasksData[dataLocation].map(\n        (day, index) => {\n          let functionChoiceDelete = null;\n          let functionChoiceChange = null;\n\n          //const { id, task } = day;\n          if (props.everything.contentChoice === '2') {\n            functionChoiceDelete = '5';\n            functionChoiceChange = '6';\n          } else {\n            functionChoiceDelete = '7';\n            functionChoiceChange = '8';\n          }\n\n          return (\n            <React.Fragment key={day.id}>\n              <PickedDayTask\n                id={day.id}\n                timeOfDay={day.timeOfDay}\n                task={day.task}\n                deleteTodayTask={props.clicked}\n                deadline={day.deadline}\n                category={day.category}\n                click={event =>\n                  tasksContext.dataRequestHandler(\n                    event,\n                    'tasks',\n                    functionChoiceDelete,\n                    'index',\n                    index\n                  )\n                }\n                changed={event =>\n                  tasksContext.dataRequestHandler(\n                    event,\n                    'tasks',\n                    functionChoiceChange,\n                    'id',\n                    day.id\n                  )\n                }\n              />\n            </React.Fragment>\n          );\n        }\n      );\n    }\n  };\n\n  // const [lastTaskHeader, setLastTaskHeader] = useState({\n  //   lastHeader: props.monday\n  // });\n  // useEffect(() => {\n  //   let dataLocation = props.dataLocation\n  //   // console.log(`this is the state of alert ${onCallDelete.signalAlert}`);\n  //   // if (onCallDelete.signalAlert === 'true') {\n\n  //   if (\n  //     tasksContext.tasksData.tasksData == true &&\n  //     tasksContext.tasksData.tasksData[dataLocation].length === 1\n  //   ) {\n  //     //let savedHeader = Object.keys(props.tasks[0]);\n  //     //let savedHeader = props.tasks\n  //     console.log(props.monday);\n  //     setLastTaskHeader({ lastHeader: props.monday });\n\n  //     console.log(`this is the last task alert ${lastTaskHeader.lastHeader}`);\n  //   }\n  //   if (props.reRenderTodayTasks === true) {\n  //     // alert('Are you sure you want to delete this task?');\n  //     //return (props.reRender = {})\n  //   }\n  // });\n\n  return (\n    <div>\n      <h1 id=\"title\"> Tasks for The Day</h1>\n      <table id=\"students\">\n        <tbody>\n          <tr>{renderTableHeaderHandler()}</tr>\n          {tasksOfSelectedDayHandler()}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PickedDayTasks;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/EventsData.js\";\nimport React, { Component } from 'react';\nimport StoreContext from '../../context/StoreDataContext';\n\nclass EventsData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentMonthEvents: ['hello', 'there']\n    };\n\n    this.newEventHandler = () => {\n      console.log(this.state.currentMonthEvents[1]);\n      let newEvent = this.context.dataRequestDetails.value;\n      console.dir(newEvent);\n\n      if (newEvent.eventStartTimeDate.numDaysFromCurrentDay < 31) {\n        let currentMonthEvents = [...this.state.currentMonthEvents];\n        let updatedCurrentMonthEvents = currentMonthEvents.push(newEvent);\n        this.setState({\n          currentMonthEvents: updatedCurrentMonthEvents\n        }, () => {\n          let currentMonthEventsObj = this.state.currentMonthEvents[0]; // let eventTitleObj = { ...currentMonthEventsObj.eventTitle };\n\n          console.dir(this.state.currentMonthEvents);\n          console.log(this.state.currentMonthEvents[1]);\n          console.dir(this.state);\n        });\n      }\n    };\n  }\n\n  render() {\n    if (this.context.dataRequestDetails.typeOfData === 'EventsData') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          //newEvent\n          this.context.resetHandlerChoice(this.newEventHandler());\n          break;\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n}\n\nEventsData.contextType = StoreContext;\nexport default EventsData; // eventId: '',\n// eventTitle: '',\n// eventNote: '',\n// eventCategory: '',\n// eventStartTimeDate: '',\n// eventFinishTimeDate: '',\n// //later: If one-day event\n// eventDuration: '',\n// //Later:\n// //T -> schedule it on calendarData\n// //F--> put into unScheduledEventsList for that day\n// blockOffTimeSlot: false,\n// showStartTimeDate: false,\n// showFinishTimeDate: false,\n// eventDeadline: '',\n// //later: show multiday non-continous event\n// showMultidayNonContinousDate: false","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/EventsData.js"],"names":["React","Component","StoreContext","EventsData","constructor","props","state","currentMonthEvents","newEventHandler","console","log","newEvent","context","dataRequestDetails","value","dir","eventStartTimeDate","numDaysFromCurrentDay","updatedCurrentMonthEvents","push","setState","currentMonthEventsObj","render","typeOfData","handlerChoice","resetHandlerChoice","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAInBC,KAJmB,GAIX;AACNC,MAAAA,kBAAkB,EAAE,CAAC,OAAD,EAAU,OAAV;AADd,KAJW;;AAAA,SASnBC,eATmB,GASD,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,kBAAX,CAA8B,CAA9B,CAAZ;AACA,UAAII,QAAQ,GAAG,KAAKC,OAAL,CAAaC,kBAAb,CAAgCC,KAA/C;AACAL,MAAAA,OAAO,CAACM,GAAR,CAAYJ,QAAZ;;AACA,UAAIA,QAAQ,CAACK,kBAAT,CAA4BC,qBAA5B,GAAoD,EAAxD,EAA4D;AAC1D,YAAIV,kBAAkB,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,kBAAf,CAAzB;AACA,YAAIW,yBAAyB,GAAGX,kBAAkB,CAACY,IAAnB,CAAwBR,QAAxB,CAAhC;AACA,aAAKS,QAAL,CACE;AACEb,UAAAA,kBAAkB,EAAEW;AADtB,SADF,EAIE,MAAM;AACJ,cAAIG,qBAAqB,GAAG,KAAKf,KAAL,CAAWC,kBAAX,CAA8B,CAA9B,CAA5B,CADI,CAEJ;;AACAE,UAAAA,OAAO,CAACM,GAAR,CAAY,KAAKT,KAAL,CAAWC,kBAAvB;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,kBAAX,CAA8B,CAA9B,CAAZ;AACAE,UAAAA,OAAO,CAACM,GAAR,CAAY,KAAKT,KAAjB;AACD,SAVH;AAYD;AACF,KA7BkB;AAElB;;AA4BDgB,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKV,OAAL,CAAaC,kBAAb,CAAgCU,UAAhC,KAA+C,YAAnD,EAAiE;AAC/D,cAAQ,KAAKX,OAAL,CAAaC,kBAAb,CAAgCW,aAAxC;AACE,aAAK,GAAL;AAAU;AACR,eAAKZ,OAAL,CAAaa,kBAAb,CAAgC,KAAKjB,eAAL,EAAhC;AACA;AAHJ;AAKD;;AACD,WAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAxCgC;;AAA7BL,U,CASGuB,W,GAAcxB,Y;AAkCvB,eAAeC,UAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport StoreContext from '../../context/StoreDataContext';\n\nclass EventsData extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    currentMonthEvents: ['hello', 'there']\n  };\n\n  static contextType = StoreContext;\n  newEventHandler = () => {\n    console.log(this.state.currentMonthEvents[1]);\n    let newEvent = this.context.dataRequestDetails.value;\n    console.dir(newEvent);\n    if (newEvent.eventStartTimeDate.numDaysFromCurrentDay < 31) {\n      let currentMonthEvents = [...this.state.currentMonthEvents];\n      let updatedCurrentMonthEvents = currentMonthEvents.push(newEvent);\n      this.setState(\n        {\n          currentMonthEvents: updatedCurrentMonthEvents\n        },\n        () => {\n          let currentMonthEventsObj = this.state.currentMonthEvents[0];\n          // let eventTitleObj = { ...currentMonthEventsObj.eventTitle };\n          console.dir(this.state.currentMonthEvents);\n          console.log(this.state.currentMonthEvents[1]);\n          console.dir(this.state);\n        }\n      );\n    }\n  };\n  render() {\n    if (this.context.dataRequestDetails.typeOfData === 'EventsData') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1': //newEvent\n          this.context.resetHandlerChoice(this.newEventHandler());\n          break;\n      }\n    }\n    return <React.Fragment></React.Fragment>;\n  }\n}\n\nexport default EventsData;\n\n// eventId: '',\n// eventTitle: '',\n// eventNote: '',\n// eventCategory: '',\n// eventStartTimeDate: '',\n// eventFinishTimeDate: '',\n// //later: If one-day event\n// eventDuration: '',\n// //Later:\n// //T -> schedule it on calendarData\n// //F--> put into unScheduledEventsList for that day\n// blockOffTimeSlot: false,\n// showStartTimeDate: false,\n// showFinishTimeDate: false,\n// eventDeadline: '',\n// //later: show multiday non-continous event\n// showMultidayNonContinousDate: false\n"]},"metadata":{},"sourceType":"module"}
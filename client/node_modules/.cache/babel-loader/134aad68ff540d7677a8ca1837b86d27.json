{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/Store/Store.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\n\nclass Store extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lastLessonHeader: [],\n      crunk: 'Hootie',\n      showLeftOverLessonsFromSyllabus: false,\n      syllabusData: null,\n      syllabusHandlerChoice: '0',\n      tasksData: null,\n      dataRequestDetails: {\n        handlerChoice: false,\n        index: null,\n        id: null,\n        value: null\n      }\n    };\n\n    this.sendSyllabusDataHandler = handlerChoice => {\n      this.setState({\n        syllabusHandlerChoice: handlerChoice\n      });\n      console.log('Inside of sendSyllabusDataHandler');\n    };\n\n    this.receiveSyllabusDataHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          }, () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          });\n          break;\n\n        case 'tasks':\n          this.setState({\n            tasksData: dataBase,\n            tasksHandlerChoice: '0'\n          }, () => {\n            console.log(this.state.tasksData.lastLessonHeader);\n          });\n          break;\n      }\n    };\n\n    this.resetSyllabusHandlerChoice = () => {\n      this.setState({\n        syllabusHandlerChoice: '0'\n      });\n    };\n\n    this.processSyllabusRequestHandler = (event, syllabusHandlerChoice, infoType, info) => {\n      console.log(\"In processSyllabusRequestHandler event.value => \".concat(event.target.value, \" \"));\n      let index = null;\n      let id = null;\n      let value = null;\n\n      if (infoType === 'index') {\n        index = info;\n      } else {\n        id = info;\n      } //event, index, handlerType\n\n\n      this.setState({\n        syllabusHandlerChoice: syllabusHandlerChoice,\n        index: index,\n        id: id,\n        value: event.target.value\n      });\n    };\n\n    this.processSyllabusRequestHandler2 = (event, syllabusHandlerChoice, infoType, info) => {\n      // console.log(\n      //   `In processSyllabusRequestHandler event.value => ${event.target.value} `\n      // );\n      let index = null;\n      let id = null; //let value = null;\n\n      if (infoType === 'index') {\n        index = info;\n      } else {\n        id = info;\n      } //event, index, handlerType\n\n\n      this.setState({\n        syllabusHandlerChoice: syllabusHandlerChoice,\n        index: index,\n        id: id,\n        value: event.value\n      });\n    };\n\n    this.dataRequestHandler = (event, handlerChoice, //a # to signal type of function that will get called\n    infoType, //string: 'id', 'index', or 'value'\n    info // string: id, index, or value\n    ) => {\n      //console.log(`In DataRequestHandler event.value => ${event.target.value} `);\n      console.log('Inside dataRequestHandler');\n      let index = null;\n      let id = null;\n      let value = null;\n\n      if (infoType === 'index') {\n        index = info;\n        value = '';\n      } else {\n        id = info;\n        value = event.target.value;\n      }\n\n      let dataRequestDetails = {\n        handlerChoice: handlerChoice,\n        index: index,\n        id: id,\n        value: value\n      }; //event, index, handlerType\n\n      this.setState({\n        dataRequestDetails: dataRequestDetails\n      });\n    };\n\n    this.dataReceiverHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          }, () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          });\n          break;\n\n        case 'tasks':\n          this.setState({\n            tasksData: dataBase,\n            dataRequestDetails: {\n              handlerChoice: '0',\n              index: null,\n              id: null,\n              value: null\n            }\n          });\n          break;\n      }\n    };\n\n    this.resetHandlerChoice = () => {\n      this.setState({\n        dataRequestDetails: {\n          handlerChoice: false,\n          index: false,\n          id: false,\n          value: false\n        }\n      });\n    };\n  }\n\n  render() {\n    let displayMessage = null;\n\n    if (this.state.syllabusHandlerChoice === '1') {\n      displayMessage = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Hey syllabusHandlerchoice is recorded\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(SyllabusContext.Provider, {\n      value: {\n        processSyllabusRequestHandler: this.processSyllabusRequestHandler,\n        syllabusHandlerChoice: this.state.syllabusHandlerChoice,\n        index: this.state.index,\n        id: this.state.id,\n        everythingSyllabus: this.state,\n        processSyllabusRequestHandler2: this.processSyllabusRequestHandler2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(SyllabusData, {\n      resetSyllabusHandlerChoice: this.resetSyllabusHandlerChoice,\n      syllabusHandlerChoice: this.state.syllabusHandlerChoice,\n      receiveSyllabusDataHandler: this.receiveSyllabusDataHandler,\n      sendSyllabusDataHandler: this.sendSyllabusDataHandler,\n      value: this.state.value,\n      index: this.state.index,\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(TasksDataContext.Provider, {\n      value: {\n        dataRequestHandler: (event, b, c, d) => this.dataRequestHandler(event, b, c, d),\n        dataRequestDetails: this.state.dataRequestDetails,\n        tasksData: this.state,\n        resetHandlerChoice: this.resetHandlerChoice\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(TasksData, {\n      resetHandlerChoice: this.resetHandlerChoice,\n      receiveSyllabusDataHandler: this.receiveSyllabusDataHandler,\n      dataReceiverHandler: this.dataReceiverHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(RightCockpit //Tasks\n    //Syllabus\n    , {\n      sendSyllabusDataHandler: this.sendSyllabusDataHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/Store/Store.js"],"names":["React","Component","RightCockpit","TasksData","SyllabusData","SyllabusContext","TasksDataContext","Store","state","lastLessonHeader","crunk","showLeftOverLessonsFromSyllabus","syllabusData","syllabusHandlerChoice","tasksData","dataRequestDetails","handlerChoice","index","id","value","sendSyllabusDataHandler","setState","console","log","receiveSyllabusDataHandler","dataBase","dataBaseName","tasksHandlerChoice","resetSyllabusHandlerChoice","processSyllabusRequestHandler","event","infoType","info","target","processSyllabusRequestHandler2","dataRequestHandler","dataReceiverHandler","resetHandlerChoice","render","displayMessage","everythingSyllabus","b","c","d"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\n\nclass Store extends Component {\n  state = {\n    lastLessonHeader: [],\n\n    crunk: 'Hootie',\n    showLeftOverLessonsFromSyllabus: false,\n    syllabusData: null,\n    syllabusHandlerChoice: '0',\n    tasksData: null,\n    dataRequestDetails: {\n      handlerChoice: false,\n      index: null,\n      id: null,\n      value: null\n    }\n  };\n\n  //Now deals with syllabusData strictly\n  sendSyllabusDataHandler = handlerChoice => {\n    this.setState({ syllabusHandlerChoice: handlerChoice });\n    console.log('Inside of sendSyllabusDataHandler');\n  };\n\n  receiveSyllabusDataHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState(\n          {\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          },\n          () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          }\n        );\n        break;\n\n      case 'tasks':\n        this.setState(\n          {\n            tasksData: dataBase,\n            tasksHandlerChoice: '0'\n          },\n          () => {\n            console.log(this.state.tasksData.lastLessonHeader);\n          }\n        );\n\n        break;\n    }\n  };\n\n  resetSyllabusHandlerChoice = () => {\n    this.setState({ syllabusHandlerChoice: '0' });\n  };\n\n  processSyllabusRequestHandler = (\n    event,\n    syllabusHandlerChoice,\n    infoType,\n    info\n  ) => {\n    console.log(\n      `In processSyllabusRequestHandler event.value => ${event.target.value} `\n    );\n\n    let index = null;\n    let id = null;\n    let value = null;\n    if (infoType === 'index') {\n      index = info;\n    } else {\n      id = info;\n    }\n    //event, index, handlerType\n    this.setState({\n      syllabusHandlerChoice: syllabusHandlerChoice,\n      index: index,\n      id: id,\n      value: event.target.value\n    });\n  };\n\n  processSyllabusRequestHandler2 = (\n    event,\n    syllabusHandlerChoice,\n    infoType,\n    info\n  ) => {\n    // console.log(\n    //   `In processSyllabusRequestHandler event.value => ${event.target.value} `\n    // );\n\n    let index = null;\n    let id = null;\n    //let value = null;\n    if (infoType === 'index') {\n      index = info;\n    } else {\n      id = info;\n    }\n    //event, index, handlerType\n    this.setState({\n      syllabusHandlerChoice: syllabusHandlerChoice,\n      index: index,\n      id: id,\n      value: event.value\n    });\n  };\n\n  dataRequestHandler = (\n    event,\n    handlerChoice, //a # to signal type of function that will get called\n    infoType, //string: 'id', 'index', or 'value'\n    info // string: id, index, or value\n  ) => {\n    //console.log(`In DataRequestHandler event.value => ${event.target.value} `);\n    console.log('Inside dataRequestHandler');\n    let index = null;\n    let id = null;\n    let value = null;\n\n    if (infoType === 'index') {\n      index = info;\n      value = '';\n    } else {\n      id = info;\n      value = event.target.value;\n    }\n\n    let dataRequestDetails = {\n      handlerChoice: handlerChoice,\n      index: index,\n      id: id,\n      value: value\n    };\n    //event, index, handlerType\n    this.setState({\n      dataRequestDetails: dataRequestDetails\n    });\n  };\n  dataReceiverHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState(\n          {\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          },\n          () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          }\n        );\n        break;\n\n      case 'tasks':\n        this.setState({\n          tasksData: dataBase,\n          dataRequestDetails: {\n            handlerChoice: '0',\n            index: null,\n            id: null,\n            value: null\n          }\n        });\n\n        break;\n    }\n  };\n\n  resetHandlerChoice = () => {\n    this.setState({\n      dataRequestDetails: {\n        handlerChoice: false,\n        index: false,\n        id: false,\n        value: false\n      }\n    });\n  };\n\n  render() {\n    let displayMessage = null;\n    if (this.state.syllabusHandlerChoice === '1') {\n      displayMessage = <div>Hey syllabusHandlerchoice is recorded</div>;\n    }\n\n    return (\n      <div>\n        <SyllabusContext.Provider\n          value={{\n            processSyllabusRequestHandler: this.processSyllabusRequestHandler,\n            syllabusHandlerChoice: this.state.syllabusHandlerChoice,\n            index: this.state.index,\n            id: this.state.id,\n            everythingSyllabus: this.state,\n            processSyllabusRequestHandler2: this.processSyllabusRequestHandler2\n          }}\n        >\n          <SyllabusData\n            resetSyllabusHandlerChoice={this.resetSyllabusHandlerChoice}\n            syllabusHandlerChoice={this.state.syllabusHandlerChoice}\n            receiveSyllabusDataHandler={this.receiveSyllabusDataHandler}\n            sendSyllabusDataHandler={this.sendSyllabusDataHandler}\n            value={this.state.value}\n            index={this.state.index}\n            id={this.state.id}\n          ></SyllabusData>\n\n          <TasksDataContext.Provider\n            value={{\n              dataRequestHandler: (event, b, c, d) =>\n                this.dataRequestHandler(event, b, c, d),\n              dataRequestDetails: this.state.dataRequestDetails,\n              tasksData: this.state,\n              resetHandlerChoice: this.resetHandlerChoice\n            }}\n          >\n            <TasksData\n              resetHandlerChoice={this.resetHandlerChoice}\n              receiveSyllabusDataHandler={this.receiveSyllabusDataHandler}\n              dataReceiverHandler={this.dataReceiverHandler}\n            />\n            <RightCockpit\n              //Tasks\n              //Syllabus\n              sendSyllabusDataHandler={this.sendSyllabusDataHandler}\n            ></RightCockpit>\n          </TasksDataContext.Provider>\n        </SyllabusContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}
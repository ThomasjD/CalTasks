{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/DataStructure.js\";\nimport React, { Component } from 'react';\nimport App from './App';\n\nclass DataStructure extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: 'hello'\n    };\n  }\n\n  render() {\n    return React.createElement(App, {\n      passData: this.state.word,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  } // state = {\n  //   objectives: [\n  //     {\n  //       objId: '',\n  //       objTitle: '',\n  //       timeCat: '',\n  //       // daily: 1\n  //       // days: 1.1-1.7\n  //       // months: 2.3,2.6,2.9\n  //       // year: 3.1,3.6, 3.9, 3.12\n  //       subjectCat: '',\n  //       expirationDate: '',\n  //       objStatus: '',\n  //       requiredCompletionTime: ''\n  //     }\n  //   ],\n  //   objRequiredWork: {\n  //     objId: '', //from objectives.objId\n  //     requiredWork: [\n  //       {\n  //         syllabi: [\n  //           { syllabusId: '' } //list of required syllabi\n  //         ],\n  //         level1Tasks: [],\n  //         level2Tasks: [],\n  //         level3Tasks: []\n  //       }\n  //     ]\n  //   },\n  //   syllabi: [\n  //     {\n  //       syllabusId: '',\n  //       syllabusTitle: '', //ReactMax\n  //       objSource: '', //objId\n  //       field: '', //Programing\n  //       concentration: '', //Front End\n  //       subjectCat: '', //Library\n  //       subject: '' //React\n  //     }\n  //   ],\n  //   syllabusWork: {\n  //     syllabusId: '', //same as syllabusId above\n  //     workTasks: [\n  //       {\n  //         lessonId: '',\n  //         taskTitle: '',\n  //         unit: '',\n  //         chapter: '',\n  //         sections: '',\n  //         topics: '',\n  //         requiredTime: ''\n  //       }\n  //     ]\n  //   },\n  //   scheduledTasks: [\n  //     {\n  //       taskId: '', // SyllabusWork.syllabusId.workTasks.lessonId\n  //       TaskTitle: '', //SyllabusWork.syllabusId.workTasks.taskTitle\n  //       source: '', //Syllabus/syllabusId/syllabusTitle\n  //       subjectCat: '', ////Syllabus/syllabusId/subjectCat\n  //       //task is errand/apt/chore -> subjectCat = nonRepetitiveTasks\n  //       //task is repetitive tasks -> subject Cat = repetitiveTaskTasks\n  //       assignedTime,\n  //       assignedDate: '',\n  //       Deadline: '' //date\n  //     }\n  //   ]\n  // };\n\n\n}\n\nexport default DataStructure;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/DataStructure.js"],"names":["React","Component","App","DataStructure","constructor","props","state","word","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAGnBC,KAHmB,GAGX;AACNC,MAAAA,IAAI,EAAE;AADA,KAHW;AAElB;;AAIDC,EAAAA,MAAM,GAAG;AACP,WAAO,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GATmC,CAWpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAlFoC;;AAqFtC,eAAeJ,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport App from './App';\n\nclass DataStructure extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    word: 'hello'\n  };\n  render() {\n    return <App passData={this.state.word}></App>;\n  }\n\n  // state = {\n  //   objectives: [\n  //     {\n  //       objId: '',\n  //       objTitle: '',\n  //       timeCat: '',\n  //       // daily: 1\n  //       // days: 1.1-1.7\n  //       // months: 2.3,2.6,2.9\n  //       // year: 3.1,3.6, 3.9, 3.12\n  //       subjectCat: '',\n  //       expirationDate: '',\n  //       objStatus: '',\n  //       requiredCompletionTime: ''\n  //     }\n  //   ],\n\n  //   objRequiredWork: {\n  //     objId: '', //from objectives.objId\n  //     requiredWork: [\n  //       {\n  //         syllabi: [\n  //           { syllabusId: '' } //list of required syllabi\n  //         ],\n  //         level1Tasks: [],\n  //         level2Tasks: [],\n  //         level3Tasks: []\n  //       }\n  //     ]\n  //   },\n\n  //   syllabi: [\n  //     {\n  //       syllabusId: '',\n  //       syllabusTitle: '', //ReactMax\n  //       objSource: '', //objId\n  //       field: '', //Programing\n  //       concentration: '', //Front End\n  //       subjectCat: '', //Library\n  //       subject: '' //React\n  //     }\n  //   ],\n\n  //   syllabusWork: {\n  //     syllabusId: '', //same as syllabusId above\n  //     workTasks: [\n  //       {\n  //         lessonId: '',\n  //         taskTitle: '',\n  //         unit: '',\n  //         chapter: '',\n  //         sections: '',\n  //         topics: '',\n  //         requiredTime: ''\n  //       }\n  //     ]\n  //   },\n\n  //   scheduledTasks: [\n  //     {\n  //       taskId: '', // SyllabusWork.syllabusId.workTasks.lessonId\n  //       TaskTitle: '', //SyllabusWork.syllabusId.workTasks.taskTitle\n  //       source: '', //Syllabus/syllabusId/syllabusTitle\n  //       subjectCat: '', ////Syllabus/syllabusId/subjectCat\n  //       //task is errand/apt/chore -> subjectCat = nonRepetitiveTasks\n  //       //task is repetitive tasks -> subject Cat = repetitiveTaskTasks\n  //       assignedTime,\n  //       assignedDate: '',\n  //       Deadline: '' //date\n  //     }\n  //   ]\n  // };\n}\n\nexport default DataStructure;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/Store.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\nimport Aux from '../../hoc/Aux';\nimport Layout from '../../hoc/Layout';\n\nclass Store extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSyllabusList: false,\n      crunk: 'Hootie',\n      showLeftOverLessonsFromSyllabus: false,\n      showLeftOverTasksForWeek: false,\n      syllabusData: null,\n      tasksData: null,\n      dataRequestDetails: {\n        handlerChoice: false,\n        index: null,\n        id: null,\n        value: null\n      }\n    };\n\n    this.sendSyllabusDataHandler = handlerChoice => {\n      this.setState({\n        syllabusHandlerChoice: handlerChoice\n      });\n      console.log('Inside of sendSyllabusDataHandler');\n    };\n\n    this.receiveSyllabusDataHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          }, () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          });\n          break;\n\n        case 'tasks':\n          this.setState({\n            tasksData: dataBase,\n            tasksHandlerChoice: '0'\n          });\n          break;\n      }\n    };\n\n    this.dataRequestHandler = (event, typeOfData, handlerChoice, infoType, info) => {\n      let index = null;\n      let id = null;\n      let value = ''; //let inspection = event.value;\n\n      if (infoType === 'index') {\n        index = info; //value = null;\n      } else {\n        id = info;\n      }\n\n      value = event.target.value;\n      let dataRequestDetails = {\n        handlerChoice: handlerChoice,\n        index: index,\n        id: id,\n        value: value,\n        typeOfData: typeOfData\n      }; //event, index, handlerType\n\n      this.setState({\n        dataRequestDetails: dataRequestDetails\n      });\n    };\n\n    this.dataReceiverHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase\n          });\n          break;\n\n        case 'tasks':\n          this.setState({\n            tasksData: dataBase\n          });\n          break;\n      }\n    };\n\n    this.resetHandlerChoice = () => {\n      this.setState({\n        dataRequestDetails: {\n          handlerChoice: '0',\n          typeOfData: '',\n          index: null,\n          id: null,\n          value: ''\n        }\n      });\n    };\n  }\n\n  render() {\n    // let displayMessage = null;\n    // if (this.state.syllabusHandlerChoice === '0') {\n    //   displayMessage = <div>Hey syllabusHandlerchoice is recorded</div>;\n    // }\n    // Layout wrap displayed\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(SyllabusContext.Provider, {\n      value: {\n        resetHandlerChoice: this.resetHandlerChoice,\n        everythingSyllabus: this.state,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        dataReceiverHandler: this.dataReceiverHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(SyllabusData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(TasksDataContext.Provider, {\n      value: {\n        crunk: this.state.crunk,\n        dataReceiverHandler: this.dataReceiverHandler,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        tasksData: this.state,\n        resetHandlerChoice: this.resetHandlerChoice\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(TasksData, {\n      showLeftOverTasksForWeek: this.state.showLeftOverTasksForWeek,\n      dataRequestDetails: this.state.dataRequestDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(RightCockpit, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/Store.js"],"names":["React","Component","RightCockpit","TasksData","SyllabusData","SyllabusContext","TasksDataContext","Aux","Layout","Store","state","showSyllabusList","crunk","showLeftOverLessonsFromSyllabus","showLeftOverTasksForWeek","syllabusData","tasksData","dataRequestDetails","handlerChoice","index","id","value","sendSyllabusDataHandler","setState","syllabusHandlerChoice","console","log","receiveSyllabusDataHandler","dataBase","dataBaseName","lastLessonHeader","tasksHandlerChoice","dataRequestHandler","event","typeOfData","infoType","info","target","dataReceiverHandler","resetHandlerChoice","render","everythingSyllabus"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\nimport Aux from '../../hoc/Aux';\nimport Layout from '../../hoc/Layout';\n\nclass Store extends Component {\n  state = {\n    showSyllabusList: false,\n    crunk: 'Hootie',\n    showLeftOverLessonsFromSyllabus: false,\n    showLeftOverTasksForWeek: false,\n    syllabusData: null,\n    tasksData: null,\n\n    dataRequestDetails: {\n      handlerChoice: false,\n      index: null,\n      id: null,\n      value: null\n    }\n  };\n\n  //Now deals with syllabusData strictly\n  sendSyllabusDataHandler = handlerChoice => {\n    this.setState({ syllabusHandlerChoice: handlerChoice });\n    console.log('Inside of sendSyllabusDataHandler');\n  };\n\n  receiveSyllabusDataHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState(\n          {\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          },\n          () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          }\n        );\n        break;\n\n      case 'tasks':\n        this.setState({\n          tasksData: dataBase,\n          tasksHandlerChoice: '0'\n        });\n        break;\n    }\n  };\n\n  dataRequestHandler = (event, typeOfData, handlerChoice, infoType, info) => {\n    let index = null;\n    let id = null;\n    let value = '';\n    //let inspection = event.value;\n\n    if (infoType === 'index') {\n      index = info;\n      //value = null;\n    } else {\n      id = info;\n    }\n    value = event.target.value;\n\n    let dataRequestDetails = {\n      handlerChoice: handlerChoice,\n      index: index,\n      id: id,\n      value: value,\n      typeOfData: typeOfData\n    };\n    //event, index, handlerType\n    this.setState({\n      dataRequestDetails: dataRequestDetails\n    });\n  };\n\n  dataReceiverHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState({\n          syllabusData: dataBase\n        });\n        break;\n\n      case 'tasks':\n        this.setState({\n          tasksData: dataBase\n        });\n\n        break;\n    }\n  };\n\n  resetHandlerChoice = () => {\n    this.setState({\n      dataRequestDetails: {\n        handlerChoice: '0',\n        typeOfData: '',\n        index: null,\n        id: null,\n        value: ''\n      }\n    });\n  };\n\n  render() {\n    // let displayMessage = null;\n    // if (this.state.syllabusHandlerChoice === '0') {\n    //   displayMessage = <div>Hey syllabusHandlerchoice is recorded</div>;\n    // }\n    // Layout wrap displayed\n    return (\n      <Aux>\n        <Layout>\n          <SyllabusContext.Provider\n            value={{\n              resetHandlerChoice: this.resetHandlerChoice,\n              everythingSyllabus: this.state,\n              dataRequestHandler: this.dataRequestHandler,\n              dataRequestDetails: this.state.dataRequestDetails,\n              dataReceiverHandler: this.dataReceiverHandler\n            }}\n          >\n            <SyllabusData></SyllabusData>\n\n            <TasksDataContext.Provider\n              value={{\n                crunk: this.state.crunk,\n                dataReceiverHandler: this.dataReceiverHandler,\n                dataRequestHandler: this.dataRequestHandler,\n                dataRequestDetails: this.state.dataRequestDetails,\n                tasksData: this.state,\n                resetHandlerChoice: this.resetHandlerChoice\n              }}\n            >\n              <TasksData\n                showLeftOverTasksForWeek={this.state.showLeftOverTasksForWeek}\n                dataRequestDetails={this.state.dataRequestDetails}\n              />\n              <RightCockpit></RightCockpit>\n            </TasksDataContext.Provider>\n          </SyllabusContext.Provider>\n        </Layout>\n      </Aux>\n    );\n  }\n}\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}
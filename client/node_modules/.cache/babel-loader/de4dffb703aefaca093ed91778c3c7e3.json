{"ast":null,"code":"import _defineProperty from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/Store/Store.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\n\nclass Store extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lastLessonHeader: [],\n      realNum: '9',\n      crunk: 'Hootie',\n      showLeftOverLessonsFromSyllabus: false,\n      syllabusData: null,\n      syllabusHandlerChoice: '0'\n    };\n\n    this.sendSyllabusDataHandler = handlerChoice => {\n      this.setState({\n        syllabusHandlerChoice: handlerChoice\n      });\n      console.log('Inside of sendSyllabusDataHandler');\n    };\n\n    this.receiveSyllabusDataHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          //this.setState({ syllabusData: syllabusData });\n          let currentSyllabusDataState = _objectSpread({}, this.state.syllabusData);\n\n          let currentRequestedDatabase = dataBase; //this to allow setState to finish inorder for the new syllabusData to show up\n          //let currentLastLessonHeader = [...this.state.lastLessonHeader];\n          //currentLastLessonHeader.push;\n\n          this.setState({\n            syllabusData: currentRequestedDatabase,\n            syllabusHandlerChoice: '0'\n          }, () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          });\n      }\n    };\n\n    this.resetSyllabusHandlerChoice = () => {\n      this.setState({\n        syllabusHandlerChoice: '0'\n      });\n    };\n\n    this.processSyllabusRequestHandler = (event, syllabusHandlerChoice, infoType, info) => {\n      console.log(\"In processSyllabusRequestHandler event.value => \".concat(event.target.value, \" \"));\n      let index = null;\n      let id = null;\n      let value = null;\n\n      if (infoType === 'index') {\n        index = info;\n      } else {\n        id = info;\n      } //event, index, handlerType\n\n\n      this.setState({\n        syllabusHandlerChoice: syllabusHandlerChoice,\n        index: index,\n        id: id,\n        value: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let displayMessage = null;\n\n    if (this.state.syllabusHandlerChoice === '1') {\n      displayMessage = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Hey syllabusHandlerchoice is recorded\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(SyllabusContext.Provider, {\n      value: {\n        processSyllabusRequestHandler: this.processSyllabusRequestHandler,\n        syllabusHandlerChoice: this.state.syllabusHandlerChoice,\n        index: this.state.index,\n        id: this.state.id,\n        everythingSyllabus: this.state\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(SyllabusData, {\n      resetSyllabusHandlerChoice: this.resetSyllabusHandlerChoice,\n      syllabusHandlerChoice: this.state.syllabusHandlerChoice,\n      receiveSyllabusDataHandler: this.receiveSyllabusDataHandler,\n      sendSyllabusDataHandler: this.sendSyllabusDataHandler,\n      value: this.state.value,\n      index: this.state.index,\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(TasksDataContext.Provider, {\n      value: {\n        processTasksRequestHandler: () => {},\n        tasksHandlerChoice: '0',\n        index: '1',\n        id: '22',\n        tasksData: ''\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(TasksData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(RightCockpit //Syllabus\n    , {\n      sendSyllabusDataHandler: this.sendSyllabusDataHandler,\n      data: this.state.TasksData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/Store/Store.js"],"names":["React","Component","RightCockpit","TasksData","SyllabusData","SyllabusContext","TasksDataContext","Store","state","lastLessonHeader","realNum","crunk","showLeftOverLessonsFromSyllabus","syllabusData","syllabusHandlerChoice","sendSyllabusDataHandler","handlerChoice","setState","console","log","receiveSyllabusDataHandler","dataBase","dataBaseName","currentSyllabusDataState","currentRequestedDatabase","resetSyllabusHandlerChoice","processSyllabusRequestHandler","event","infoType","info","target","value","index","id","render","displayMessage","everythingSyllabus","processTasksRequestHandler","tasksHandlerChoice","tasksData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\nclass Store extends Component {\n  state = {\n    lastLessonHeader: [],\n    realNum: '9',\n    crunk: 'Hootie',\n    showLeftOverLessonsFromSyllabus: false,\n    syllabusData: null,\n    syllabusHandlerChoice: '0'\n  };\n\n  //Now deals with syllabusData strictly\n  sendSyllabusDataHandler = handlerChoice => {\n    this.setState({ syllabusHandlerChoice: handlerChoice });\n    console.log('Inside of sendSyllabusDataHandler');\n  };\n\n  receiveSyllabusDataHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        //this.setState({ syllabusData: syllabusData });\n        let currentSyllabusDataState = { ...this.state.syllabusData };\n\n        let currentRequestedDatabase = dataBase;\n        //this to allow setState to finish inorder for the new syllabusData to show up\n\n        //let currentLastLessonHeader = [...this.state.lastLessonHeader];\n        //currentLastLessonHeader.push;\n        this.setState(\n          {\n            syllabusData: currentRequestedDatabase,\n            syllabusHandlerChoice: '0'\n          },\n          () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          }\n        );\n    }\n  };\n\n  resetSyllabusHandlerChoice = () => {\n    this.setState({ syllabusHandlerChoice: '0' });\n  };\n\n  processSyllabusRequestHandler = (\n    event,\n    syllabusHandlerChoice,\n    infoType,\n    info\n  ) => {\n    console.log(\n      `In processSyllabusRequestHandler event.value => ${event.target.value} `\n    );\n\n    let index = null;\n    let id = null;\n    let value = null;\n    if (infoType === 'index') {\n      index = info;\n    } else {\n      id = info;\n    }\n    //event, index, handlerType\n    this.setState({\n      syllabusHandlerChoice: syllabusHandlerChoice,\n      index: index,\n      id: id,\n      value: event.target.value\n    });\n  };\n\n  render() {\n    let displayMessage = null;\n    if (this.state.syllabusHandlerChoice === '1') {\n      displayMessage = <div>Hey syllabusHandlerchoice is recorded</div>;\n    }\n\n    return (\n      <div>\n        <SyllabusContext.Provider\n          value={{\n            processSyllabusRequestHandler: this.processSyllabusRequestHandler,\n            syllabusHandlerChoice: this.state.syllabusHandlerChoice,\n            index: this.state.index,\n            id: this.state.id,\n            everythingSyllabus: this.state\n          }}\n        >\n          <SyllabusData\n            resetSyllabusHandlerChoice={this.resetSyllabusHandlerChoice}\n            syllabusHandlerChoice={this.state.syllabusHandlerChoice}\n            receiveSyllabusDataHandler={this.receiveSyllabusDataHandler}\n            sendSyllabusDataHandler={this.sendSyllabusDataHandler}\n            value={this.state.value}\n            index={this.state.index}\n            id={this.state.id}\n          ></SyllabusData>\n\n          <TasksDataContext.Provider\n            value={{\n              processTasksRequestHandler: () => {},\n              tasksHandlerChoice: '0',\n              index: '1',\n              id: '22',\n              tasksData: ''\n            }}\n          >\n            <TasksData />\n            <RightCockpit\n              //Syllabus\n\n              sendSyllabusDataHandler={this.sendSyllabusDataHandler}\n              data={this.state.TasksData}\n            ></RightCockpit>\n          </TasksDataContext.Provider>\n        </SyllabusContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/ViewContent/Syllabus/MaxReact/Lessons.js\";\nimport React, { Component } from 'react'; //import Task from './Task/Task';\n\nimport ErrorBoundary from '../../../ErrorBoundary/ErrorBoundary';\nimport student from '../../../../containers/Student.css';\nimport Lesson from './Lesson/Lesson';\n\nclass Lessons extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickToAddDelete: null\n    };\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n  //rendering current lessons headers\n  renderAllLessonsTableHeaderHandler() {\n    //this is part of First row of table\n    let clickToAddDelete = null;\n\n    if (this.props.showLeftOverLessonsFromOrigSyllabus) {\n      clickToAddDelete = 'Click to schedule this lesson';\n    } else {\n      clickToAddDelete = 'Click to Delete Lesson';\n    }\n\n    let header = Object.keys(this.props.lastLessonHeader); //lastLessonHeader;\n\n    return header.map((key, index) => {\n      //console.log(`this is the key: (${key}) and the index: (${index})`);\n      if (key === 'id') {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, clickToAddDelete);\n      } else {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, key.toUpperCase());\n      }\n    });\n  } //rendering current lessons\n\n\n  allLessonssHandler() {\n    let handlerType = null;\n\n    switch (this.props.everything.contentChoice) {\n      case '3':\n        break;\n\n      case '6':\n        this.props.showLeftOverLessonsFromOrigSyllabus ? handlerType = 'add' : handlerType = 'delete';\n        break;\n    } //\n\n\n    return this.props.lessons.map((lesson, index) => {\n      return React.createElement(ErrorBoundary, {\n        key: lesson.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Lesson, {\n        lesson: lesson.lesson,\n        completion: lesson.completion,\n        particularKey: lesson.id,\n        click: event => this.props.clicked(event, index, 'add'),\n        changed: event => this.props.changed(event, handlerType, lesson.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    });\n  } // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Tasks] getSnapshotBeforeUpdate');\n  //   return { message: 'Snapshot' };\n  // }\n  // // componentWillUpdate() {\n  // //     return\n  // // }\n  // componentDidUpdate(prevProps, prevState, message) {\n  //   console.log('[Tasks] componentDidUpdate');\n  //   console.log(message);\n  // }\n  // componentWillUnmount() {\n  //   console.log('[Tasks.js] componentWillUnmount');\n  // }\n\n\n  render() {\n    console.log('[Lessons] rendering...');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" Syllabus\"), React.createElement(\"table\", {\n      id: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.renderAllLessonsTableHeaderHandler()), this.allLessonssHandler())));\n  }\n\n}\n\nexport default Lessons;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/ViewContent/Syllabus/MaxReact/Lessons.js"],"names":["React","Component","ErrorBoundary","student","Lesson","Lessons","constructor","props","state","clickToAddDelete","renderAllLessonsTableHeaderHandler","showLeftOverLessonsFromOrigSyllabus","header","Object","keys","lastLessonHeader","map","key","index","toUpperCase","allLessonssHandler","handlerType","everything","contentChoice","lessons","lesson","id","completion","event","clicked","changed","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Task from './Task/Task';\nimport ErrorBoundary from '../../../ErrorBoundary/ErrorBoundary';\nimport student from '../../../../containers/Student.css';\nimport Lesson from './Lesson/Lesson';\n\nclass Lessons extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    clickToAddDelete: null\n  };\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n  //rendering current lessons headers\n  renderAllLessonsTableHeaderHandler() {\n    //this is part of First row of table\n    let clickToAddDelete = null;\n\n    if (this.props.showLeftOverLessonsFromOrigSyllabus) {\n      clickToAddDelete = 'Click to schedule this lesson';\n    } else {\n      clickToAddDelete = 'Click to Delete Lesson';\n    }\n\n    let header = Object.keys(this.props.lastLessonHeader);\n    //lastLessonHeader;\n    return header.map((key, index) => {\n      //console.log(`this is the key: (${key}) and the index: (${index})`);\n\n      if (key === 'id') {\n        return <th key={index}>{clickToAddDelete}</th>;\n      } else {\n        return <th key={index}>{key.toUpperCase()}</th>;\n      }\n    });\n  }\n\n  //rendering current lessons\n  allLessonssHandler() {\n    let handlerType = null;\n\n    switch (this.props.everything.contentChoice) {\n      case '3':\n        break;\n      case '6':\n        this.props.showLeftOverLessonsFromOrigSyllabus\n          ? (handlerType = 'add')\n          : (handlerType = 'delete');\n\n        break;\n    }\n\n    //\n    return this.props.lessons.map((lesson, index) => {\n      return (\n        <ErrorBoundary key={lesson.id}>\n          <Lesson\n            lesson={lesson.lesson}\n            completion={lesson.completion}\n            particularKey={lesson.id}\n            click={event => this.props.clicked(event, index, 'add')}\n            changed={event => this.props.changed(event, handlerType, lesson.id)}\n          ></Lesson>\n        </ErrorBoundary>\n      );\n    });\n  }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Tasks] getSnapshotBeforeUpdate');\n  //   return { message: 'Snapshot' };\n  // }\n\n  // // componentWillUpdate() {\n  // //     return\n  // // }\n\n  // componentDidUpdate(prevProps, prevState, message) {\n  //   console.log('[Tasks] componentDidUpdate');\n  //   console.log(message);\n  // }\n\n  // componentWillUnmount() {\n  //   console.log('[Tasks.js] componentWillUnmount');\n  // }\n\n  render() {\n    console.log('[Lessons] rendering...');\n\n    return (\n      <div>\n        <h1 id=\"title\"> Syllabus</h1>\n        <table id=\"students\">\n          <tbody>\n            <tr>{this.renderAllLessonsTableHeaderHandler()}</tr>\n            {this.allLessonssHandler()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Lessons;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/Store.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\nimport Aux from '../../hoc/Aux';\nimport Layout from '../../hoc/Layout';\nimport CalendarContext from '../../context/calendarContext'; //import Basic from './react-big-scheduler-master/Basic';\n\nimport MtheoryContext from '../../context/MtheoryContext';\n\nclass Store extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSyllabusList: false,\n      crunk: 'Hootie',\n      showLeftOverLessonsFromSyllabus: false,\n      showLeftOverTasksForWeek: false,\n      syllabusData: null,\n      tasksData: null,\n      fish: 'blowFish',\n      dataRequestDetails: {\n        handlerChoice: false,\n        dataLocation: null,\n        index: null,\n        id: null,\n        value: null\n      }\n    };\n\n    this.sendSyllabusDataHandler = handlerChoice => {\n      this.setState({\n        syllabusHandlerChoice: handlerChoice\n      });\n      console.log('Inside of sendSyllabusDataHandler');\n    };\n\n    this.receiveSyllabusDataHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          }, () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          });\n          break;\n\n        case 'tasks':\n          this.setState({\n            tasksData: dataBase,\n            tasksHandlerChoice: '0'\n          });\n          break;\n      }\n    };\n\n    this.dataRequestHandler = (event, dataRequestMessage) => {\n      // alert(` in Store dataRequestHandler-->  typeOfData: ${dataRequestMessage.typeOfData}\n      // handlerChoice: ${dataRequestMessage.handlerChoice}\n      // dataLocation: ${dataRequestMessage.dataLocation}\n      // infoType: ${dataRequestMessage.infoType}\n      // info: ${dataRequestMessage.info.eventTitle}`);\n      let typeOfData = dataRequestMessage.typeOfData,\n          handlerChoice = dataRequestMessage.handlerChoice,\n          dataLocation = dataRequestMessage.dataLocation,\n          infoType = dataRequestMessage.infoType,\n          info = dataRequestMessage.info;\n      let index = null;\n      let id = null;\n      let value = '';\n      let dataRequestDetails = null; //let inspection = event.value;\n\n      switch (typeOfData) {\n        case 'tasks':\n          switch (infoType) {\n            case 'index':\n              index = info;\n              value = event.target.value;\n              break;\n\n            case 'id':\n              id = info;\n              value = event.target.value;\n              alert(`inside Store value: ${value}`);\n              break;\n\n            case 'pickedDayTasks':\n              value = null;\n              break;\n\n            case 'howBusy':\n              value = null;\n              break;\n          } //alert('inside typeOfData of tasks ');\n\n\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            value: value,\n            typeOfData: typeOfData,\n            dataLocation: dataLocation\n          };\n          break;\n\n        case 'events':\n          //alert('inside store case events');\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            typeOfData: typeOfData,\n            dataLocation: dataLocation,\n            value: info\n          };\n          break;\n\n        case 'syllabus':\n          switch (infoType) {\n            case 'index':\n              index = info; //value = event.target.value;\n\n              break;\n\n            case 'id':\n              id = info;\n              value = event.target.value;\n              break;\n          }\n\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            dataLocation: dataLocation,\n            typeOfData: typeOfData,\n            value: value\n          };\n          break;\n\n        case 'obj':\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            typeOfData: typeOfData,\n            dataLocation: dataLocation,\n            value: info\n          };\n          break;\n      } //event, index, handlerType\n\n\n      this.setState({\n        dataRequestDetails: dataRequestDetails\n      });\n    };\n\n    this.dataReceiverHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase\n          });\n          break;\n\n        case 'tasks':\n          this.setState({\n            tasksData: dataBase\n          });\n          break;\n      }\n    };\n\n    this.resetHandlerChoice = () => {\n      this.setState({\n        dataRequestDetails: {\n          handlerChoice: '0',\n          typeOfData: '',\n          index: null,\n          id: null,\n          value: ''\n        }\n      });\n    };\n  }\n\n  render() {\n    // Layout wrap displayed\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(MtheoryContext.Provider, {\n      value: {\n        //all dataBases\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        dataReceiverHandler: this.dataReceiverHandler,\n        resetHandlerChoice: this.resetHandlerChoice,\n        storeData: this.state,\n        //calendarData\n        everythingCalendar: this.state,\n        //syllabusData\n        everythingSyllabus: this.state,\n        //tasksData\n        tasksData: this.state,\n        newDataHandler: this.newDataHandler,\n        showLeftOverTasksForWeek: this.state.showLeftOverTasksForWeek //UI\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(CalendarContext.Provider, {\n      value: {\n        resetHandlerChoice: this.resetHandlerChoice,\n        everythingCalendar: this.state,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        dataReceiverHandler: this.dataReceiverHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(SyllabusContext.Provider, {\n      value: {\n        resetHandlerChoice: this.resetHandlerChoice,\n        everythingSyllabus: this.state,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        dataReceiverHandler: this.dataReceiverHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(SyllabusData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(TasksDataContext.Provider, {\n      value: {\n        crunk: this.state.crunk,\n        dataReceiverHandler: this.dataReceiverHandler,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        tasksData: this.state,\n        resetHandlerChoice: this.resetHandlerChoice,\n        newDataHandler: this.newDataHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(TasksData, {\n      showLeftOverTasksForWeek: this.state.showLeftOverTasksForWeek,\n      dataRequestDetails: this.state.dataRequestDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(RightCockpit, {\n      crunk: this.state.crunk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/Store.js"],"names":["React","Component","RightCockpit","TasksData","SyllabusData","SyllabusContext","TasksDataContext","Aux","Layout","CalendarContext","MtheoryContext","Store","state","showSyllabusList","crunk","showLeftOverLessonsFromSyllabus","showLeftOverTasksForWeek","syllabusData","tasksData","fish","dataRequestDetails","handlerChoice","dataLocation","index","id","value","sendSyllabusDataHandler","setState","syllabusHandlerChoice","console","log","receiveSyllabusDataHandler","dataBase","dataBaseName","lastLessonHeader","tasksHandlerChoice","dataRequestHandler","event","dataRequestMessage","typeOfData","infoType","info","target","alert","dataReceiverHandler","resetHandlerChoice","render","storeData","everythingCalendar","everythingSyllabus","newDataHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\nimport Aux from '../../hoc/Aux';\nimport Layout from '../../hoc/Layout';\nimport CalendarContext from '../../context/calendarContext';\n//import Basic from './react-big-scheduler-master/Basic';\nimport MtheoryContext from '../../context/MtheoryContext';\n\nclass Store extends Component {\n  state = {\n    showSyllabusList: false,\n    crunk: 'Hootie',\n    showLeftOverLessonsFromSyllabus: false,\n    showLeftOverTasksForWeek: false,\n    syllabusData: null,\n    tasksData: null,\n    fish: 'blowFish',\n\n    dataRequestDetails: {\n      handlerChoice: false,\n      dataLocation: null,\n      index: null,\n      id: null,\n      value: null\n    }\n  };\n\n  //Now deals with syllabusData strictly\n  sendSyllabusDataHandler = handlerChoice => {\n    this.setState({ syllabusHandlerChoice: handlerChoice });\n    console.log('Inside of sendSyllabusDataHandler');\n  };\n\n  receiveSyllabusDataHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState(\n          {\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          },\n          () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          }\n        );\n        break;\n\n      case 'tasks':\n        this.setState({\n          tasksData: dataBase,\n          tasksHandlerChoice: '0'\n        });\n        break;\n    }\n  };\n\n  dataRequestHandler = (event, dataRequestMessage) => {\n    // alert(` in Store dataRequestHandler-->  typeOfData: ${dataRequestMessage.typeOfData}\n    // handlerChoice: ${dataRequestMessage.handlerChoice}\n    // dataLocation: ${dataRequestMessage.dataLocation}\n    // infoType: ${dataRequestMessage.infoType}\n    // info: ${dataRequestMessage.info.eventTitle}`);\n    let {\n      typeOfData,\n      handlerChoice,\n      dataLocation,\n      infoType,\n      info\n    } = dataRequestMessage;\n\n    let index = null;\n    let id = null;\n    let value = '';\n    let dataRequestDetails = null;\n    //let inspection = event.value;\n    switch (typeOfData) {\n      case 'tasks':\n        switch (infoType) {\n          case 'index':\n            index = info;\n            value = event.target.value;\n            break;\n          case 'id':\n            id = info;\n            value = event.target.value;\n            alert(`inside Store value: ${value}`);\n            break;\n          case 'pickedDayTasks':\n            value = null;\n            break;\n          case 'howBusy':\n            value = null;\n            break;\n        }\n        //alert('inside typeOfData of tasks ');\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          value: value,\n          typeOfData: typeOfData,\n          dataLocation: dataLocation\n        };\n        break;\n      case 'events':\n        //alert('inside store case events');\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          typeOfData: typeOfData,\n          dataLocation: dataLocation,\n          value: info\n        };\n        break;\n      case 'syllabus':\n        switch (infoType) {\n          case 'index':\n            index = info;\n            //value = event.target.value;\n            break;\n          case 'id':\n            id = info;\n            value = event.target.value;\n            break;\n        }\n\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          dataLocation: dataLocation,\n          typeOfData: typeOfData,\n          value: value\n        };\n        break;\n\n      case 'obj':\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          typeOfData: typeOfData,\n          dataLocation: dataLocation,\n          value: info\n        };\n        break;\n    }\n\n    //event, index, handlerType\n    this.setState({\n      dataRequestDetails: dataRequestDetails\n    });\n  };\n\n  dataReceiverHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState({\n          syllabusData: dataBase\n        });\n        break;\n\n      case 'tasks':\n        this.setState({\n          tasksData: dataBase\n        });\n\n        break;\n    }\n  };\n\n  resetHandlerChoice = () => {\n    this.setState({\n      dataRequestDetails: {\n        handlerChoice: '0',\n        typeOfData: '',\n        index: null,\n        id: null,\n        value: ''\n      }\n    });\n  };\n\n  render() {\n    // Layout wrap displayed\n    return (\n      <Aux>\n        <Layout>\n          <MtheoryContext.Provider\n            value={{\n              //all dataBases\n              dataRequestHandler: this.dataRequestHandler,\n              dataRequestDetails: this.state.dataRequestDetails,\n              dataReceiverHandler: this.dataReceiverHandler,\n              resetHandlerChoice: this.resetHandlerChoice,\n              storeData: this.state,\n              //calendarData\n              everythingCalendar: this.state,\n\n              //syllabusData\n              everythingSyllabus: this.state,\n\n              //tasksData\n              tasksData: this.state,\n              newDataHandler: this.newDataHandler,\n              showLeftOverTasksForWeek: this.state.showLeftOverTasksForWeek\n\n              //UI\n            }}\n          >\n            <CalendarContext.Provider\n              value={{\n                resetHandlerChoice: this.resetHandlerChoice,\n                everythingCalendar: this.state,\n                dataRequestHandler: this.dataRequestHandler,\n                dataRequestDetails: this.state.dataRequestDetails,\n                dataReceiverHandler: this.dataReceiverHandler\n              }}\n            >\n              {/* <Calendar /> */}\n\n              <SyllabusContext.Provider\n                value={{\n                  resetHandlerChoice: this.resetHandlerChoice,\n                  everythingSyllabus: this.state,\n                  dataRequestHandler: this.dataRequestHandler,\n                  dataRequestDetails: this.state.dataRequestDetails,\n                  dataReceiverHandler: this.dataReceiverHandler\n                }}\n              >\n                <SyllabusData></SyllabusData>\n\n                <TasksDataContext.Provider\n                  value={{\n                    crunk: this.state.crunk,\n                    dataReceiverHandler: this.dataReceiverHandler,\n                    dataRequestHandler: this.dataRequestHandler,\n                    dataRequestDetails: this.state.dataRequestDetails,\n                    tasksData: this.state,\n                    resetHandlerChoice: this.resetHandlerChoice,\n                    newDataHandler: this.newDataHandler\n                  }}\n                >\n                  <TasksData\n                    showLeftOverTasksForWeek={\n                      this.state.showLeftOverTasksForWeek\n                    }\n                    dataRequestDetails={this.state.dataRequestDetails}\n                  />\n                  <RightCockpit crunk={this.state.crunk}></RightCockpit>\n                </TasksDataContext.Provider>\n              </SyllabusContext.Provider>\n            </CalendarContext.Provider>\n          </MtheoryContext.Provider>\n        </Layout>\n      </Aux>\n    );\n  }\n}\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}
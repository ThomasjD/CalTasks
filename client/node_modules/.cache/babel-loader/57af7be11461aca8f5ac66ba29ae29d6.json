{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/Template/overview/Performance Demo.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../../Assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar startTime = 0,\n    endTime = 0;\n\nclass PerformanceDemo extends Component {\n  componentDidMount() {\n    endTime = new Date();\n    document.getElementById(\"timeToRender\").innerHTML = \"Time to Render: \" + (endTime - startTime) + \"ms\";\n  }\n\n  render() {\n    var limit = 50000;\n    var y = 100;\n    var data = [];\n    var dataSeries = {\n      type: \"line\"\n    };\n    var dataPoints = [];\n\n    for (var i = 0; i < limit; i += 1) {\n      y += Math.round(Math.random() * 10 - 5);\n      dataPoints.push({\n        x: i,\n        y: y\n      });\n    }\n\n    dataSeries.dataPoints = dataPoints;\n    data.push(dataSeries);\n    const spanStyle = {\n      fontSize: '20px',\n      fontWeight: 'bold',\n      backgroundColor: '#d85757',\n      padding: '2px 4px',\n      color: '#ffffff'\n    };\n    const options = {\n      zoomEnabled: true,\n      animationEnabled: true,\n      title: {\n        text: \"Try Zooming - Panning\"\n      },\n      axisY: {\n        includeZero: false\n      },\n      data: data // random data\n\n    };\n    startTime = new Date();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Performance Demo with 50,000 Datapoints\"), React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"timeToRender\",\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PerformanceDemo;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/Template/overview/Performance Demo.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","startTime","endTime","PerformanceDemo","componentDidMount","Date","document","getElementById","innerHTML","render","limit","y","data","dataSeries","type","dataPoints","i","Math","round","random","push","x","spanStyle","fontSize","fontWeight","backgroundColor","padding","color","options","zoomEnabled","animationEnabled","title","text","axisY","includeZero","ref","chart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;AAEA,IAAIC,SAAS,GAAG,CAAhB;AAAA,IAAmBC,OAAO,GAAG,CAA7B;;AACA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AACpCM,EAAAA,iBAAiB,GAAG;AACtBF,IAAAA,OAAO,GAAG,IAAIG,IAAJ,EAAV;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,GAAoD,sBAAsBN,OAAO,GAAGD,SAAhC,IAA6C,IAAjG;AACA;;AAEDQ,EAAAA,MAAM,GAAG;AACR,QAAIC,KAAK,GAAG,KAAZ;AACA,QAAIC,CAAC,GAAG,GAAR;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,UAAU,GAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAjB;AACA,QAAIC,UAAU,GAAG,EAAjB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAApB,EAA2BM,CAAC,IAAI,CAAhC,EAAmC;AAClCL,MAAAA,CAAC,IAAIM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAAhB,GAAqB,CAAhC,CAAL;AACAJ,MAAAA,UAAU,CAACK,IAAX,CAAgB;AACfC,QAAAA,CAAC,EAAEL,CADY;AAEfL,QAAAA,CAAC,EAAEA;AAFY,OAAhB;AAIA;;AACDE,IAAAA,UAAU,CAACE,UAAX,GAAwBA,UAAxB;AACAH,IAAAA,IAAI,CAACQ,IAAL,CAAUP,UAAV;AAEA,UAAMS,SAAS,GAAG;AACjBC,MAAAA,QAAQ,EAAE,MADO;AAEjBC,MAAAA,UAAU,EAAE,MAFK;AAGjBC,MAAAA,eAAe,EAAE,SAHA;AAIjBC,MAAAA,OAAO,EAAE,SAJQ;AAKjBC,MAAAA,KAAK,EAAE;AALU,KAAlB;AAQA,UAAMC,OAAO,GAAG;AACfC,MAAAA,WAAW,EAAE,IADE;AAEfC,MAAAA,gBAAgB,EAAE,IAFH;AAGfC,MAAAA,KAAK,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OAHQ;AAMfC,MAAAA,KAAK,EAAE;AACNC,QAAAA,WAAW,EAAE;AADP,OANQ;AASftB,MAAAA,IAAI,EAAEA,IATS,CASH;;AATG,KAAhB;AAYAX,IAAAA,SAAS,GAAG,IAAII,IAAJ,EAAZ;AAEA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADD,EAEC,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAIuB,OAA1B;AACE,MAAA,KAAK,EAAEO,GAAG,IAAI,KAAKC,KAAL,GAAaD,GAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAMC;AAAM,MAAA,EAAE,EAAC,cAAT;AAAwB,MAAA,KAAK,EAAEb,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADA;AAUA;;AAvDsC;;AA0DxC,eAAenB,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport CanvasJSReact from '../../Assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n \nvar startTime = 0, endTime = 0;\nclass PerformanceDemo extends Component {\n  \t\tcomponentDidMount() {\n\t\tendTime = new Date();\n\t\tdocument.getElementById(\"timeToRender\").innerHTML = \"Time to Render: \" + (endTime - startTime) + \"ms\";\n\t}\n\t\n\trender() {\n\t\tvar limit = 50000;\n\t\tvar y = 100;    \n\t\tvar data = [];\n\t\tvar dataSeries = { type: \"line\" };\n\t\tvar dataPoints = [];\n\t\t\n\t\tfor (var i = 0; i < limit; i += 1) {\n\t\t\ty += Math.round(Math.random() * 10 - 5);\n\t\t\tdataPoints.push({\n\t\t\t\tx: i,\n\t\t\t\ty: y\n\t\t\t});\n\t\t}\n\t\tdataSeries.dataPoints = dataPoints;\n\t\tdata.push(dataSeries);\n\t\t\n\t\tconst spanStyle = {\n\t\t\tfontSize: '20px', \n\t\t\tfontWeight: 'bold', \n\t\t\tbackgroundColor: '#d85757',\n\t\t\tpadding: '2px 4px',\n\t\t\tcolor: '#ffffff'\n\t\t}\n\t\t\n\t\tconst options = {\n\t\t\tzoomEnabled: true,\n\t\t\tanimationEnabled: true,\n\t\t\ttitle: {\n\t\t\t\ttext: \"Try Zooming - Panning\"\n\t\t\t},\n\t\t\taxisY: {\n\t\t\t\tincludeZero: false\n\t\t\t},\n\t\t\tdata: data  // random data\n\t\t}\n\t\t\n\t\tstartTime = new Date();\n\t\t\t\t\n\t\treturn (\n\t\t<div>\n\t\t\t<h1>Performance Demo with 50,000 Datapoints</h1>\n\t\t\t<CanvasJSChart options = {options} \n\t\t\t\t onRef={ref => this.chart = ref}\n\t\t\t/>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t\t<span id=\"timeToRender\" style={spanStyle}></span>\n\t\t</div>\n\t\t);\n\t}\n}\n \nexport default PerformanceDemo;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/RightCockpit/DatePicker.js\";\n// import React, { useState } from 'react';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// //import moment from 'react-moment';\n// import { compareAsc, format } from 'date-fns';\n// const DatePickerComp = props => {\n//   const [startDate, setStartDate] = useState(new Date());\n//   //const [finishTime, setFinishTime] = useState(new Date());\n//   //let Sunday = moment(startDate).format('MMMM Do YYYY, h:mm:ss a');\n//   //let Sunday = format(startDate, 'MM/dd/yyyy, hh:mm:ss a');\n//   //onsole.log(JSON.stringify(Sunday));\n//   const startDateTimeHandler = date => {\n//     setStartDate(date);\n//     //props.startDateTimeHandler();\n//     //alert(`startDateTime: ${startDate}`);\n//     props.startDateTimeHandler(startDate);\n//     alert(`inside startDateTimeHandler --> startDateTime: ${startDate}`);\n//   };\n//   const handleSubmit = () => {\n//     props.finishTimeHandler(startDate);\n//   };\n//   // const finishTimeHandler = startDate => {\n//   //   setFinishTime(startDate, startDate => props.finishTimeHandler(startDate));\n//   //   console.log(`finishDateTime: ${finishTime}`);\n//   // };\n//   //console.log(`finishTime: ${finishTime}`);\n//   // {\n//   //   \"name\": \"State\",\n//   //   \"value\": \"Wed Jan 08 2020 19:45:00 GMT-0500 (Colombia Standard Time)\",\n//   //   \"subHooks\": []\n//   // }\n//   const startDateTime = (\n//     <React.Fragment>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label>Select Date: </label>\n//           <DatePicker\n//             selected={startDate}\n//             onChange={date => startDateTimeHandler(date)}\n//             name=\"startDate\"\n//             dateFormat=\"MM/dd/yyyy\"\n//             //locale=\"pt-BR\"\n//             showTimeSelect\n//             timeFormat=\"HH:mm\"\n//             timeIntervals={15}\n//             timeCaption=\"Start\"\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <button className=\"btn btn-success\">Add Date</button>\n//         </div>\n//       </form>\n//     </React.Fragment>\n//   );\n//   let showStartDate = null;\n//   if (startDate) {\n//     showStartDate = { startDate };\n//   }\n//   // const endTime = (\n//   //   <DatePicker\n//   //     selected={startDate}\n//   //     onChange={startDate => finishTimeHandler(startDate)}\n//   //     showTimeSelect\n//   //     timeFormat=\"HH:mm\"\n//   //     timeIntervals={15}\n//   //     timeCaption=\"Stop\"\n//   //     dateFormat=\"h:mm aa\"\n//   //   />\n//   // );\n//   //{startDateTime}\n//   // <div>{finishTime ? <div>{finishTime}</div> : null}</div>\n//   return (\n//     <React.Fragment>\n//       <div>{startDateTime}</div>\n//     </React.Fragment>\n//   );\n// };\n// // const [startDate, setStartDate] = useState(new Date());\n// // return (\n// //   <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n// // );\n// // };\n// export default DatePickerComp;\n// import moment from 'moment';\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { compareAsc, format } from 'date-fns';\nimport { da } from 'date-fns/locale';\n\nclass DatePickerPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //startDate: new Date(),\n      showDate1: false,\n      showDate2: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(date) {\n    console.dir(date);\n    console.log(`date.toTimeString(): ${date.toTimeString()}`);\n    console.log(`date.getDate: ${date.getDate()}`);\n    console.log(`date.getDay:${date.getDay()}`);\n    console.log(`date.toISOString: ${date.toISOString()}`);\n    console.log(`date.getFullYear: ${date.getFullYear()}`);\n    console.log(`date.ValueOf: ${date.valueOf()}`);\n    console.log(`date.toJSON: ${date.toJSON()}`); //console.log(`date.setTime: ${date.setTime()}`);\n\n    console.log(`date.toLocaleDateString: ${date.toLocaleDateString()}`);\n    let date2 = date.toString();\n    console.log(date2);\n    console.log(typeof date2);\n    let currenShowDate1 = this.state.startDate;\n    let startTimeDate = {\n      date: date,\n      dateObjectString: date.toString(),\n      toISOString: date.toISOString(),\n      toUTCString: date.toUTCString(),\n      toGMTString: date.toUTCString(),\n      dateString: date.toDateString(),\n      timeString: date.toTimeString(),\n      year: date.getFullYear(),\n      yearShort: date.getYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay(),\n      time: date.toLocaleTimeString(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      UTCDate: date.getUTCDate(),\n      toLocalString: date.toLocaleString(),\n      toLocalDateString: date.toLocaleDateString(),\n      toLocaleTimeString: date.toLocaleTimeString()\n    };\n    let toLocaleString = date.toLocaleString();\n    this.setState({\n      showDate1: !currenShowDate1,\n      startDate: date,\n      startTimeDate: startTimeDate\n    });\n  }\n\n  handleChange2(date) {\n    let currenShowDate2 = this.state.showDate2;\n    let finishTimeDate = {\n      date: date,\n      dateObjectString: date.toString(),\n      toISOString: date.toISOString(),\n      toUTCString: date.toUTCString(),\n      toGMTString: date.toUTCString(),\n      dateString: date.toDateString(),\n      timeString: date.toTimeString(),\n      year: date.getFullYear(),\n      yearShort: date.getYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay(),\n      time: date.toLocaleTimeString(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      UTCDate: date.getUTCDate(),\n      toLocalString: date.toLocaleString(),\n      toLocalDateString: date.toLocaleDateString(),\n      toLocaleTimeString: date.toLocaleTimeString()\n    };\n    let toLocaleString = date.toLocaleString();\n    this.setState({\n      finishTimeDate: finishTimeDate,\n      finishDate: date,\n      showDate2: !currenShowDate2\n    }, () => this.props.finishTimeHandler(this.state.finishTimeDate.date));\n    console.log(`inside handleChange2 datePicker ${this.state.startDate}`);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let main = this.state.startDate;\n    alert(main); //console.log(main.format('L'));\n  } //name=\"startDate\"\n  //dateFormat=\"MM/dd/yyyy\"\n  //dateFormat=\"PP\"\n  //locale=\"p-BR\"\n  //timeFormat=\"p\"\n\n\n  render() {\n    // if (this.state.showDate1) {\n    //   // showDate1 = <div>showDate1: {this.state.startDate}</div>;\n    //   let currenShowDate1 = this.state.showDate1;\n    //   this.setState({\n    //     showDate1: !currenShowDate1\n    //   });\n    // }\n    // if (this.state.showDate2) {\n    //   // showDate2 = <div>showDate2: {this.state.startDate}</div>;\n    //   let currenShowDate2 = this.state.showDate2;\n    //   this.setState({\n    //     showDate2: !currenShowDate2\n    //   });\n    // }\n    //console.log(Object.keys(this.state.startDate));\n    //console.dir(this.state.startDate);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Select Event Date & Time: \"), React.createElement(DatePicker, {\n      placeholderText: \"Choose Start Time\",\n      selected: this.state.showDate1 ? this.state.startTimeDate.toLocalString : this.state.startDate,\n      onChange: date => this.handleChange(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 15,\n      timeCaption: \"Start\",\n      dateFormat: \"MMMM d, yyyy h:mm aa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      placeholderText: \"Choose End Time\",\n      selected: this.state.finishDate,\n      onChange: date => this.handleChange2(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 15,\n      timeCaption: \"End\",\n      dateFormat: \"MMMM d, yyyy h:mm aa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Add Date\")))));\n  }\n\n}\n\nexport default DatePickerPicker;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/RightCockpit/DatePicker.js"],"names":["React","Component","DatePicker","compareAsc","format","da","DatePickerPicker","constructor","props","state","showDate1","showDate2","handleChange","bind","handleSubmit","date","console","dir","log","toTimeString","getDate","getDay","toISOString","getFullYear","valueOf","toJSON","toLocaleDateString","date2","toString","currenShowDate1","startDate","startTimeDate","dateObjectString","toUTCString","toGMTString","dateString","toDateString","timeString","year","yearShort","getYear","month","getMonth","day","time","toLocaleTimeString","hour","getHours","minute","getMinutes","UTCDate","getUTCDate","toLocalString","toLocaleString","toLocalDateString","setState","handleChange2","currenShowDate2","finishTimeDate","finishDate","finishTimeHandler","e","preventDefault","main","alert","render"],"mappings":"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","sourcesContent":["// import React, { useState } from 'react';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// //import moment from 'react-moment';\n\n// import { compareAsc, format } from 'date-fns';\n\n// const DatePickerComp = props => {\n//   const [startDate, setStartDate] = useState(new Date());\n\n//   //const [finishTime, setFinishTime] = useState(new Date());\n//   //let Sunday = moment(startDate).format('MMMM Do YYYY, h:mm:ss a');\n\n//   //let Sunday = format(startDate, 'MM/dd/yyyy, hh:mm:ss a');\n//   //onsole.log(JSON.stringify(Sunday));\n\n//   const startDateTimeHandler = date => {\n//     setStartDate(date);\n//     //props.startDateTimeHandler();\n//     //alert(`startDateTime: ${startDate}`);\n//     props.startDateTimeHandler(startDate);\n\n//     alert(`inside startDateTimeHandler --> startDateTime: ${startDate}`);\n//   };\n\n//   const handleSubmit = () => {\n//     props.finishTimeHandler(startDate);\n//   };\n\n//   // const finishTimeHandler = startDate => {\n//   //   setFinishTime(startDate, startDate => props.finishTimeHandler(startDate));\n//   //   console.log(`finishDateTime: ${finishTime}`);\n//   // };\n\n//   //console.log(`finishTime: ${finishTime}`);\n\n//   // {\n//   //   \"name\": \"State\",\n//   //   \"value\": \"Wed Jan 08 2020 19:45:00 GMT-0500 (Colombia Standard Time)\",\n//   //   \"subHooks\": []\n//   // }\n\n//   const startDateTime = (\n//     <React.Fragment>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label>Select Date: </label>\n//           <DatePicker\n//             selected={startDate}\n//             onChange={date => startDateTimeHandler(date)}\n//             name=\"startDate\"\n//             dateFormat=\"MM/dd/yyyy\"\n//             //locale=\"pt-BR\"\n//             showTimeSelect\n//             timeFormat=\"HH:mm\"\n//             timeIntervals={15}\n//             timeCaption=\"Start\"\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <button className=\"btn btn-success\">Add Date</button>\n//         </div>\n//       </form>\n//     </React.Fragment>\n//   );\n//   let showStartDate = null;\n//   if (startDate) {\n//     showStartDate = { startDate };\n//   }\n//   // const endTime = (\n//   //   <DatePicker\n//   //     selected={startDate}\n//   //     onChange={startDate => finishTimeHandler(startDate)}\n//   //     showTimeSelect\n//   //     timeFormat=\"HH:mm\"\n//   //     timeIntervals={15}\n//   //     timeCaption=\"Stop\"\n//   //     dateFormat=\"h:mm aa\"\n//   //   />\n//   // );\n//   //{startDateTime}\n//   // <div>{finishTime ? <div>{finishTime}</div> : null}</div>\n//   return (\n//     <React.Fragment>\n//       <div>{startDateTime}</div>\n//     </React.Fragment>\n//   );\n// };\n\n// // const [startDate, setStartDate] = useState(new Date());\n// // return (\n// //   <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\n\n// // );\n// // };\n\n// export default DatePickerComp;\n\n// import moment from 'moment';\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { compareAsc, format } from 'date-fns';\nimport { da } from 'date-fns/locale';\n\nclass DatePickerPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //startDate: new Date(),\n      showDate1: false,\n      showDate2: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(date) {\n    console.dir(date);\n    console.log(`date.toTimeString(): ${date.toTimeString()}`);\n    console.log(`date.getDate: ${date.getDate()}`);\n    console.log(`date.getDay:${date.getDay()}`);\n    console.log(`date.toISOString: ${date.toISOString()}`);\n    console.log(`date.getFullYear: ${date.getFullYear()}`);\n    console.log(`date.ValueOf: ${date.valueOf()}`);\n    console.log(`date.toJSON: ${date.toJSON()}`);\n    //console.log(`date.setTime: ${date.setTime()}`);\n\n    console.log(`date.toLocaleDateString: ${date.toLocaleDateString()}`);\n    let date2 = date.toString();\n    console.log(date2);\n    console.log(typeof date2);\n    let currenShowDate1 = this.state.startDate;\n    let startTimeDate = {\n      date: date,\n      dateObjectString: date.toString(),\n      toISOString: date.toISOString(),\n      toUTCString: date.toUTCString(),\n      toGMTString: date.toUTCString(),\n      dateString: date.toDateString(),\n      timeString: date.toTimeString(),\n      year: date.getFullYear(),\n      yearShort: date.getYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay(),\n      time: date.toLocaleTimeString(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      UTCDate: date.getUTCDate(),\n      toLocalString: date.toLocaleString(),\n      toLocalDateString: date.toLocaleDateString(),\n      toLocaleTimeString: date.toLocaleTimeString()\n    };\n    let toLocaleString = date.toLocaleString();\n    this.setState({\n      showDate1: !currenShowDate1,\n      startDate: date,\n      startTimeDate: startTimeDate\n    });\n  }\n\n  handleChange2(date) {\n    let currenShowDate2 = this.state.showDate2;\n    let finishTimeDate = {\n      date: date,\n      dateObjectString: date.toString(),\n      toISOString: date.toISOString(),\n      toUTCString: date.toUTCString(),\n      toGMTString: date.toUTCString(),\n      dateString: date.toDateString(),\n      timeString: date.toTimeString(),\n      year: date.getFullYear(),\n      yearShort: date.getYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay(),\n      time: date.toLocaleTimeString(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      UTCDate: date.getUTCDate(),\n      toLocalString: date.toLocaleString(),\n      toLocalDateString: date.toLocaleDateString(),\n      toLocaleTimeString: date.toLocaleTimeString()\n    };\n    let toLocaleString = date.toLocaleString();\n    this.setState(\n      {\n        finishTimeDate: finishTimeDate,\n        finishDate: date,\n        showDate2: !currenShowDate2\n      },\n      () => this.props.finishTimeHandler(this.state.finishTimeDate.date)\n    );\n    console.log(`inside handleChange2 datePicker ${this.state.startDate}`);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let main = this.state.startDate;\n    alert(main);\n    //console.log(main.format('L'));\n  }\n  //name=\"startDate\"\n  //dateFormat=\"MM/dd/yyyy\"\n  //dateFormat=\"PP\"\n  //locale=\"p-BR\"\n  //timeFormat=\"p\"\n\n  render() {\n    // if (this.state.showDate1) {\n    //   // showDate1 = <div>showDate1: {this.state.startDate}</div>;\n    //   let currenShowDate1 = this.state.showDate1;\n\n    //   this.setState({\n    //     showDate1: !currenShowDate1\n    //   });\n    // }\n\n    // if (this.state.showDate2) {\n    //   // showDate2 = <div>showDate2: {this.state.startDate}</div>;\n\n    //   let currenShowDate2 = this.state.showDate2;\n\n    //   this.setState({\n    //     showDate2: !currenShowDate2\n    //   });\n    // }\n    //console.log(Object.keys(this.state.startDate));\n    //console.dir(this.state.startDate);\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label>Select Event Date & Time: </label>\n\n              <DatePicker\n                placeholderText=\"Choose Start Time\"\n                selected={\n                  this.state.showDate1\n                    ? this.state.startTimeDate.toLocalString\n                    : this.state.startDate\n                }\n                onChange={date => this.handleChange(date)}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                timeCaption=\"Start\"\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n              />\n\n              <DatePicker\n                placeholderText=\"Choose End Time\"\n                selected={this.state.finishDate}\n                onChange={date => this.handleChange2(date)}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                timeCaption=\"End\"\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <button className=\"btn btn-success\">Add Date</button>\n            </div>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DatePickerPicker;\n"]},"metadata":{},"sourceType":"module"}
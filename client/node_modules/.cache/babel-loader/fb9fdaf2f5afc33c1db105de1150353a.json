{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/src/AddMorePopover.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport Col from 'antd/lib/col';\nimport Row from 'antd/lib/row';\nimport Icon from 'antd/lib/icon';\nimport 'antd/lib/grid/style/index.css';\nimport EventItem from './EventItem';\nimport DnDSource from './DnDSource';\n\nclass AddMorePopover extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dndSource: new DnDSource(props => {\n        return props.eventItem;\n      }, EventItem)\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          headerItem = _this$props.headerItem,\n          left = _this$props.left,\n          top = _this$props.top,\n          height = _this$props.height,\n          closeAction = _this$props.closeAction,\n          schedulerData = _this$props.schedulerData;\n    const config = schedulerData.config,\n          localeMoment = schedulerData.localeMoment;\n    const time = headerItem.time,\n          start = headerItem.start,\n          end = headerItem.end,\n          events = headerItem.events;\n    let header = localeMoment(time).format(config.addMorePopoverHeaderFormat);\n    let durationStart = localeMoment(start);\n    let durationEnd = localeMoment(end);\n    let eventList = [];\n    let i = 0;\n    let DnDEventItem = this.state.dndSource.getDragSource();\n    events.forEach(evt => {\n      if (evt !== undefined) {\n        i++;\n        let eventStart = localeMoment(evt.eventItem.start);\n        let eventEnd = localeMoment(evt.eventItem.end);\n        let isStart = eventStart >= durationStart;\n        let isEnd = eventEnd < durationEnd;\n        let eventItemLeft = 10;\n        let eventItemWidth = 138;\n        let eventItemTop = 12 + i * config.eventItemLineHeight;\n        let eventItem = React.createElement(DnDEventItem, Object.assign({}, this.props, {\n          key: evt.eventItem.id,\n          eventItem: evt.eventItem,\n          leftIndex: 0,\n          isInPopover: true,\n          isStart: isStart,\n          isEnd: isEnd,\n          rightIndex: 1,\n          left: eventItemLeft,\n          width: eventItemWidth,\n          top: eventItemTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }));\n        eventList.push(eventItem);\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"add-more-popover-overlay\",\n      style: {\n        left: left,\n        top: top,\n        height: height,\n        width: '170px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-between\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: \"22\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"base-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, header)), React.createElement(Col, {\n      span: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => {\n        closeAction(undefined);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"cross\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })))), eventList);\n  }\n\n}\n\nAddMorePopover.propTypes = {\n  schedulerData: PropTypes.object.isRequired,\n  headerItem: PropTypes.object.isRequired,\n  left: PropTypes.number.isRequired,\n  top: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  closeAction: PropTypes.func.isRequired,\n  subtitleGetter: PropTypes.func,\n  moveEvent: PropTypes.func,\n  eventItemClick: PropTypes.func,\n  viewEventClick: PropTypes.func,\n  viewEventText: PropTypes.string,\n  viewEvent2Click: PropTypes.func,\n  viewEvent2Text: PropTypes.string,\n  eventItemTemplateResolver: PropTypes.func\n};\nexport default AddMorePopover;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/src/AddMorePopover.js"],"names":["React","Component","PropTypes","Col","Row","Icon","EventItem","DnDSource","AddMorePopover","constructor","props","state","dndSource","eventItem","render","headerItem","left","top","height","closeAction","schedulerData","config","localeMoment","time","start","end","events","header","format","addMorePopoverHeaderFormat","durationStart","durationEnd","eventList","i","DnDEventItem","getDragSource","forEach","evt","undefined","eventStart","eventEnd","isStart","isEnd","eventItemLeft","eventItemWidth","eventItemTop","eventItemLineHeight","id","push","width","propTypes","object","isRequired","number","func","subtitleGetter","moveEvent","eventItemClick","viewEventClick","viewEventText","string","viewEvent2Click","viewEvent2Text","eventItemTemplateResolver"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\nimport Col from 'antd/lib/col'\r\nimport Row from 'antd/lib/row'\r\nimport Icon from 'antd/lib/icon'\r\nimport 'antd/lib/grid/style/index.css'\r\nimport EventItem from './EventItem'\r\nimport DnDSource from './DnDSource'\r\n\r\nclass AddMorePopover extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dndSource: new DnDSource((props) => { return props.eventItem;}, EventItem),\r\n        }\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n        headerItem: PropTypes.object.isRequired,\r\n        left: PropTypes.number.isRequired,\r\n        top: PropTypes.number.isRequired,\r\n        height: PropTypes.number.isRequired,\r\n        closeAction: PropTypes.func.isRequired,\r\n        subtitleGetter: PropTypes.func,\r\n        moveEvent: PropTypes.func,\r\n        eventItemClick: PropTypes.func,\r\n        viewEventClick: PropTypes.func,\r\n        viewEventText:PropTypes.string,\r\n        viewEvent2Click: PropTypes.func,\r\n        viewEvent2Text: PropTypes.string,\r\n        eventItemTemplateResolver: PropTypes.func,\r\n    }\r\n\r\n    render() {\r\n        const {headerItem, left, top, height, closeAction, schedulerData} = this.props;\r\n        const {config, localeMoment} = schedulerData;\r\n        const {time, start, end, events} = headerItem;\r\n        let header = localeMoment(time).format(config.addMorePopoverHeaderFormat);\r\n        let durationStart = localeMoment(start);\r\n        let durationEnd = localeMoment(end);\r\n        let eventList = [];\r\n        let i = 0;\r\n        let DnDEventItem = this.state.dndSource.getDragSource();\r\n        events.forEach((evt) => {\r\n            if(evt !== undefined) {\r\n                i++;\r\n                let eventStart = localeMoment(evt.eventItem.start);\r\n                let eventEnd = localeMoment(evt.eventItem.end);\r\n                let isStart = eventStart >= durationStart;\r\n                let isEnd = eventEnd < durationEnd;\r\n                let eventItemLeft = 10;\r\n                let eventItemWidth = 138;\r\n                let eventItemTop = 12 + i*config.eventItemLineHeight;\r\n                let eventItem = <DnDEventItem\r\n                                   {...this.props}\r\n                                   key={evt.eventItem.id}\r\n                                   eventItem={evt.eventItem}\r\n                                   leftIndex={0}\r\n                                   isInPopover={true}\r\n                                   isStart={isStart}\r\n                                   isEnd={isEnd}\r\n                                   rightIndex={1}\r\n                                   left={eventItemLeft}\r\n                                   width={eventItemWidth}\r\n                                   top={eventItemTop}\r\n                                   />\r\n                eventList.push(eventItem);\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div className=\"add-more-popover-overlay\"  style={{left: left, top: top, height: height, width: '170px'}}>\r\n                <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n                    <Col span=\"22\">\r\n                        <span className=\"base-text\">{header}</span>\r\n                    </Col>\r\n                    <Col span=\"2\">\r\n                        <span onClick={() => {closeAction(undefined);}}><Icon type=\"cross\"></Icon></span>\r\n                    </Col>\r\n                </Row>\r\n                {eventList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddMorePopover"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/Store.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\nimport Aux from '../../hoc/Aux';\nimport Layout from '../../hoc/Layout/Layout';\nimport CalendarContext from '../../context/calendarContext'; //import Basic from './react-big-scheduler-master/Basic';\n\nimport StoreDataContext from '../../context/StoreDataContext';\nimport ObjectiveData from './ObjectiveData';\nimport UiData from './UiData';\nimport Modal from '../../components/UI/Modal/Modal';\n\nclass Store extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contentChoice: '0',\n      reRenderTodayTasks: false,\n      //TodayTasks inside useEffect()\n      showSyllabusList: false,\n      crunk: 'Hootie',\n      showLeftOverLessonsFromSyllabus: false,\n      showLeftOverTasksForWeek: false,\n      syllabusData: null,\n      tasksData: null,\n      fish: 'blowFish',\n      dataRequestDetails: {\n        handlerChoice: false,\n        dataLocation: null,\n        index: null,\n        id: null,\n        value: null\n      }\n    };\n\n    this.contentViewHandler = event => {\n      let newViewChoice = event.target.value;\n\n      if (newViewChoice === this.state.contentChoice) {\n        return this.setState({\n          contentChoice: '0'\n        });\n      } else {\n        this.setState({\n          contentChoice: newViewChoice\n        });\n      }\n    };\n\n    this.receiveSyllabusDataHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          }, () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          });\n          break;\n\n        case 'tasks':\n          this.setState({\n            tasksData: dataBase,\n            tasksHandlerChoice: '0'\n          });\n          break;\n      }\n    };\n\n    this.dataRequestHandler = (event, dataRequestMessage) => {\n      // alert(` in Store dataRequestHandler-->  typeOfData: ${dataRequestMessage.typeOfData}\n      // handlerChoice: ${dataRequestMessage.handlerChoice}\n      // dataLocation: ${dataRequestMessage.dataLocation}\n      // infoType: ${dataRequestMessage.infoType}\n      // info: ${dataRequestMessage.info}`);\n      let typeOfData = dataRequestMessage.typeOfData,\n          handlerChoice = dataRequestMessage.handlerChoice,\n          dataLocation = dataRequestMessage.dataLocation,\n          infoType = dataRequestMessage.infoType,\n          info = dataRequestMessage.info;\n      let index = null;\n      let id = null;\n      let value = '';\n      let dataRequestDetails = null; //let inspection = event.value;\n\n      switch (typeOfData) {\n        case 'UiData':\n          value = info; //alert(`inside Store dataRequest typeOfData: UiData value: ${value}`);\n\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            value: value,\n            typeOfData: typeOfData,\n            dataLocation: dataLocation\n          };\n          break;\n\n        case 'tasks':\n          switch (infoType) {\n            case 'index':\n              index = info;\n              value = event.target.value;\n              break;\n\n            case 'id':\n              id = info;\n              value = event.target.value;\n              break;\n\n            case 'pickedDayTasks':\n              value = null;\n              break;\n\n            case 'howBusy':\n              value = null;\n              break;\n          } //alert('inside typeOfData of tasks ');\n\n\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            value: value,\n            typeOfData: typeOfData,\n            dataLocation: dataLocation\n          };\n          break;\n\n        case 'events':\n          //alert('inside store case events');\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            typeOfData: typeOfData,\n            dataLocation: dataLocation,\n            value: info\n          };\n          break;\n\n        case 'syllabus':\n          switch (infoType) {\n            case 'index':\n              index = info; //value = event.target.value;\n\n              break;\n\n            case 'id':\n              id = info;\n              value = event.target.value;\n              break;\n          }\n\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            dataLocation: dataLocation,\n            typeOfData: typeOfData,\n            value: value\n          };\n          break;\n\n        case 'obj':\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            typeOfData: typeOfData,\n            dataLocation: dataLocation,\n            value: info\n          };\n          break;\n      } //event, index, handlerType\n\n\n      this.setState({\n        dataRequestDetails: dataRequestDetails\n      });\n    };\n\n    this.dataReceiverHandler = dataBase => {\n      console.log(_objectSpread({}, dataBase));\n\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          //alert(`Inside of dataReceiverHandler syllabus statement:`);\n          this.setState({\n            syllabusData: dataBase\n          });\n          break;\n\n        case 'tasks':\n          //alert(`Inside of dataReceiverHandler taskData dataBase: ${dataBase}`);\n          // console.log(dataBase);\n          this.setState({\n            tasksData: dataBase,\n            dataLocation: dataBase.dataLocation\n          });\n          break;\n\n        case 'obj':\n          this.setState({\n            dataBudget: dataBase,\n            dataLocation: dataBase.dataLocation,\n            showDataBudget: true //Cockpit: prevent setState() infinite\n\n          } //   () => console.log(this.state.dataBudget)\n          );\n          break;\n      }\n    };\n\n    this.resetHandlerChoice = () => {\n      this.setState({\n        dataRequestDetails: {\n          handlerChoice: '0',\n          typeOfData: '',\n          index: null,\n          id: null,\n          value: ''\n        }\n      });\n    };\n  }\n\n  render() {\n    // Layout wrap displayed\n    console.log(this.state.dataBudget);\n\n    if (this.state.dataBudget) {}\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(StoreDataContext.Provider, {\n      value: {\n        //all dataBases\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        dataReceiverHandler: this.dataReceiverHandler,\n        resetHandlerChoice: this.resetHandlerChoice,\n        storeData: this.state,\n        //calendarData\n        everythingCalendar: this.state,\n        //syllabusData\n        everythingSyllabus: this.state,\n        //tasksData\n        tasksData: this.state,\n        newDataHandler: this.newDataHandler,\n        showLeftOverTasksForWeek: this.state.showLeftOverTasksForWeek,\n        //UI\n        contentViewHandler: this.contentViewHandler,\n        contentChoice: this.state.contentChoice,\n        //ObjectiveData\n        dataBudget: this.state\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(CalendarContext.Provider, {\n      value: {\n        resetHandlerChoice: this.resetHandlerChoice,\n        everythingCalendar: this.state,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        dataReceiverHandler: this.dataReceiverHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(ObjectiveData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(SyllabusContext.Provider, {\n      value: {\n        resetHandlerChoice: this.resetHandlerChoice,\n        everythingSyllabus: this.state,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        dataReceiverHandler: this.dataReceiverHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(SyllabusData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(TasksDataContext.Provider, {\n      value: {\n        crunk: this.state.crunk,\n        dataReceiverHandler: this.dataReceiverHandler,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        tasksData: this.state,\n        resetHandlerChoice: this.resetHandlerChoice,\n        newDataHandler: this.newDataHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(TasksData, {\n      showLeftOverTasksForWeek: this.state.showLeftOverTasksForWeek,\n      dataRequestDetails: this.state.dataRequestDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(RightCockpit, {\n      crunk: this.state.crunk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/Store.js"],"names":["React","Component","RightCockpit","TasksData","SyllabusData","SyllabusContext","TasksDataContext","Aux","Layout","CalendarContext","StoreDataContext","ObjectiveData","UiData","Modal","Store","state","contentChoice","reRenderTodayTasks","showSyllabusList","crunk","showLeftOverLessonsFromSyllabus","showLeftOverTasksForWeek","syllabusData","tasksData","fish","dataRequestDetails","handlerChoice","dataLocation","index","id","value","contentViewHandler","event","newViewChoice","target","setState","receiveSyllabusDataHandler","dataBase","dataBaseName","syllabusHandlerChoice","console","log","lastLessonHeader","tasksHandlerChoice","dataRequestHandler","dataRequestMessage","typeOfData","infoType","info","dataReceiverHandler","dataBudget","showDataBudget","resetHandlerChoice","render","storeData","everythingCalendar","everythingSyllabus","newDataHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\nimport Aux from '../../hoc/Aux';\nimport Layout from '../../hoc/Layout/Layout';\nimport CalendarContext from '../../context/calendarContext';\n//import Basic from './react-big-scheduler-master/Basic';\nimport StoreDataContext from '../../context/StoreDataContext';\nimport ObjectiveData from './ObjectiveData';\nimport UiData from './UiData';\nimport Modal from '../../components/UI/Modal/Modal';\nclass Store extends Component {\n  state = {\n    contentChoice: '0',\n    reRenderTodayTasks: false, //TodayTasks inside useEffect()\n    showSyllabusList: false,\n    crunk: 'Hootie',\n    showLeftOverLessonsFromSyllabus: false,\n    showLeftOverTasksForWeek: false,\n    syllabusData: null,\n    tasksData: null,\n    fish: 'blowFish',\n\n    dataRequestDetails: {\n      handlerChoice: false,\n      dataLocation: null,\n      index: null,\n      id: null,\n      value: null\n    }\n  };\n  contentViewHandler = event => {\n    let newViewChoice = event.target.value;\n    if (newViewChoice === this.state.contentChoice) {\n      return this.setState({ contentChoice: '0' });\n    } else {\n      this.setState({ contentChoice: newViewChoice });\n    }\n  };\n\n  receiveSyllabusDataHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState(\n          {\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          },\n          () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          }\n        );\n        break;\n\n      case 'tasks':\n        this.setState({\n          tasksData: dataBase,\n          tasksHandlerChoice: '0'\n        });\n        break;\n    }\n  };\n\n  dataRequestHandler = (event, dataRequestMessage) => {\n    // alert(` in Store dataRequestHandler-->  typeOfData: ${dataRequestMessage.typeOfData}\n    // handlerChoice: ${dataRequestMessage.handlerChoice}\n    // dataLocation: ${dataRequestMessage.dataLocation}\n    // infoType: ${dataRequestMessage.infoType}\n    // info: ${dataRequestMessage.info}`);\n    let {\n      typeOfData,\n      handlerChoice,\n      dataLocation,\n      infoType,\n      info\n    } = dataRequestMessage;\n\n    let index = null;\n    let id = null;\n    let value = '';\n    let dataRequestDetails = null;\n    //let inspection = event.value;\n    switch (typeOfData) {\n      case 'UiData':\n        value = info;\n        //alert(`inside Store dataRequest typeOfData: UiData value: ${value}`);\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          value: value,\n          typeOfData: typeOfData,\n          dataLocation: dataLocation\n        };\n        break;\n      case 'tasks':\n        switch (infoType) {\n          case 'index':\n            index = info;\n            value = event.target.value;\n\n            break;\n          case 'id':\n            id = info;\n            value = event.target.value;\n\n            break;\n          case 'pickedDayTasks':\n            value = null;\n            break;\n          case 'howBusy':\n            value = null;\n            break;\n        }\n        //alert('inside typeOfData of tasks ');\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          value: value,\n          typeOfData: typeOfData,\n          dataLocation: dataLocation\n        };\n        break;\n      case 'events':\n        //alert('inside store case events');\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          typeOfData: typeOfData,\n          dataLocation: dataLocation,\n          value: info\n        };\n        break;\n      case 'syllabus':\n        switch (infoType) {\n          case 'index':\n            index = info;\n            //value = event.target.value;\n            break;\n          case 'id':\n            id = info;\n            value = event.target.value;\n            break;\n        }\n\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          dataLocation: dataLocation,\n          typeOfData: typeOfData,\n          value: value\n        };\n        break;\n\n      case 'obj':\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          typeOfData: typeOfData,\n          dataLocation: dataLocation,\n          value: info\n        };\n        break;\n    }\n\n    //event, index, handlerType\n    this.setState({\n      dataRequestDetails: dataRequestDetails\n    });\n  };\n\n  dataReceiverHandler = dataBase => {\n    console.log({ ...dataBase });\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        //alert(`Inside of dataReceiverHandler syllabus statement:`);\n        this.setState({\n          syllabusData: dataBase\n        });\n        break;\n\n      case 'tasks':\n        //alert(`Inside of dataReceiverHandler taskData dataBase: ${dataBase}`);\n        // console.log(dataBase);\n        this.setState({\n          tasksData: dataBase,\n          dataLocation: dataBase.dataLocation\n        });\n\n        break;\n      case 'obj':\n        this.setState(\n          {\n            dataBudget: dataBase,\n            dataLocation: dataBase.dataLocation,\n            showDataBudget: true //Cockpit: prevent setState() infinite\n          }\n          //   () => console.log(this.state.dataBudget)\n        );\n\n        break;\n    }\n  };\n\n  resetHandlerChoice = () => {\n    this.setState({\n      dataRequestDetails: {\n        handlerChoice: '0',\n        typeOfData: '',\n        index: null,\n        id: null,\n        value: ''\n      }\n    });\n  };\n\n  render() {\n    // Layout wrap displayed\n    console.log(this.state.dataBudget);\n    if (this.state.dataBudget) {\n    }\n    return (\n      <Aux>\n        <StoreDataContext.Provider\n          value={{\n            //all dataBases\n            dataRequestHandler: this.dataRequestHandler,\n            dataRequestDetails: this.state.dataRequestDetails,\n            dataReceiverHandler: this.dataReceiverHandler,\n            resetHandlerChoice: this.resetHandlerChoice,\n            storeData: this.state,\n            //calendarData\n            everythingCalendar: this.state,\n\n            //syllabusData\n            everythingSyllabus: this.state,\n\n            //tasksData\n            tasksData: this.state,\n            newDataHandler: this.newDataHandler,\n            showLeftOverTasksForWeek: this.state.showLeftOverTasksForWeek,\n\n            //UI\n            contentViewHandler: this.contentViewHandler,\n            contentChoice: this.state.contentChoice,\n            //ObjectiveData\n            dataBudget: this.state\n          }}\n        >\n          {/* <Layout> */}\n          <CalendarContext.Provider\n            value={{\n              resetHandlerChoice: this.resetHandlerChoice,\n              everythingCalendar: this.state,\n              dataRequestHandler: this.dataRequestHandler,\n              dataRequestDetails: this.state.dataRequestDetails,\n              dataReceiverHandler: this.dataReceiverHandler\n            }}\n          >\n            <ObjectiveData />\n\n            <SyllabusContext.Provider\n              value={{\n                resetHandlerChoice: this.resetHandlerChoice,\n                everythingSyllabus: this.state,\n                dataRequestHandler: this.dataRequestHandler,\n                dataRequestDetails: this.state.dataRequestDetails,\n                dataReceiverHandler: this.dataReceiverHandler\n              }}\n            >\n              <SyllabusData></SyllabusData>\n              {/* <UiData></UiData> */}\n              {/* <Modal>\n                  <h3>calTech</h3>\n                </Modal> */}\n              <TasksDataContext.Provider\n                value={{\n                  crunk: this.state.crunk,\n                  dataReceiverHandler: this.dataReceiverHandler,\n                  dataRequestHandler: this.dataRequestHandler,\n                  dataRequestDetails: this.state.dataRequestDetails,\n                  tasksData: this.state,\n                  resetHandlerChoice: this.resetHandlerChoice,\n                  newDataHandler: this.newDataHandler\n                }}\n              >\n                <TasksData\n                  showLeftOverTasksForWeek={this.state.showLeftOverTasksForWeek}\n                  dataRequestDetails={this.state.dataRequestDetails}\n                />\n                <RightCockpit crunk={this.state.crunk}></RightCockpit>\n              </TasksDataContext.Provider>\n            </SyllabusContext.Provider>\n          </CalendarContext.Provider>\n          {/* </Layout> */}\n        </StoreDataContext.Provider>\n      </Aux>\n    );\n  }\n}\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}
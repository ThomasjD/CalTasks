{"ast":null,"code":"import _slicedToArray from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Creation/newTask.js\";\nimport React, { useState, useContext } from 'react'; //import useForm from 'react-hook-form';\n\nimport { tsPropertySignature } from '@babel/types';\nimport DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\nimport RightCockpit from '../../containers/RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\n\nconst NewTask = props => {\n  const tasksContext = useContext(TasksContext);\n\n  const _useState = useState({\n    task: {\n      id: '',\n      timeOfDay: '',\n      task: '',\n      deadline: '',\n      category: '',\n      assignedTimeStart: '',\n      assignedTimeStop: '',\n      assignedDate: '',\n      taskDuration: '',\n      //\n      blockOffTimeSlot: false,\n      showStartTimeDate: false,\n      showFinishTimeDate: false\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        newTask = _useState2[0],\n        setNewTask = _useState2[1];\n\n  const change = e => {\n    let name = e.target.name;\n    let newValue = e.target.value; //array of keys [a,b,c,d] --> for every key return {key: value}\n\n    let objListArray = Object.keys(newTask.task).map(iKey => {\n      //return an array of objects [{key: value},{key: value},{key: value}]\n      if (iKey == name) {\n        return {\n          [iKey]: newValue\n        };\n      } else {\n        return {\n          [iKey]: newTask.task[iKey]\n        };\n      }\n    });\n    setNewTask({\n      task: Object.assign(...objListArray)\n    });\n    console.log(newTask); //let currentTask = newTask.name\n    //array = [id, todo, deadline, category]\n    //let currentTask = { ...newTask };\n    //Objects.key(newTask.task).map(infoKey => {});\n    //map out all keys [key1,key2,key3] = keyarray\n    //if a key  match matches the name of event.target then find index\n    //make new object\n\n    /*map(keyarry) => key {\n          if (key = name) {\n            key: e.target.value\n          }else\n          {key: newTask.key}\n         }\n          */\n    // setNewTask({\n    //   [e.target.name]: e.target.value\n    // });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setNewTask({\n      task: {\n        id: newTask.task['todo'],\n        todo: newTask.task['todo'],\n        deadline: newTask.task['deadline'],\n        category: newTask.task['category']\n      }\n    }); //props.newestTask(newTask);\n    //reset the state for this component\n\n    setNewTask({\n      task: {\n        id: '',\n        todo: '',\n        deadline: '',\n        category: ''\n      }\n    });\n    console.log(`after resetting state ${newTask}`);\n    props.newestTaskHandler('3');\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Task\"), React.createElement(\"textarea\", {\n    className: \"form-control form-control-sm\",\n    name: \"task\",\n    type: \"text\",\n    placeholder: \"Enter new task.\",\n    onChange: e => change(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Note\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"eventNote\",\n    className: \"form-control\",\n    defaultValue: \"Watch on Chanel 13\" //value={this.state.eventNote}\n    ,\n    onChange: e => this.eventNoteChange(e) //ref={eventNoteRef => eventNoteRef.focus()}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Task Category\"), React.createElement(\"select\", {\n    name: \"category\",\n    className: \"form-control\",\n    onChange: e => change(e),\n    id: \"category\",\n    defaultValue: \"programing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"programing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"programing\"), React.createElement(\"option\", {\n    value: \"workout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"workout\"), React.createElement(\"option\", {\n    value: \"errand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"errand\"), React.createElement(\"option\", {\n    value: \"errand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"chore\"), React.createElement(\"option\", {\n    value: \"errand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"errand\"))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Start Time\"), React.createElement(DatePickerPicker, {\n    startDateTimeHandler: date => this.startDateTimeHandler(date),\n    finishTimeDateHandler: date => this.finishTimeHandler(date),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Deadline\"), React.createElement(\"textarea\", {\n    onChange: e => change(e),\n    className: \"form-control\",\n    id: \"deadline\",\n    rows: \"3\",\n    name: \"deadline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(DatePickerPicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, ' ', \"Submit\"))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, props.newTaskTitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, props.category));\n};\n\nexport default NewTask;\n{\n  /* <React.Fragment>\n  <div className=\"container\">\n    <form onSubmit={props.newTaskInfo}>\n      <div className=\"form-group\">\n        <label>Task</label>\n        <input\n          className=\"form-control form-control-sm\"\n          name=\"newTaskTitle\"\n          type=\"text\"\n          placeholder=\"Enter new task.\"\n          onChange={props.newTaskInfo}\n        />\n      </div>\n       <div className=\"form-group\">\n        <label>Location</label>\n        <select\n          name=\"location\"\n          onClick={props.newTaskInfo}\n          className=\"form-control\"\n          id=\"location\"\n        >\n          <option value=\"Poplado\">Poplado</option>\n          <option value=\"Laureles\">Laureles</option>\n          <option value=\"Sabaneta\">Sabaneta</option>\n        </select>\n      </div>\n       <div className=\"form-group\">\n        <label>Deadline</label>\n        <textarea\n          className=\"form-control\"\n          id=\"deadline\"\n          rows=\"3\"\n          name=\"deadline\"\n          onChange={props.newTaskInfo}\n        ></textarea>\n      </div>\n       <input type=\"submit\" value=\"Submit\" />\n    </form>\n  </div>\n  <p>{props.newTaskTitle}</p>\n  <p>{props.category}</p>\n  <p>{props.location}</p>\n  </React.Fragment>; */\n}\n{\n  /* <React.Fragment>\n      <div className=\"container\">\n        <form onSubmit={e => onSubmit(e)}>\n          <div className=\"form-group\">\n            <label>Task</label>\n            <textarea\n              className=\"form-control form-control-sm\"\n              name=\"todo\"\n              type=\"text\"\n              placeholder=\"Enter new task.\"\n              onChange={e => change(e)}\n            />\n          </div>\n           <div className=\"form-group\">\n            <label>category</label>\n            <select\n              name=\"category\"\n              className=\"form-control\"\n              onChange={e => change(e)}\n              id=\"category\"\n              defaultValue=\"programing\"\n            >\n              <option value=\"programing\">programing</option>\n              <option value=\"workout\">workout</option>\n              <option value=\"errand\">errand</option>\n            </select>\n          </div>\n           <div className=\"form-group\">\n            <label>Deadline</label>\n            <textarea\n              onChange={e => change(e)}\n              className=\"form-control\"\n              id=\"deadline\"\n              rows=\"3\"\n              name=\"deadline\"\n            ></textarea>\n          </div>\n           <DatePickerPicker />\n          <button type=\"submit\" value=\"Submit\">\n            {' '}\n            Submit\n          </button>\n        </form>\n      </div>\n      <p>{props.newTaskTitle}</p>\n      <p>{props.category}</p>\n    </React.Fragment> */\n}","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Creation/newTask.js"],"names":["React","useState","useContext","tsPropertySignature","DatePickerPicker","RightCockpit","TasksContext","NewTask","props","tasksContext","task","id","timeOfDay","deadline","category","assignedTimeStart","assignedTimeStop","assignedDate","taskDuration","blockOffTimeSlot","showStartTimeDate","showFinishTimeDate","newTask","setNewTask","change","e","name","target","newValue","value","objListArray","Object","keys","map","iKey","assign","console","log","onSubmit","preventDefault","todo","newestTaskHandler","eventNoteChange","date","startDateTimeHandler","finishTimeHandler","newTaskTitle"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\n//import useForm from 'react-hook-form';\nimport { tsPropertySignature } from '@babel/types';\nimport DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\nimport RightCockpit from '../../containers/RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\n\nconst NewTask = props => {\n  const tasksContext = useContext(TasksContext);\n  const [newTask, setNewTask] = useState({\n    task: {\n      id: '',\n      timeOfDay: '',\n      task: '',\n      deadline: '',\n      category: '',\n      assignedTimeStart: '',\n      assignedTimeStop: '',\n      assignedDate: '',\n      taskDuration: '', //\n      blockOffTimeSlot: false,\n      showStartTimeDate: false,\n      showFinishTimeDate: false\n    }\n  });\n\n  const change = e => {\n    let name = e.target.name;\n\n    let newValue = e.target.value;\n    //array of keys [a,b,c,d] --> for every key return {key: value}\n    let objListArray = Object.keys(newTask.task).map(iKey => {\n      //return an array of objects [{key: value},{key: value},{key: value}]\n      if (iKey == name) {\n        return { [iKey]: newValue };\n      } else {\n        return { [iKey]: newTask.task[iKey] };\n      }\n    });\n\n    setNewTask({\n      task: Object.assign(...objListArray)\n    });\n    console.log(newTask);\n    //let currentTask = newTask.name\n\n    //array = [id, todo, deadline, category]\n    //let currentTask = { ...newTask };\n    //Objects.key(newTask.task).map(infoKey => {});\n\n    //map out all keys [key1,key2,key3] = keyarray\n    //if a key  match matches the name of event.target then find index\n    //make new object\n    /*map(keyarry) => key {\n          if (key = name) {\n            key: e.target.value\n          }else\n          {key: newTask.key}\n\n        }\n\n\n        */\n\n    // setNewTask({\n    //   [e.target.name]: e.target.value\n    // });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setNewTask({\n      task: {\n        id: newTask.task['todo'],\n        todo: newTask.task['todo'],\n        deadline: newTask.task['deadline'],\n        category: newTask.task['category']\n      }\n    });\n    //props.newestTask(newTask);\n    //reset the state for this component\n    setNewTask({\n      task: {\n        id: '',\n        todo: '',\n        deadline: '',\n        category: ''\n      }\n    });\n\n    console.log(`after resetting state ${newTask}`);\n    props.newestTaskHandler('3');\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <form onSubmit={e => onSubmit(e)}>\n          <div className=\"form-group\">\n            <label>Task</label>\n            <textarea\n              className=\"form-control form-control-sm\"\n              name=\"task\"\n              type=\"text\"\n              placeholder=\"Enter new task.\"\n              onChange={e => change(e)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Note</label>\n            <input\n              type=\"text\"\n              name=\"eventNote\"\n              className=\"form-control\"\n              defaultValue=\"Watch on Chanel 13\"\n              //value={this.state.eventNote}\n              onChange={e => this.eventNoteChange(e)}\n              //ref={eventNoteRef => eventNoteRef.focus()}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Task Category</label>\n            <select\n              name=\"category\"\n              className=\"form-control\"\n              onChange={e => change(e)}\n              id=\"category\"\n              defaultValue=\"programing\"\n            >\n              <option value=\"programing\">programing</option>\n              <option value=\"workout\">workout</option>\n              <option value=\"errand\">errand</option>\n              <option value=\"errand\">chore</option>\n              <option value=\"errand\">errand</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Start Time</label>\n\n            <DatePickerPicker\n              startDateTimeHandler={date => this.startDateTimeHandler(date)}\n              finishTimeDateHandler={date => this.finishTimeHandler(date)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Deadline</label>\n            <textarea\n              onChange={e => change(e)}\n              className=\"form-control\"\n              id=\"deadline\"\n              rows=\"3\"\n              name=\"deadline\"\n            ></textarea>\n          </div>\n\n          <DatePickerPicker></DatePickerPicker>\n          <button type=\"submit\" value=\"Submit\">\n            {' '}\n            Submit\n          </button>\n        </form>\n      </div>\n      <p>{props.newTaskTitle}</p>\n      <p>{props.category}</p>\n    </React.Fragment>\n  );\n};\n\nexport default NewTask;\n\n{\n  /* <React.Fragment>\n  <div className=\"container\">\n    <form onSubmit={props.newTaskInfo}>\n      <div className=\"form-group\">\n        <label>Task</label>\n        <input\n          className=\"form-control form-control-sm\"\n          name=\"newTaskTitle\"\n          type=\"text\"\n          placeholder=\"Enter new task.\"\n          onChange={props.newTaskInfo}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Location</label>\n        <select\n          name=\"location\"\n          onClick={props.newTaskInfo}\n          className=\"form-control\"\n          id=\"location\"\n        >\n          <option value=\"Poplado\">Poplado</option>\n          <option value=\"Laureles\">Laureles</option>\n          <option value=\"Sabaneta\">Sabaneta</option>\n        </select>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Deadline</label>\n        <textarea\n          className=\"form-control\"\n          id=\"deadline\"\n          rows=\"3\"\n          name=\"deadline\"\n          onChange={props.newTaskInfo}\n        ></textarea>\n      </div>\n\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  </div>\n  <p>{props.newTaskTitle}</p>\n  <p>{props.category}</p>\n  <p>{props.location}</p>\n</React.Fragment>; */\n}\n\n{\n  /* <React.Fragment>\n      <div className=\"container\">\n        <form onSubmit={e => onSubmit(e)}>\n          <div className=\"form-group\">\n            <label>Task</label>\n            <textarea\n              className=\"form-control form-control-sm\"\n              name=\"todo\"\n              type=\"text\"\n              placeholder=\"Enter new task.\"\n              onChange={e => change(e)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>category</label>\n            <select\n              name=\"category\"\n              className=\"form-control\"\n              onChange={e => change(e)}\n              id=\"category\"\n              defaultValue=\"programing\"\n            >\n              <option value=\"programing\">programing</option>\n              <option value=\"workout\">workout</option>\n              <option value=\"errand\">errand</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Deadline</label>\n            <textarea\n              onChange={e => change(e)}\n              className=\"form-control\"\n              id=\"deadline\"\n              rows=\"3\"\n              name=\"deadline\"\n            ></textarea>\n          </div>\n\n          <DatePickerPicker />\n          <button type=\"submit\" value=\"Submit\">\n            {' '}\n            Submit\n          </button>\n        </form>\n      </div>\n      <p>{props.newTaskTitle}</p>\n      <p>{props.category}</p>\n    </React.Fragment> */\n}\n"]},"metadata":{},"sourceType":"module"}
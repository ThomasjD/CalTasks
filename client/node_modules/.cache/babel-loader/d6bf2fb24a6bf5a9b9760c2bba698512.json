{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/Store/Store.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\n\nclass Store extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lastLessonHeader: [],\n      crunk: 'Hootie',\n      showLeftOverLessonsFromSyllabus: false,\n      showLeftOverTasksForWeek: false,\n      syllabusData: null,\n      syllabusHandlerChoice: '0',\n      tasksData: null,\n      dataRequestDetails: {\n        handlerChoice: false,\n        index: null,\n        id: null,\n        value: null\n      }\n    };\n\n    this.sendSyllabusDataHandler = handlerChoice => {\n      this.setState({\n        syllabusHandlerChoice: handlerChoice\n      });\n      console.log('Inside of sendSyllabusDataHandler');\n    };\n\n    this.receiveSyllabusDataHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          }, () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          });\n          break;\n\n        case 'tasks':\n          this.setState({\n            tasksData: dataBase,\n            tasksHandlerChoice: '0'\n          });\n          break;\n      }\n    };\n\n    this.resetSyllabusHandlerChoice = () => {\n      this.setState({\n        syllabusHandlerChoice: '0'\n      });\n    };\n\n    this.dataRequestHandler = (event, typeOfData, handlerChoice, infoType, info) => {\n      let index = null;\n      let id = null;\n      let value = ''; //let inspection = event.value;\n\n      if (infoType === 'index') {\n        index = info; //value = null;\n      } else {\n        id = info;\n      }\n\n      value = event.target.value;\n      let dataRequestDetails = {\n        handlerChoice: handlerChoice,\n        index: index,\n        id: id,\n        value: value,\n        typeOfData: typeOfData\n      }; //event, index, handlerType\n\n      this.setState({\n        dataRequestDetails: dataRequestDetails\n      });\n    };\n\n    this.dataReceiverHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase // dataRequestDetails: {\n            //   typeOfData: 'reset',\n            //   handlerChoice: '0',\n            //   index: null,\n            //   id: null,\n            //   value: ''\n            // }\n\n          });\n          break;\n\n        case 'tasks':\n          //alert('Inside of dataReceiverHandler-tasks');\n          this.setState({\n            tasksData: dataBase // dataRequestDetails: {\n            //   typeOfData: 'kickboxer',\n            //   handlerChoice: '0',\n            //   index: null,\n            //   id: null,\n            //   value: ''\n            // }\n\n          }); //alert(this.state.crunk);\n\n          break;\n      }\n    };\n\n    this.resetHandlerChoice = () => {\n      this.setState({\n        dataRequestDetails: {\n          handlerChoice: '0',\n          typeOfData: '',\n          index: null,\n          id: null,\n          value: ''\n        }\n      });\n    };\n  }\n\n  render() {\n    let displayMessage = null;\n\n    if (this.state.syllabusHandlerChoice === '0') {\n      displayMessage = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Hey syllabusHandlerchoice is recorded\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(SyllabusContext.Provider, {\n      value: {\n        resetHandlerChoice: this.resetHandlerChoice,\n        processSyllabusRequestHandler: this.processSyllabusRequestHandler,\n        syllabusHandlerChoice: this.state.syllabusHandlerChoice,\n        index: this.state.index,\n        id: this.state.id,\n        everythingSyllabus: this.state,\n        processSyllabusRequestHandler2: this.processSyllabusRequestHandler2,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        dataReceiverHandler: this.dataReceiverHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(SyllabusData, {\n      resetSyllabusHandlerChoice: this.resetSyllabusHandlerChoice,\n      syllabusHandlerChoice: this.state.syllabusHandlerChoice,\n      receiveSyllabusDataHandler: this.receiveSyllabusDataHandler,\n      sendSyllabusDataHandler: this.sendSyllabusDataHandler,\n      value: this.state.value,\n      index: this.state.index,\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(TasksDataContext.Provider, {\n      value: {\n        dataReceiverHandler: this.dataReceiverHandler,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        tasksData: this.state,\n        resetHandlerChoice: this.resetHandlerChoice\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(TasksData, {\n      showLeftOverTasksForWeek: this.state.showLeftOverTasksForWeek,\n      dataRequestDetails: this.state.dataRequestDetails,\n      sendSyllabusDataHandler: this.sendSyllabusDataHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(RightCockpit //Tasks\n    //Syllabus\n    , {\n      sendSyllabusDataHandler: this.sendSyllabusDataHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/Store/Store.js"],"names":["React","Component","RightCockpit","TasksData","SyllabusData","SyllabusContext","TasksDataContext","Store","state","lastLessonHeader","crunk","showLeftOverLessonsFromSyllabus","showLeftOverTasksForWeek","syllabusData","syllabusHandlerChoice","tasksData","dataRequestDetails","handlerChoice","index","id","value","sendSyllabusDataHandler","setState","console","log","receiveSyllabusDataHandler","dataBase","dataBaseName","tasksHandlerChoice","resetSyllabusHandlerChoice","dataRequestHandler","event","typeOfData","infoType","info","target","dataReceiverHandler","resetHandlerChoice","render","displayMessage","processSyllabusRequestHandler","everythingSyllabus","processSyllabusRequestHandler2"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BO,KAD4B,GACpB;AACNC,MAAAA,gBAAgB,EAAE,EADZ;AAGNC,MAAAA,KAAK,EAAE,QAHD;AAINC,MAAAA,+BAA+B,EAAE,KAJ3B;AAKNC,MAAAA,wBAAwB,EAAE,KALpB;AAMNC,MAAAA,YAAY,EAAE,IANR;AAONC,MAAAA,qBAAqB,EAAE,GAPjB;AAQNC,MAAAA,SAAS,EAAE,IARL;AASNC,MAAAA,kBAAkB,EAAE;AAClBC,QAAAA,aAAa,EAAE,KADG;AAElBC,QAAAA,KAAK,EAAE,IAFW;AAGlBC,QAAAA,EAAE,EAAE,IAHc;AAIlBC,QAAAA,KAAK,EAAE;AAJW;AATd,KADoB;;AAAA,SAmB5BC,uBAnB4B,GAmBFJ,aAAa,IAAI;AACzC,WAAKK,QAAL,CAAc;AAAER,QAAAA,qBAAqB,EAAEG;AAAzB,OAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,KAtB2B;;AAAA,SAwB5BC,0BAxB4B,GAwBCC,QAAQ,IAAI;AACvC,cAAQA,QAAQ,CAACC,YAAjB;AACE,aAAK,UAAL;AACE,eAAKL,QAAL,CACE;AACET,YAAAA,YAAY,EAAEa,QADhB;AAEEZ,YAAAA,qBAAqB,EAAE;AAFzB,WADF,EAKE,MAAM;AACJS,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWK,YAAX,CAAwBJ,gBAApC;AACD,WAPH;AASA;;AAEF,aAAK,OAAL;AACE,eAAKa,QAAL,CAAc;AACZP,YAAAA,SAAS,EAAEW,QADC;AAEZE,YAAAA,kBAAkB,EAAE;AAFR,WAAd;AAIA;AAlBJ;AAoBD,KA7C2B;;AAAA,SA+C5BC,0BA/C4B,GA+CC,MAAM;AACjC,WAAKP,QAAL,CAAc;AAAER,QAAAA,qBAAqB,EAAE;AAAzB,OAAd;AACD,KAjD2B;;AAAA,SAiG5BgB,kBAjG4B,GAiGP,CAACC,KAAD,EAAQC,UAAR,EAAoBf,aAApB,EAAmCgB,QAAnC,EAA6CC,IAA7C,KAAsD;AACzE,UAAIhB,KAAK,GAAG,IAAZ;AACA,UAAIC,EAAE,GAAG,IAAT;AACA,UAAIC,KAAK,GAAG,EAAZ,CAHyE,CAIzE;;AAEA,UAAIa,QAAQ,KAAK,OAAjB,EAA0B;AACxBf,QAAAA,KAAK,GAAGgB,IAAR,CADwB,CAExB;AACD,OAHD,MAGO;AACLf,QAAAA,EAAE,GAAGe,IAAL;AACD;;AACDd,MAAAA,KAAK,GAAGW,KAAK,CAACI,MAAN,CAAaf,KAArB;AAEA,UAAIJ,kBAAkB,GAAG;AACvBC,QAAAA,aAAa,EAAEA,aADQ;AAEvBC,QAAAA,KAAK,EAAEA,KAFgB;AAGvBC,QAAAA,EAAE,EAAEA,EAHmB;AAIvBC,QAAAA,KAAK,EAAEA,KAJgB;AAKvBY,QAAAA,UAAU,EAAEA;AALW,OAAzB,CAdyE,CAqBzE;;AACA,WAAKV,QAAL,CAAc;AACZN,QAAAA,kBAAkB,EAAEA;AADR,OAAd;AAGD,KA1H2B;;AAAA,SA4H5BoB,mBA5H4B,GA4HNV,QAAQ,IAAI;AAChC,cAAQA,QAAQ,CAACC,YAAjB;AACE,aAAK,UAAL;AACE,eAAKL,QAAL,CAAc;AACZT,YAAAA,YAAY,EAAEa,QADF,CAGZ;AACA;AACA;AACA;AACA;AACA;AACA;;AATY,WAAd;AAWA;;AAEF,aAAK,OAAL;AACE;AACA,eAAKJ,QAAL,CAAc;AACZP,YAAAA,SAAS,EAAEW,QADC,CAEZ;AACA;AACA;AACA;AACA;AACA;AACA;;AARY,WAAd,EAFF,CAYE;;AACA;AA5BJ;AA8BD,KA3J2B;;AAAA,SA6J5BW,kBA7J4B,GA6JP,MAAM;AACzB,WAAKf,QAAL,CAAc;AACZN,QAAAA,kBAAkB,EAAE;AAClBC,UAAAA,aAAa,EAAE,GADG;AAElBe,UAAAA,UAAU,EAAE,EAFM;AAGlBd,UAAAA,KAAK,EAAE,IAHW;AAIlBC,UAAAA,EAAE,EAAE,IAJc;AAKlBC,UAAAA,KAAK,EAAE;AALW;AADR,OAAd;AASD,KAvK2B;AAAA;;AAyK5BkB,EAAAA,MAAM,GAAG;AACP,QAAIC,cAAc,GAAG,IAArB;;AACA,QAAI,KAAK/B,KAAL,CAAWM,qBAAX,KAAqC,GAAzC,EAA8C;AAC5CyB,MAAAA,cAAc,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAjB;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD,CAAiB,QAAjB;AACE,MAAA,KAAK,EAAE;AACLF,QAAAA,kBAAkB,EAAE,KAAKA,kBADpB;AAELG,QAAAA,6BAA6B,EAAE,KAAKA,6BAF/B;AAGL1B,QAAAA,qBAAqB,EAAE,KAAKN,KAAL,CAAWM,qBAH7B;AAILI,QAAAA,KAAK,EAAE,KAAKV,KAAL,CAAWU,KAJb;AAKLC,QAAAA,EAAE,EAAE,KAAKX,KAAL,CAAWW,EALV;AAMLsB,QAAAA,kBAAkB,EAAE,KAAKjC,KANpB;AAOLkC,QAAAA,8BAA8B,EAAE,KAAKA,8BAPhC;AAQLZ,QAAAA,kBAAkB,EAAE,KAAKA,kBARpB;AASLd,QAAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAWQ,kBAT1B;AAULoB,QAAAA,mBAAmB,EAAE,KAAKA;AAVrB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcE,oBAAC,YAAD;AACE,MAAA,0BAA0B,EAAE,KAAKP,0BADnC;AAEE,MAAA,qBAAqB,EAAE,KAAKrB,KAAL,CAAWM,qBAFpC;AAGE,MAAA,0BAA0B,EAAE,KAAKW,0BAHnC;AAIE,MAAA,uBAAuB,EAAE,KAAKJ,uBAJhC;AAKE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWY,KALpB;AAME,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWU,KANpB;AAOE,MAAA,EAAE,EAAE,KAAKV,KAAL,CAAWW,EAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAwBE,oBAAC,gBAAD,CAAkB,QAAlB;AACE,MAAA,KAAK,EAAE;AACLiB,QAAAA,mBAAmB,EAAE,KAAKA,mBADrB;AAELN,QAAAA,kBAAkB,EAAE,KAAKA,kBAFpB;AAGLd,QAAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAWQ,kBAH1B;AAILD,QAAAA,SAAS,EAAE,KAAKP,KAJX;AAKL6B,QAAAA,kBAAkB,EAAE,KAAKA;AALpB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,SAAD;AACE,MAAA,wBAAwB,EAAE,KAAK7B,KAAL,CAAWI,wBADvC;AAEE,MAAA,kBAAkB,EAAE,KAAKJ,KAAL,CAAWQ,kBAFjC;AAGE,MAAA,uBAAuB,EAAE,KAAKK,uBAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAcE,oBAAC,YAAD,CACE;AACA;AAFF;AAGE,MAAA,uBAAuB,EAAE,KAAKA,uBAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CAxBF,CADF,CADF;AAiDD;;AAhO2B;;AAmO9B,eAAed,KAAf","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\n\nclass Store extends Component {\n  state = {\n    lastLessonHeader: [],\n\n    crunk: 'Hootie',\n    showLeftOverLessonsFromSyllabus: false,\n    showLeftOverTasksForWeek: false,\n    syllabusData: null,\n    syllabusHandlerChoice: '0',\n    tasksData: null,\n    dataRequestDetails: {\n      handlerChoice: false,\n      index: null,\n      id: null,\n      value: null\n    }\n  };\n\n  //Now deals with syllabusData strictly\n  sendSyllabusDataHandler = handlerChoice => {\n    this.setState({ syllabusHandlerChoice: handlerChoice });\n    console.log('Inside of sendSyllabusDataHandler');\n  };\n\n  receiveSyllabusDataHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState(\n          {\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          },\n          () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          }\n        );\n        break;\n\n      case 'tasks':\n        this.setState({\n          tasksData: dataBase,\n          tasksHandlerChoice: '0'\n        });\n        break;\n    }\n  };\n\n  resetSyllabusHandlerChoice = () => {\n    this.setState({ syllabusHandlerChoice: '0' });\n  };\n\n  // processSyllabusRequestHandler = (\n  //   event,\n  //   syllabusHandlerChoice,\n  //   infoType,\n  //   info\n  // ) => {\n  //   let index = null;\n  //   let id = null;\n  //   let value = null;\n  //   if (infoType === 'index') {\n  //     index = info;\n  //   } else {\n  //     id = info;\n  //   }\n  //   //event, index, handlerType\n  //   this.setState({\n  //     syllabusHandlerChoice: syllabusHandlerChoice,\n  //     index: index,\n  //     id: id,\n  //     value: event.target.value\n  //   });\n  // };\n\n  // processSyllabusRequestHandler2 = (\n  //   event,\n  //   syllabusHandlerChoice,\n  //   infoType,\n  //   info\n  // ) => {\n  //   let index = null;\n  //   let id = null;\n  //   //let value = null;\n  //   if (infoType === 'index') {\n  //     index = info;\n  //   } else {\n  //     id = info;\n  //   }\n  //   //event, index, handlerType\n  //   this.setState({\n  //     syllabusHandlerChoice: syllabusHandlerChoice,\n  //     index: index,\n  //     id: id,\n  //     value: event.value\n  //   });\n  // };\n\n  dataRequestHandler = (event, typeOfData, handlerChoice, infoType, info) => {\n    let index = null;\n    let id = null;\n    let value = '';\n    //let inspection = event.value;\n\n    if (infoType === 'index') {\n      index = info;\n      //value = null;\n    } else {\n      id = info;\n    }\n    value = event.target.value;\n\n    let dataRequestDetails = {\n      handlerChoice: handlerChoice,\n      index: index,\n      id: id,\n      value: value,\n      typeOfData: typeOfData\n    };\n    //event, index, handlerType\n    this.setState({\n      dataRequestDetails: dataRequestDetails\n    });\n  };\n\n  dataReceiverHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState({\n          syllabusData: dataBase\n\n          // dataRequestDetails: {\n          //   typeOfData: 'reset',\n          //   handlerChoice: '0',\n          //   index: null,\n          //   id: null,\n          //   value: ''\n          // }\n        });\n        break;\n\n      case 'tasks':\n        //alert('Inside of dataReceiverHandler-tasks');\n        this.setState({\n          tasksData: dataBase\n          // dataRequestDetails: {\n          //   typeOfData: 'kickboxer',\n          //   handlerChoice: '0',\n          //   index: null,\n          //   id: null,\n          //   value: ''\n          // }\n        });\n        //alert(this.state.crunk);\n        break;\n    }\n  };\n\n  resetHandlerChoice = () => {\n    this.setState({\n      dataRequestDetails: {\n        handlerChoice: '0',\n        typeOfData: '',\n        index: null,\n        id: null,\n        value: ''\n      }\n    });\n  };\n\n  render() {\n    let displayMessage = null;\n    if (this.state.syllabusHandlerChoice === '0') {\n      displayMessage = <div>Hey syllabusHandlerchoice is recorded</div>;\n    }\n\n    return (\n      <div>\n        <SyllabusContext.Provider\n          value={{\n            resetHandlerChoice: this.resetHandlerChoice,\n            processSyllabusRequestHandler: this.processSyllabusRequestHandler,\n            syllabusHandlerChoice: this.state.syllabusHandlerChoice,\n            index: this.state.index,\n            id: this.state.id,\n            everythingSyllabus: this.state,\n            processSyllabusRequestHandler2: this.processSyllabusRequestHandler2,\n            dataRequestHandler: this.dataRequestHandler,\n            dataRequestDetails: this.state.dataRequestDetails,\n            dataReceiverHandler: this.dataReceiverHandler\n          }}\n        >\n          <SyllabusData\n            resetSyllabusHandlerChoice={this.resetSyllabusHandlerChoice}\n            syllabusHandlerChoice={this.state.syllabusHandlerChoice}\n            receiveSyllabusDataHandler={this.receiveSyllabusDataHandler}\n            sendSyllabusDataHandler={this.sendSyllabusDataHandler}\n            value={this.state.value}\n            index={this.state.index}\n            id={this.state.id}\n          ></SyllabusData>\n\n          <TasksDataContext.Provider\n            value={{\n              dataReceiverHandler: this.dataReceiverHandler,\n              dataRequestHandler: this.dataRequestHandler,\n              dataRequestDetails: this.state.dataRequestDetails,\n              tasksData: this.state,\n              resetHandlerChoice: this.resetHandlerChoice\n            }}\n          >\n            <TasksData\n              showLeftOverTasksForWeek={this.state.showLeftOverTasksForWeek}\n              dataRequestDetails={this.state.dataRequestDetails}\n              sendSyllabusDataHandler={this.sendSyllabusDataHandler}\n            />\n            <RightCockpit\n              //Tasks\n              //Syllabus\n              sendSyllabusDataHandler={this.sendSyllabusDataHandler}\n            ></RightCockpit>\n          </TasksDataContext.Provider>\n        </SyllabusContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}
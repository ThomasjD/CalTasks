{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Template/pie & funnel charts/Funnel Chart.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass FunnelChart extends Component {\n  render() {\n    var dataPoint;\n    var total;\n    const options = {\n      animationEnabled: true,\n      title: {\n        text: \"Sales Analysis\"\n      },\n      data: [{\n        type: \"funnel\",\n        toolTipContent: \"<b>{label}</b>: {y} <b>({percentage}%)</b>\",\n        indexLabelPlacement: \"inside\",\n        indexLabel: \"{label} ({percentage}%)\",\n        dataPoints: [{\n          y: 1400,\n          label: \"Prospects\"\n        }, {\n          y: 1212,\n          label: \"Qualified Prospects\"\n        }, {\n          y: 1080,\n          label: \"Proposals\"\n        }, {\n          y: 665,\n          label: \"Negotiation\"\n        }, {\n          y: 578,\n          label: \"Final Sales\"\n        }]\n      }] //calculate percentage\n\n    };\n    dataPoint = options.data[0].dataPoints;\n    total = dataPoint[0].y;\n\n    for (var i = 0; i < dataPoint.length; i++) {\n      if (i === 0) {\n        options.data[0].dataPoints[i].percentage = 100;\n      } else {\n        options.data[0].dataPoints[i].percentage = (dataPoint[i].y / total * 100).toFixed(2);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"React Funnel Chart\"), React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default FunnelChart;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Template/pie & funnel charts/Funnel Chart.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","FunnelChart","render","dataPoint","total","options","animationEnabled","title","text","data","type","toolTipContent","indexLabelPlacement","indexLabel","dataPoints","y","label","i","length","percentage","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACnCI,EAAAA,MAAM,GAAG;AACR,QAAIC,SAAJ;AACA,QAAIC,KAAJ;AACA,UAAMC,OAAO,GAAG;AACfC,MAAAA,gBAAgB,EAAE,IADH;AAEfC,MAAAA,KAAK,EAAC;AACLC,QAAAA,IAAI,EAAE;AADD,OAFS;AAKfC,MAAAA,IAAI,EAAE,CAAC;AACNC,QAAAA,IAAI,EAAE,QADA;AAENC,QAAAA,cAAc,EAAE,4CAFV;AAGNC,QAAAA,mBAAmB,EAAE,QAHf;AAINC,QAAAA,UAAU,EAAE,yBAJN;AAKNC,QAAAA,UAAU,EAAE,CACX;AAAEC,UAAAA,CAAC,EAAE,IAAL;AAAWC,UAAAA,KAAK,EAAE;AAAlB,SADW,EAEX;AAAED,UAAAA,CAAC,EAAE,IAAL;AAAWC,UAAAA,KAAK,EAAE;AAAlB,SAFW,EAGX;AAAED,UAAAA,CAAC,EAAE,IAAL;AAAWC,UAAAA,KAAK,EAAE;AAAlB,SAHW,EAIX;AAAED,UAAAA,CAAC,EAAE,GAAL;AAAWC,UAAAA,KAAK,EAAE;AAAlB,SAJW,EAKX;AAAED,UAAAA,CAAC,EAAE,GAAL;AAAUC,UAAAA,KAAK,EAAE;AAAjB,SALW;AALN,OAAD,CALS,CAmBhB;;AAnBgB,KAAhB;AAoBAb,IAAAA,SAAS,GAAGE,OAAO,CAACI,IAAR,CAAa,CAAb,EAAgBK,UAA5B;AACAV,IAAAA,KAAK,GAAGD,SAAS,CAAC,CAAD,CAAT,CAAaY,CAArB;;AACA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGd,SAAS,CAACe,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACzC,UAAGA,CAAC,KAAK,CAAT,EAAY;AACXZ,QAAAA,OAAO,CAACI,IAAR,CAAa,CAAb,EAAgBK,UAAhB,CAA2BG,CAA3B,EAA8BE,UAA9B,GAA2C,GAA3C;AACA,OAFD,MAEO;AACNd,QAAAA,OAAO,CAACI,IAAR,CAAa,CAAb,EAAgBK,UAAhB,CAA2BG,CAA3B,EAA8BE,UAA9B,GAA2C,CAAEhB,SAAS,CAACc,CAAD,CAAT,CAAaF,CAAb,GAAiBX,KAAlB,GAA2B,GAA5B,EAAiCgB,OAAjC,CAAyC,CAAzC,CAA3C;AACA;AACD;;AAED,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,EAEC,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAIf;AACzB;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADA;AASA;;AA3CkC;;AA8CpC,eAAeJ,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CanvasJSReact from '../../assets/canvasjs.react';\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n \r\nclass FunnelChart extends Component {\r\n\trender() {\r\n\t\tvar dataPoint;\r\n\t\tvar total;\r\n\t\tconst options = {\r\n\t\t\tanimationEnabled: true,\r\n\t\t\ttitle:{\r\n\t\t\t\ttext: \"Sales Analysis\"\r\n\t\t\t},\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"funnel\",\r\n\t\t\t\ttoolTipContent: \"<b>{label}</b>: {y} <b>({percentage}%)</b>\",\r\n\t\t\t\tindexLabelPlacement: \"inside\",\r\n\t\t\t\tindexLabel: \"{label} ({percentage}%)\",\r\n\t\t\t\tdataPoints: [\r\n\t\t\t\t\t{ y: 1400, label: \"Prospects\" },\r\n\t\t\t\t\t{ y: 1212, label: \"Qualified Prospects\" },\r\n\t\t\t\t\t{ y: 1080, label: \"Proposals\" },\r\n\t\t\t\t\t{ y: 665,  label: \"Negotiation\" },\r\n\t\t\t\t\t{ y: 578, label: \"Final Sales\" }\r\n\t\t\t\t]\r\n\t\t\t}]\r\n\t\t}\r\n\t\t//calculate percentage\r\n\t\tdataPoint = options.data[0].dataPoints;\r\n\t\ttotal = dataPoint[0].y;\r\n\t\tfor(var i = 0; i < dataPoint.length; i++) {\r\n\t\t\tif(i === 0) {\r\n\t\t\t\toptions.data[0].dataPoints[i].percentage = 100;\r\n\t\t\t} else {\r\n\t\t\t\toptions.data[0].dataPoints[i].percentage = ((dataPoint[i].y / total) * 100).toFixed(2);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>React Funnel Chart</h1>\r\n\t\t\t<CanvasJSChart options = {options} \r\n\t\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t/>\r\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FunnelChart;"]},"metadata":{},"sourceType":"module"}
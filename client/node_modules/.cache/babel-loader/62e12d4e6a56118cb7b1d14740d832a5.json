{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Creation/WeeklyTimeBudget/WeeklyTimeBudget.js\";\nimport React, { Component } from 'react';\nimport DailyTimeBudget from '../DailyTimeBudget/DailyTimeBudget';\nimport classes from './WeeklyTimeBudget.module.css'; //hygiene, traveling, packing,wating\n//each day have a predetermined amt of time for each category\n//then each day you can balance it according to 24 hours\n//after balancing for each day, you have to go back to balance the weekly total\n//24 hours a day //broken down into .5 hour\n//\n\nclass weeklyTimeBudget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalWeekHours: 168,\n      hoursPerDay: 24,\n      weeklyBudget: {\n        sleep: 7,\n        exercise: 7,\n        work: 49,\n        free: 7,\n        errands: 14,\n        getReady: 28,\n        totalHours: 168\n      }\n    };\n\n    this.addHourToActivity = activity => {\n      const oldHourCount = this.state.totalWeekHours;\n      const updatedHourCount = oldHourCount + 1; //upgrade the ingredients count when adding more\n\n      const updatedWeeklyBudget = _objectSpread({}, this.state.weeklyBudget);\n\n      updatedWeeklyBudget[activity] = updatedHourCount; // //cost for 1 new ingredient aded\n      // const hourAddition = INGREDIENT_PRICES[activity];\n      // //Calculate the new price after new ingredient added\n      // const oldTotalWeekHours= this.state.totalWeekHours;\n      // const newPrice = oldPrice + priceAddition;\n      //upgrade the ingredients count & total price when adding more\n\n      this.setState({\n        ingredients: updatedHourCount\n      }); //ingredients now contains updated unit # of ingrediant just added\n      //pass in the new ingredients list so that it can calculate the total price\n      //this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.newTimeBudget = () => {\n      let thisWeek = new DailyTimeBudget();\n      thisWeek.timeBudgetDay();\n      console.dir(thisWeek.dailyBudget); //eachCategory: keywords\n\n      let MondayWork = _objectSpread({}, thisWeek.dailyBudget.Monday); //alert(JSON.stringify(MondayWork.work));\n\n\n      console.dir(MondayWork.work);\n      this.setState({\n        weeklyTimeBudget: thisWeek.activityWeekCategories\n      });\n    };\n\n    this.thisWeek = new DailyTimeBudget();\n    this.activityWeekCategories = this.thisWeek.activityWeekCategories;\n  }\n\n  render() {\n    let displayDailyTimeBudget = null;\n\n    if (this.state.weeklyTimeBudget) {\n      displayDailyTimeBudget = Object.keys(this.activityWeekCategories).map(eachCategory => console.log(eachCategory) // <DailyTimeBudget\n      //   key={eachCategory.concat(eachCategory)}\n      //   activity={eachCategory}\n      //   hours={this.state.weeklyBudget[eachCategory]}\n      //   decrease={this.deductHourToActivity}\n      //   add={this.addHourToActivity}\n      // />\n      );\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.WeeklyTimeBudget,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, displayDailyTimeBudget);\n  }\n\n}\n\nexport default weeklyTimeBudget; // Monday: {},\n//   Tuesday: {},\n//   Wednesday: {},\n//   Thursday: {},\n//   Friday: {},\n//   Saturday: {},\n//   Sunday: {},","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Creation/WeeklyTimeBudget/WeeklyTimeBudget.js"],"names":["React","Component","DailyTimeBudget","classes","weeklyTimeBudget","constructor","props","state","totalWeekHours","hoursPerDay","weeklyBudget","sleep","exercise","work","free","errands","getReady","totalHours","addHourToActivity","activity","oldHourCount","updatedHourCount","updatedWeeklyBudget","setState","ingredients","newTimeBudget","thisWeek","timeBudgetDay","console","dir","dailyBudget","MondayWork","Monday","activityWeekCategories","render","displayDailyTimeBudget","Object","keys","map","eachCategory","log","WeeklyTimeBudget"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,OAAP,MAAoB,+BAApB,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACvCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAMnBC,KANmB,GAMX;AACNC,MAAAA,cAAc,EAAE,GADV;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAE,CADK;AAEZC,QAAAA,QAAQ,EAAE,CAFE;AAGZC,QAAAA,IAAI,EAAE,EAHM;AAIZC,QAAAA,IAAI,EAAE,CAJM;AAKZC,QAAAA,OAAO,EAAE,EALG;AAMZC,QAAAA,QAAQ,EAAE,EANE;AAOZC,QAAAA,UAAU,EAAE;AAPA;AAJR,KANW;;AAAA,SAqBnBC,iBArBmB,GAqBCC,QAAQ,IAAI;AAC9B,YAAMC,YAAY,GAAG,KAAKb,KAAL,CAAWC,cAAhC;AACA,YAAMa,gBAAgB,GAAGD,YAAY,GAAG,CAAxC,CAF8B,CAI9B;;AACA,YAAME,mBAAmB,qBACpB,KAAKf,KAAL,CAAWG,YADS,CAAzB;;AAIAY,MAAAA,mBAAmB,CAACH,QAAD,CAAnB,GAAgCE,gBAAhC,CAT8B,CAW9B;AACA;AAEA;AACA;AACA;AAEA;;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEH;AAAf,OAAd,EAnB8B,CAmBoB;AAClD;AAEA;AACD,KA5CkB;;AAAA,SA6CnBI,aA7CmB,GA6CH,MAAM;AACpB,UAAIC,QAAQ,GAAG,IAAIxB,eAAJ,EAAf;AACAwB,MAAAA,QAAQ,CAACC,aAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,WAArB,EAHoB,CAIpB;;AACA,UAAIC,UAAU,qBAAQL,QAAQ,CAACI,WAAT,CAAqBE,MAA7B,CAAd,CALoB,CAMpB;;;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYE,UAAU,CAAClB,IAAvB;AACA,WAAKU,QAAL,CAAc;AAAEnB,QAAAA,gBAAgB,EAAEsB,QAAQ,CAACO;AAA7B,OAAd;AACD,KAtDkB;;AAEjB,SAAKP,QAAL,GAAgB,IAAIxB,eAAJ,EAAhB;AACA,SAAK+B,sBAAL,GAA8B,KAAKP,QAAL,CAAcO,sBAA5C;AACD;;AAoDDC,EAAAA,MAAM,GAAG;AACP,QAAIC,sBAAsB,GAAG,IAA7B;;AACA,QAAI,KAAK5B,KAAL,CAAWH,gBAAf,EAAiC;AAC/B+B,MAAAA,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKJ,sBAAjB,EAAyCK,GAAzC,CACvBC,YAAY,IACVX,OAAO,CAACY,GAAR,CAAYD,YAAZ,CAFqB,CAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AATqB,OAAzB;AAWD;;AAED,WACE;AAAK,MAAA,SAAS,EAAEpC,OAAO,CAACsC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CN,sBAA3C,CADF;AAGD;;AA5EsC;;AA+EzC,eAAe/B,gBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport DailyTimeBudget from '../DailyTimeBudget/DailyTimeBudget';\nimport classes from './WeeklyTimeBudget.module.css';\n\n//hygiene, traveling, packing,wating\n\n//each day have a predetermined amt of time for each category\n//then each day you can balance it according to 24 hours\n//after balancing for each day, you have to go back to balance the weekly total\n\n//24 hours a day //broken down into .5 hour\n//\nclass weeklyTimeBudget extends Component {\n  constructor(props) {\n    super(props);\n    this.thisWeek = new DailyTimeBudget();\n    this.activityWeekCategories = this.thisWeek.activityWeekCategories;\n  }\n\n  state = {\n    totalWeekHours: 168,\n\n    hoursPerDay: 24,\n    weeklyBudget: {\n      sleep: 7,\n      exercise: 7,\n      work: 49,\n      free: 7,\n      errands: 14,\n      getReady: 28,\n      totalHours: 168\n    }\n  };\n\n  addHourToActivity = activity => {\n    const oldHourCount = this.state.totalWeekHours;\n    const updatedHourCount = oldHourCount + 1;\n\n    //upgrade the ingredients count when adding more\n    const updatedWeeklyBudget = {\n      ...this.state.weeklyBudget\n    };\n\n    updatedWeeklyBudget[activity] = updatedHourCount;\n\n    // //cost for 1 new ingredient aded\n    // const hourAddition = INGREDIENT_PRICES[activity];\n\n    // //Calculate the new price after new ingredient added\n    // const oldTotalWeekHours= this.state.totalWeekHours;\n    // const newPrice = oldPrice + priceAddition;\n\n    //upgrade the ingredients count & total price when adding more\n    this.setState({ ingredients: updatedHourCount }); //ingredients now contains updated unit # of ingrediant just added\n    //pass in the new ingredients list so that it can calculate the total price\n\n    //this.updatePurchaseState(updatedIngredients);\n  };\n  newTimeBudget = () => {\n    let thisWeek = new DailyTimeBudget();\n    thisWeek.timeBudgetDay();\n    console.dir(thisWeek.dailyBudget);\n    //eachCategory: keywords\n    let MondayWork = { ...thisWeek.dailyBudget.Monday };\n    //alert(JSON.stringify(MondayWork.work));\n    console.dir(MondayWork.work);\n    this.setState({ weeklyTimeBudget: thisWeek.activityWeekCategories });\n  };\n\n  render() {\n    let displayDailyTimeBudget = null;\n    if (this.state.weeklyTimeBudget) {\n      displayDailyTimeBudget = Object.keys(this.activityWeekCategories).map(\n        eachCategory =>\n          console.log(eachCategory)\n          // <DailyTimeBudget\n          //   key={eachCategory.concat(eachCategory)}\n          //   activity={eachCategory}\n          //   hours={this.state.weeklyBudget[eachCategory]}\n          //   decrease={this.deductHourToActivity}\n          //   add={this.addHourToActivity}\n          // />\n      );\n    }\n\n    return (\n      <div className={classes.WeeklyTimeBudget}>{displayDailyTimeBudget}</div>\n    );\n  }\n}\n\nexport default weeklyTimeBudget;\n\n// Monday: {},\n//   Tuesday: {},\n//   Wednesday: {},\n//   Thursday: {},\n//   Friday: {},\n//   Saturday: {},\n//   Sunday: {},\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Navigation/NavigationItems/NavigationItems.js\";\nimport React, { useContext } from 'react';\nimport classesCockpit from '../../Cockpit/Cockpit.module.css';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport StoreContext from '../../../context/StoreDataContext';\n\nconst NavigationItems = () => {\n  const storeContext = useContext(StoreContext);\n\n  const requestDataHandler = event => {\n    let contentchoice = event.target.value;\n    let typeOfData = ''; //string: syllabus,tasks,events,objectives\n\n    let handlerChoice = ''; //string: '#' handler inside of database\n\n    let dataLocation = ''; // string: where obj found inside database\n\n    let infoType = ''; //string: index/id/\n\n    let info = ''; //string: actual info\n\n    let today = calendarObj(); // let value = '';\n\n    let dataRequestMessage = {};\n\n    switch (contentchoice) {\n      case '1':\n        typeOfData = 'tasks';\n        handlerChoice = '1';\n        dataLocation = 'unAssignedTasksForWeek';\n        infoType = null;\n        info = null;\n        dataRequestMessage = {\n          typeOfData: typeOfData,\n          handlerChoice: handlerChoice,\n          dataLocation: dataLocation,\n          infoType: infoType,\n          info: info\n        };\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n\n      case '2':\n        typeOfData = 'tasks';\n        handlerChoice = '2';\n        dataLocation = today;\n        infoType = null;\n        info = null;\n        dataRequestMessage = {\n          typeOfData: typeOfData,\n          handlerChoice: handlerChoice,\n          dataLocation: dataLocation,\n          infoType: infoType,\n          info: info\n        };\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n\n      case '3':\n        break;\n\n      case '4':\n        break;\n\n      case '5':\n        break;\n\n      case '6':\n        //load up newSyllabus component -> get data prepared to display maxReactWorkLeft\n        typeOfData = 'syllabus';\n        handlerChoice = '10';\n        dataLocation = 'maxReactWorkLeft';\n        infoType = null;\n        info = null;\n        dataRequestMessage = {\n          typeOfData: typeOfData,\n          handlerChoice: handlerChoice,\n          dataLocation: dataLocation,\n          infoType: infoType,\n          info: info\n        };\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n    }\n\n    let contentViewObject = {\n      target: {\n        value: contentchoice\n      }\n    };\n    storeContext.contentViewHandler(contentViewObject);\n  };\n\n  return React.createElement(\"ul\", {\n    className: classesCockpit.NavigationItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classesCockpit.specialbtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn dropdown-toggle\",\n    type: \"button\",\n    \"data-toggle\": \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-toggler-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), \"Tasks\"), React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classesCockpit.specialbtnAllTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"dropdown-item\",\n    onClick: event => requestDataHandler(event),\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"All Tasks\")), React.createElement(\"div\", {\n    className: classesCockpit.specialbtnTodayTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"dropdown-item\",\n    onClick: event => requestDataHandler(event),\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Today\"))))), React.createElement(NavigationItem, {\n    active: true,\n    link: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Today's Tasks\"), React.createElement(NavigationItem, {\n    link: \"/\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Tasks by Day\"), React.createElement(NavigationItem, {\n    link: \"/\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Objective\"), React.createElement(NavigationItem, {\n    active: true,\n    link: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Calendar\"));\n};\n\nexport default NavigationItems;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Navigation/NavigationItems/NavigationItems.js"],"names":["React","useContext","classesCockpit","classes","NavigationItem","StoreContext","NavigationItems","storeContext","requestDataHandler","event","contentchoice","target","value","typeOfData","handlerChoice","dataLocation","infoType","info","today","calendarObj","dataRequestMessage","dataRequestHandler","contentViewObject","contentViewHandler","specialbtn","specialbtnAllTasks","specialbtnTodayTasks"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport classesCockpit from '../../Cockpit/Cockpit.module.css';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport StoreContext from '../../../context/StoreDataContext';\n\nconst NavigationItems = () => {\n  const storeContext = useContext(StoreContext);\n\n  const requestDataHandler = event => {\n    let contentchoice = event.target.value;\n    let typeOfData = ''; //string: syllabus,tasks,events,objectives\n    let handlerChoice = ''; //string: '#' handler inside of database\n    let dataLocation = ''; // string: where obj found inside database\n    let infoType = ''; //string: index/id/\n    let info = ''; //string: actual info\n    let today = calendarObj();\n\n    // let value = '';\n    let dataRequestMessage = {};\n    switch (contentchoice) {\n      case '1':\n        typeOfData = 'tasks';\n        handlerChoice = '1';\n        dataLocation = 'unAssignedTasksForWeek';\n        infoType = null;\n        info = null;\n        dataRequestMessage = {\n          typeOfData: typeOfData,\n          handlerChoice: handlerChoice,\n          dataLocation: dataLocation,\n          infoType: infoType,\n          info: info\n        };\n\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n      case '2':\n        typeOfData = 'tasks';\n        handlerChoice = '2';\n        dataLocation = today;\n        infoType = null;\n        info = null;\n        dataRequestMessage = {\n          typeOfData: typeOfData,\n          handlerChoice: handlerChoice,\n          dataLocation: dataLocation,\n          infoType: infoType,\n          info: info\n        };\n\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n      case '3':\n        break;\n      case '4':\n        break;\n      case '5':\n        break;\n      case '6': //load up newSyllabus component -> get data prepared to display maxReactWorkLeft\n        typeOfData = 'syllabus';\n        handlerChoice = '10';\n        dataLocation = 'maxReactWorkLeft';\n        infoType = null;\n        info = null;\n        dataRequestMessage = {\n          typeOfData: typeOfData,\n          handlerChoice: handlerChoice,\n          dataLocation: dataLocation,\n          infoType: infoType,\n          info: info\n        };\n\n        storeContext.dataRequestHandler(event, dataRequestMessage);\n        break;\n    }\n\n    let contentViewObject = {\n      target: {\n        value: contentchoice\n      }\n    };\n\n    storeContext.contentViewHandler(contentViewObject);\n  };\n\n  return (\n    <ul className={classesCockpit.NavigationItems}>\n      <div className={classesCockpit.specialbtn}>\n        <div className=\"dropdown\">\n          <button\n            className=\"btn dropdown-toggle\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n            Tasks\n          </button>\n\n          <div className=\"dropdown-menu\">\n            <div className={classesCockpit.specialbtnAllTasks}>\n              <button\n                className=\"dropdown-item\"\n                onClick={event => requestDataHandler(event)}\n                value=\"1\"\n              >\n                All Tasks\n              </button>\n            </div>\n\n            <div className={classesCockpit.specialbtnTodayTasks}>\n              <button\n                className=\"dropdown-item\"\n                onClick={event => requestDataHandler(event)}\n                value=\"2\"\n              >\n                Today\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <NavigationItem active link=\"/\">\n        Today's Tasks\n      </NavigationItem>\n\n      <NavigationItem link=\"/\" active>\n        Tasks by Day\n      </NavigationItem>\n\n      <NavigationItem link=\"/\" active>\n        Objective\n      </NavigationItem>\n\n      <NavigationItem active link=\"/\">\n        Calendar\n      </NavigationItem>\n    </ul>\n  );\n};\nexport default NavigationItems;\n"]},"metadata":{},"sourceType":"module"}
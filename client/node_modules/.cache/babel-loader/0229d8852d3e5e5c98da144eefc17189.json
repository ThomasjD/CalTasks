{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Cockpit.js\";\nimport React, { useEffect } from 'react'; //import rocky from '../../containers/App.module.css'\n\nimport classNames from 'classnames';\nimport classes from './Cockpit.module.css';\n\nconst Cockpit = props => {\n  useEffect(() => {\n    //can do anything that componentDidUpdate can do\n    //can send http request here\n    console.log('[Cockpit.js] useffect'); //getting rid of timer\n\n    const timer = setTimeout(() => {\n      alert('Saved data to cloud');\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n      console.log('[Cockpit.js] cleanup work in useEffect');\n    };\n  });\n  /*\n  setTimeout(() => {\n    alert('Saved data to cloud')\n  }, 1000);\n  return () => { //don't have to have a return statement\n    console.log('[Cockpit.js] cleanup work in useEffect')\n  }\n  }, []); \n  */\n  //if 2nd argument [props.tasks] it doesn't involve tasks -> it won't run this again\n  //[props.tasks]\n\n  useEffect(() => {\n    console.log('[Cockpit.js] 2nd useEffect');\n    return () => {\n      console.log('[Cockpit.js] cleanup work in 2nd UseEffect');\n    };\n  }); //styling the 'Things to Do' using strings for classnames\n\n  const assignedClasses = [];\n  let btnClass = '';\n\n  switch (props.tasks.length) {\n    case 3:\n      assignedClasses.push('bold', 'red');\n      break;\n\n    case 2:\n      assignedClasses.push('red');\n      break;\n\n    case 1:\n      assignedClasses.push('orange');\n      break;\n\n    default:\n      assignedClasses.push('green');\n      break;\n  } //console.log(assignedClasses[0])\n  //add multiple classes for <p> w/ strings\n  //const classesFinal = classes.join(' ')\n\n\n  const classesFinal = 'rocky.' + assignedClasses; //console.log(classesFinal)\n  //console.log(`This is classesFinal ${classesFinal}`)\n\n  return React.createElement(\"div\", {\n    className: classes.Cockpit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, props.title), React.createElement(\"p\", {\n    className: classNames({\n      [classes[assignedClasses[0]]]: true,\n      [classes[assignedClasses[1]]]: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Things to Do!\"), React.createElement(\"button\", {\n    className: classes.specialbtn,\n    onClick: props.clicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Show Task\"), React.createElement(\"button\", {\n    onClick: props.todayClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Show Today Schedule\"));\n};\n\nexport default Cockpit; //export default React.memo(Cockpit);\n// </div>\n\n/* <React.Fragment>\n        <div>\n\n      \n        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        <label class=\"btn btn-secondary active\">\n          <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Active\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Radio\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Radio\n        </label>\n      </div>\n      </div>\n      </React.Fragment>     */\n\n/* Radio Buttons\n<React.Fragment>\n            <div>\n                <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <label class=\"btn btn-secondary active\">\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Today\n                    </label>\n                    <label class=\"btn btn-secondary\">\n                        <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Week\n                        </label>\n                <label class=\"btn btn-secondary\">\n                    <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Month\n                    </label>\n                </div>\n            </div>\n        </React.Fragment> \n*/","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Cockpit.js"],"names":["React","useEffect","classNames","classes","Cockpit","props","console","log","timer","setTimeout","alert","clearTimeout","assignedClasses","btnClass","tasks","length","push","classesFinal","title","specialbtn","clicked","todayClicked"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvBJ,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAHc,CAKhB;;AACA,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAIA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD,KAHD;AAID,GAdU,CAAT;AAgBA;;;;;;;;;AASF;AACF;;AAGEN,EAAAA,SAAS,CAAC,MAAM;AAEdK,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,WAAO,MAAM;AAACD,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AAA0D,KAAxE;AAED,GALQ,CAAT,CA/ByB,CAsCvB;;AACA,QAAMK,eAAe,GAAG,EAAxB;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,UAAQR,KAAK,CAACS,KAAN,CAAYC,MAApB;AACE,SAAM,CAAN;AACAH,MAAAA,eAAe,CAACI,IAAhB,CAAqB,MAArB,EAA6B,KAA7B;AACG;;AACH,SAAM,CAAN;AACAJ,MAAAA,eAAe,CAACI,IAAhB,CAAqB,KAArB;AACG;;AACH,SAAM,CAAN;AACEJ,MAAAA,eAAe,CAACI,IAAhB,CAAqB,QAArB;AACC;;AACH;AACAJ,MAAAA,eAAe,CAACI,IAAhB,CAAqB,OAArB;AACC;AAZH,GA1CuB,CAyDvB;AACA;AACE;;;AACA,QAAMC,YAAY,GAAG,WAAWL,eAAhC,CA5DqB,CA8DvB;AAEA;;AAGA,SAEI;AAAK,IAAA,SAAS,EAAIT,OAAO,CAACC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAK,CAACa,KAAX,CAFR,EAGQ;AAAG,IAAA,SAAS,EAAEhB,UAAU,CAAC;AAAC,OAACC,OAAO,CAACS,eAAe,CAAC,CAAD,CAAhB,CAAR,GAA+B,IAAhC;AAAsC,OAACT,OAAO,CAACS,eAAe,CAAC,CAAD,CAAhB,CAAR,GAA+B;AAArE,KAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHR,EAOA;AACE,IAAA,SAAS,EAAIT,OAAO,CAACgB,UADvB;AAEE,IAAA,OAAO,EAAId,KAAK,CAACe,OAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPA,EAUA;AACI,IAAA,OAAO,EAAIf,KAAK,CAACgB,YADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVA,CAFJ;AAyBH,CA5FD;;AA6FA,eAAejB,OAAf,C,CAEA;AAGA;;AACA;;;;;;;;;;;;;;;;;;AAoBA","sourcesContent":["import React, {useEffect} from 'react'\n//import rocky from '../../containers/App.module.css'\nimport classNames from 'classnames';\nimport classes from './Cockpit.module.css'\n\n\nconst Cockpit = (props) => {\n\n    useEffect(() => {\n      //can do anything that componentDidUpdate can do\n      //can send http request here\n      console.log('[Cockpit.js] useffect')\n    \n    //getting rid of timer\n    const timer = setTimeout(() => {\n      alert('Saved data to cloud')\n    }, 1000)\n    \n    return () => {\n      clearTimeout(timer); \n      console.log('[Cockpit.js] cleanup work in useEffect')\n    }\n  })\n\n    /*\n    setTimeout(() => {\n      alert('Saved data to cloud')\n    }, 1000);\n    return () => { //don't have to have a return statement\n      console.log('[Cockpit.js] cleanup work in useEffect')\n    }\n  }, []); \n  */\n  //if 2nd argument [props.tasks] it doesn't involve tasks -> it won't run this again\n//[props.tasks]\n\n\n  useEffect(() => {\n\n    console.log('[Cockpit.js] 2nd useEffect');\n    return () => {console.log('[Cockpit.js] cleanup work in 2nd UseEffect')}\n\n  })\n    \n    //styling the 'Things to Do' using strings for classnames\n    const assignedClasses = [];\n    let btnClass = '';\n\n    switch (props.tasks.length) {\n      case (3): \n      assignedClasses.push('bold', 'red')\n         break\n      case (2): \n      assignedClasses.push('red')\n         break\n      case (1):\n        assignedClasses.push('orange')\n         break\n      default: \n      assignedClasses.push('green')\n       break\n    }\n    \n    //console.log(assignedClasses[0])\n    //add multiple classes for <p> w/ strings\n      //const classesFinal = classes.join(' ')\n      const classesFinal = 'rocky.' + assignedClasses\n\n    //console.log(classesFinal)\n    \n    //console.log(`This is classesFinal ${classesFinal}`)\n\n\n    return (\n        \n        <div className = {classes.Cockpit}>\n           \n                <h1>{props.title}</h1>\n                <p className={classNames({[classes[assignedClasses[0]]]: true, [classes[assignedClasses[1]]]: true})}>Things to Do!</p>\n            \n        \n\n        <button \n          className = {classes.specialbtn}\n          onClick = {props.clicked}>Show Task</button>\n        <button\n            onClick = {props.todayClicked}>Show Today Schedule\n            \n        </button>\n\n\n        \n      </div>\n    \n        \n        \n    );\n\n}\nexport default Cockpit;\n\n//export default React.memo(Cockpit);\n\n\n// </div>\n/* <React.Fragment>\n        <div>\n\n      \n        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        <label class=\"btn btn-secondary active\">\n          <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Active\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Radio\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Radio\n        </label>\n      </div>\n      </div>\n      </React.Fragment>     */\n\n\n\n/* Radio Buttons\n<React.Fragment>\n            <div>\n                <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <label class=\"btn btn-secondary active\">\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Today\n                    </label>\n                    <label class=\"btn btn-secondary\">\n                        <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Week\n                        </label>\n                <label class=\"btn btn-secondary\">\n                    <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Month\n                    </label>\n                </div>\n            </div>\n        </React.Fragment> \n*/"]},"metadata":{},"sourceType":"module"}
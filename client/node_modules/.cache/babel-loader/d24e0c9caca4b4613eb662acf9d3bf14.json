{"ast":null,"code":"import _slicedToArray from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/TodayTasks/TodayTasks.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodayTask from './TodayTask/TodayTask';\nimport student from '../../containers/Student.css';\n\nconst TodayTasks = props => {\n  //get props from app.js, run through each element in state to feed into <Task>\n  //todo,deadline,location,key,click, changed sent to <Task>\n  const renderTableHeaderHandler = () => {\n    //let header = Object.keys(props.monday[0]);\n    //lastTodayTasksHeader\n    let header = Object.keys(props.lastTodayTasksHeader);\n    return header.map((key, index) => {\n      if (key === 'id') {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"Click\\xA0to\\xA0Delete\");\n      } else {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, key.toUpperCase());\n      }\n    });\n  };\n\n  const todayTasksHandler = () => {\n    return props.monday.map((monday, index) => {\n      const id = monday.id,\n            task = monday.task;\n      return React.createElement(React.Fragment, {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(TodayTask, {\n        todayTaskChanged: props.changed,\n        id: id,\n        task: task,\n        todayTaskChanged: props.changed,\n        deleteTodayTask: props.clicked,\n        changed: event => this.props.changed(event, Monday.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    });\n  };\n\n  const _useState = useState({\n    lastHeader: props.monday\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        lastTaskHeader = _useState2[0],\n        setLastTaskHeader = _useState2[1];\n\n  useEffect(() => {\n    // console.log(`this is the state of alert ${onCallDelete.signalAlert}`);\n    // if (onCallDelete.signalAlert === 'true') {\n    if (props.monday.length === 1) {\n      //let savedHeader = Object.keys(props.tasks[0]);\n      //let savedHeader = props.tasks\n      console.log(props.monday);\n      setLastTaskHeader({\n        lastHeader: props.monday\n      });\n      console.log(\"this is the last task alert \".concat(lastTaskHeader.lastHeader));\n    }\n\n    if (props.reRenderTodayTasks === true) {// alert('Are you sure you want to delete this task?');\n      //return (props.reRender = {})\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" Today's Tasks\"), React.createElement(\"table\", {\n    id: \"students\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, renderTableHeaderHandler()), todayTasksHandler())));\n};\n\nexport default TodayTasks;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/TodayTasks/TodayTasks.js"],"names":["React","useState","useEffect","TodayTask","student","TodayTasks","props","renderTableHeaderHandler","header","Object","keys","lastTodayTasksHeader","map","key","index","toUpperCase","todayTasksHandler","monday","id","task","changed","clicked","event","Monday","lastHeader","lastTaskHeader","setLastTaskHeader","length","console","log","reRenderTodayTasks"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodayTask from './TodayTask/TodayTask';\nimport student from '../../containers/Student.css';\n\nconst TodayTasks = props => {\n  //get props from app.js, run through each element in state to feed into <Task>\n  //todo,deadline,location,key,click, changed sent to <Task>\n\n  const renderTableHeaderHandler = () => {\n    //let header = Object.keys(props.monday[0]);\n    //lastTodayTasksHeader\n    let header = Object.keys(props.lastTodayTasksHeader);\n    return header.map((key, index) => {\n      if (key === 'id') {\n        return <th key={index}>Click to Delete</th>;\n      } else {\n        return <th key={index}>{key.toUpperCase()}</th>;\n      }\n    });\n  };\n\n  const todayTasksHandler = () => {\n    return props.monday.map((monday, index) => {\n      const { id, task } = monday;\n      return (\n        <React.Fragment key={id}>\n          <TodayTask\n            todayTaskChanged={props.changed}\n            id={id}\n            task={task}\n            todayTaskChanged={props.changed}\n            deleteTodayTask={props.clicked}\n            changed={event => this.props.changed(event, Monday.id)}\n          />\n        </React.Fragment>\n      );\n    });\n  };\n\n  const [lastTaskHeader, setLastTaskHeader] = useState({\n    lastHeader: props.monday\n  });\n  useEffect(() => {\n    // console.log(`this is the state of alert ${onCallDelete.signalAlert}`);\n    // if (onCallDelete.signalAlert === 'true') {\n\n    if (props.monday.length === 1) {\n      //let savedHeader = Object.keys(props.tasks[0]);\n      //let savedHeader = props.tasks\n      console.log(props.monday);\n      setLastTaskHeader({ lastHeader: props.monday });\n\n      console.log(`this is the last task alert ${lastTaskHeader.lastHeader}`);\n    }\n    if (props.reRenderTodayTasks === true) {\n      // alert('Are you sure you want to delete this task?');\n      //return (props.reRender = {})\n    }\n  });\n\n  return (\n    <div>\n      <h1 id=\"title\"> Today's Tasks</h1>\n      <table id=\"students\">\n        <tbody>\n          <tr>{renderTableHeaderHandler()}</tr>\n          {todayTasksHandler()}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default TodayTasks;\n"]},"metadata":{},"sourceType":"module"}
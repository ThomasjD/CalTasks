{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/CalendarData.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nimport DatePicker from 'react-datepicker';\n\nclass CalendarData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showChooseDate: false\n    };\n\n    this.createDayObjName = () => {\n      alert('inside createDayObjName');\n      let day = this.state.startTimeDate.day; //let year = this.state.startTimeDate.\n\n      let date = this.state.startTimeDate.toLocalString;\n      console.log(date);\n    };\n\n    this.newDayObj = () => {//obj name 200219Wed\n    };\n\n    this.createDayObjName = () => {\n      /*\n        //datepicker to give obj of startime\n        //use starttime to make obj name\n        //d\n          */\n    };\n  }\n\n  handleStartTimeDateChange(date) {\n    alert('inside handleStartTimeDateChange');\n    let currentShowStartTimeDate = this.state.showStartTimeDate;\n    let startTimeDate = {\n      date: date,\n      dateObjectString: date.toString(),\n      toISOString: date.toISOString(),\n      toUTCString: date.toUTCString(),\n      toGMTString: date.toUTCString(),\n      dateString: date.toDateString(),\n      timeString: date.toTimeString(),\n      year: date.getFullYear(),\n      yearShort: date.getYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay(),\n      time: date.toLocaleTimeString(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      UTCDate: date.getUTCDate(),\n      toLocalString: date.toLocaleString(),\n      toLocalDateString: date.toLocaleDateString(),\n      toLocaleTimeString: date.toLocaleTimeString()\n    };\n    this.setState({\n      showStartTimeDate: !currentShowStartTimeDate,\n      startDate: date,\n      startTimeDate: startTimeDate\n    }, event => this.createDayObjName(event) // () => this.props.startDateTimeHandler(this.state.startTimeDate)\n    );\n  }\n\n  render() {\n    //datePicker\n    // let chooseDate = null;\n    // if (this.state.showChooseDate) {\n    //   chooseDate = (\n    //     <React.Fragment>\n    //       <div className=\"container\">\n    //         <DatePicker\n    //           placeholderText=\"Choose Start Time\"\n    //           selected={this.state.startDate}\n    //           onChange={date => this.handleStartTimeDateChange(date)}\n    //           showTimeSelect\n    //           timeFormat=\"HH:mm\"\n    //           timeIntervals={30}\n    //           timeCaption=\"Start\"\n    //           dateFormat=\"MMMM d, yyyy h:mm aa\"\n    //         />\n    //         {/* <DatePicker\n    //         placeholderText=\"Choose End Time\"\n    //         selected={this.state.finishDate}\n    //         onChange={date => this.handleFinishTimeDateChange(date)}\n    //         showTimeSelect\n    //         timeFormat=\"HH:mm\"\n    //         timeIntervals={15}\n    //         timeCaption=\"End\"\n    //         dateFormat=\"MMMM d, yyyy h:mm aa\"\n    //       /> */}\n    //       </div>\n    //     </React.Fragment>\n    //   );\n    // }\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      placeholderText: \"Choose Start Time\",\n      selected: this.state.startDate,\n      onChange: date => this.handleStartTimeDateChange(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 30,\n      timeCaption: \"Start\",\n      dateFormat: \"MMMM d, yyyy h:mm aa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CalendarData;\n{\n  /* <button\n          onClick={() => {\n            this.setState({\n              showChooseDate: !this.state.showChooseDate\n            });\n          }}\n        >\n          PickDate\n        </button> */\n}","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/CalendarData.js"],"names":["React","Component","RightCockpit","TasksContext","DatePicker","CalendarData","constructor","props","state","showChooseDate","createDayObjName","alert","day","startTimeDate","date","toLocalString","console","log","newDayObj","handleStartTimeDateChange","currentShowStartTimeDate","showStartTimeDate","dateObjectString","toString","toISOString","toUTCString","toGMTString","dateString","toDateString","timeString","toTimeString","year","getFullYear","yearShort","getYear","month","getMonth","getDate","getDay","time","toLocaleTimeString","hour","getHours","minute","getMinutes","UTCDate","getUTCDate","toLocaleString","toLocalDateString","toLocaleDateString","setState","startDate","event","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nimport DatePicker from 'react-datepicker';\n\nclass CalendarData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newDayObj = () => {\n      //obj name 200219Wed\n    };\n\n    this.createDayObjName = () => {\n      /*\n        //datepicker to give obj of startime\n        //use starttime to make obj name\n        //d\n\n\n\n\n      */\n    };\n  }\n  state = {\n    showChooseDate: false\n  };\n\n  createDayObjName = () => {\n    alert('inside createDayObjName');\n    let day = this.state.startTimeDate.day;\n    //let year = this.state.startTimeDate.\n    let date = this.state.startTimeDate.toLocalString;\n    console.log(date);\n  };\n\n  handleStartTimeDateChange(date) {\n    alert('inside handleStartTimeDateChange');\n    let currentShowStartTimeDate = this.state.showStartTimeDate;\n    let startTimeDate = {\n      date: date,\n      dateObjectString: date.toString(),\n      toISOString: date.toISOString(),\n      toUTCString: date.toUTCString(),\n      toGMTString: date.toUTCString(),\n      dateString: date.toDateString(),\n      timeString: date.toTimeString(),\n      year: date.getFullYear(),\n      yearShort: date.getYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay(),\n      time: date.toLocaleTimeString(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      UTCDate: date.getUTCDate(),\n      toLocalString: date.toLocaleString(),\n      toLocalDateString: date.toLocaleDateString(),\n      toLocaleTimeString: date.toLocaleTimeString()\n    };\n\n    this.setState(\n      {\n        showStartTimeDate: !currentShowStartTimeDate,\n        startDate: date,\n        startTimeDate: startTimeDate\n      },\n      event => this.createDayObjName(event)\n\n      // () => this.props.startDateTimeHandler(this.state.startTimeDate)\n    );\n  }\n\n  render() {\n    //datePicker\n    // let chooseDate = null;\n    // if (this.state.showChooseDate) {\n    //   chooseDate = (\n    //     <React.Fragment>\n    //       <div className=\"container\">\n    //         <DatePicker\n    //           placeholderText=\"Choose Start Time\"\n    //           selected={this.state.startDate}\n    //           onChange={date => this.handleStartTimeDateChange(date)}\n    //           showTimeSelect\n    //           timeFormat=\"HH:mm\"\n    //           timeIntervals={30}\n    //           timeCaption=\"Start\"\n    //           dateFormat=\"MMMM d, yyyy h:mm aa\"\n    //         />\n\n    //         {/* <DatePicker\n    //         placeholderText=\"Choose End Time\"\n    //         selected={this.state.finishDate}\n    //         onChange={date => this.handleFinishTimeDateChange(date)}\n    //         showTimeSelect\n    //         timeFormat=\"HH:mm\"\n    //         timeIntervals={15}\n    //         timeCaption=\"End\"\n    //         dateFormat=\"MMMM d, yyyy h:mm aa\"\n    //       /> */}\n    //       </div>\n    //     </React.Fragment>\n    //   );\n    // }\n\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <DatePicker\n            placeholderText=\"Choose Start Time\"\n            selected={this.state.startDate}\n            onChange={date => this.handleStartTimeDateChange(date)}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={30}\n            timeCaption=\"Start\"\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default CalendarData;\n{\n  /* <button\n          onClick={() => {\n            this.setState({\n              showChooseDate: !this.state.showChooseDate\n            });\n          }}\n        >\n          PickDate\n        </button> */\n}\n"]},"metadata":{},"sourceType":"module"}
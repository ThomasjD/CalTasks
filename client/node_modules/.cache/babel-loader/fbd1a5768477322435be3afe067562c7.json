{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/CalendarData.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nimport DatePicker from 'react-datepicker';\nimport numToDay from '../../components/Calendar/numToDay'; //import * as moment from 'moment';\n\nimport { format, compareAsc } from 'date-fns';\n\nclass CalendarData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showChooseDate: false,\n      days: {\n        '200204Tue': {\n          unscheduledtasks: [{\n            id: 'task8',\n            title: 'homework;'\n          }]\n        }\n      }\n    };\n\n    this.createDayObjName = event => {\n      event.preventDefault();\n      alert('inside createDayObjName');\n      let day = this.state.startTimeDate.day;\n      let date = this.state.startTimeDate.toLocalString;\n      console.log(date);\n    };\n\n    this.newDayObj = dayObjName => {\n      console.log('inside newDayObj '); //empty obj if dayObjName doesn't exist\n\n      let dayObjName2 = {\n        unScheduledTask: dayObjName,\n        repeats: ['hello', 'there'],\n        hours: {\n          '00:00': '',\n          '00:30': '',\n          '01:00': '',\n          '01:30': '',\n          '02:00': '',\n          '02:30': '',\n          '03:00': '',\n          '03:30': '',\n          '04:00': '',\n          '04:30': '',\n          '05:00': '',\n          '05:30': '',\n          '06:00': '',\n          '06:30': '',\n          '07:00': '',\n          '08:30': '',\n          '08:00': '',\n          '08:30': '',\n          '09:00': '',\n          '09:30': '',\n          '10:00': '',\n          '10:30': '',\n          '11:00': '',\n          '11:30': '',\n          '12:00': '',\n          '12:30': '',\n          '13:00': '',\n          '13:30': '',\n          '14:00': '',\n          '14:30': '',\n          '15:00': '',\n          '15:30': '',\n          '16:00': '',\n          '16:30': '',\n          '17:00': '',\n          '17:30': '',\n          '18:00': '',\n          '18.30': '',\n          '19:00': '',\n          '19.30': '',\n          '20:00': '',\n          '20.30': '',\n          '21:00': '',\n          '21.30': '',\n          '02:00': '',\n          '22.30': '',\n          '23:00': '',\n          '23.30': '',\n          '24:00': '',\n          '24.30': ''\n        }\n      };\n      console.dir(dayObjName); // let currentDaysObj = { ...this.state.days };\n      // let upgradeDaysObj = {};\n      // if (currentDaysObj[dayObjName]) {\n      //   upgradeDaysObj = { ...currentDaysObj, [dayObjName]: day };\n      // } else {\n      //   let randomTask = { id: '2432', title: 'grocery shopping' };\n      //   let currentDayObj = { ...this.state.days[dayObjName] };\n      //   let currentDayUnScheduledTask = currentDayObj.unScheduledTask;\n      //   let upgradedDayUnScheduledTask = currentDayUnScheduledTask.push(\n      //     randomTask\n      //   );\n      //   let upgradedDayObj = {\n      //     ...currentDayObj,\n      //     unScheduledTask: upgradedDayUnScheduledTask\n      //   };\n\n      let updatedDayObj = _objectSpread({}, this.state.days, {\n        [dayObjName]: dayObjName2\n      });\n\n      this.setState({\n        days: updatedDayObj\n      }); // }\n    }; //this.createDayObjName = () => {};\n\n  }\n\n  handleStartTimeDateChange(date) {\n    let currentShowStartTimeDate = this.state.showStartTimeDate;\n    let day = format(date, 'E');\n    let dateDigit = format(date, 'dd');\n    let year = format(date, 'yy');\n    let month = format(date, 'MM');\n    let dayObjName = year + month + dateDigit + day;\n    console.log(`day: ${day} type: ${typeof day}`);\n    console.log(`date: ${dateDigit} type: ${typeof dateDigit}`);\n    console.log(`year: ${year} type: ${typeof year}`);\n    console.log(`month: ${month} type: ${typeof month}`);\n    console.log(`dayObjName: ${dayObjName} type: ${typeof dayObjName}`);\n    let currentDaysObj = this.state.days; //if there there is NO obj for that day\n\n    if (typeof currentDaysObj[dayObjName] == 'undefined') {\n      this.newDayObj(dayObjName);\n    } else {\n      //if there is an obj for that day\n      let newTask = {\n        id: 'task243',\n        title: 'groceries'\n      }; //[dayObjName]\n\n      let updatedDaysObj = _objectSpread({}, this.state.days[dayObjName], {\n        [dayObjName]: newTask //[dayObjName]: newTask\n\n      });\n\n      this.setState({\n        days: updatedDaysObj\n      }, // () => console.log('afterSetState')\n      () => console.log(this.state.days[dayObjName]));\n    } // //dynamic keys use []\n    // let currentDaysObj = {\n    //   ...this.state.days,\n    //   [dayObjName]: {\n    //     word: 'hello'\n    //   }\n    // };\n    // console.dir(currentDaysObj);\n    // this.setState(\n    //   {\n    //     showStartTimeDate: !currentShowStartTimeDate,\n    //     startDate: date\n    //     // startTimeDate: startTimeDate\n    //   },\n    //   () => console.log(day)\n    // );\n\n  }\n\n  render() {\n    console.dir(this.state);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      placeholderText: \"Choose Start Time\",\n      selected: this.state.startDate,\n      onChange: date => this.handleStartTimeDateChange(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 30,\n      timeCaption: \"Start\",\n      dateFormat: \"MMMM dd, yyyy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CalendarData;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/CalendarData.js"],"names":["React","Component","RightCockpit","TasksContext","DatePicker","numToDay","format","compareAsc","CalendarData","constructor","props","state","showChooseDate","days","unscheduledtasks","id","title","createDayObjName","event","preventDefault","alert","day","startTimeDate","date","toLocalString","console","log","newDayObj","dayObjName","dayObjName2","unScheduledTask","repeats","hours","dir","updatedDayObj","setState","handleStartTimeDateChange","currentShowStartTimeDate","showStartTimeDate","dateDigit","year","month","currentDaysObj","newTask","updatedDaysObj","render","startDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nimport DatePicker from 'react-datepicker';\nimport numToDay from '../../components/Calendar/numToDay';\n//import * as moment from 'moment';\nimport { format, compareAsc } from 'date-fns';\nclass CalendarData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newDayObj = dayObjName => {\n      console.log('inside newDayObj ');\n      //empty obj if dayObjName doesn't exist\n      let dayObjName2 = {\n        unScheduledTask: dayObjName,\n        repeats: ['hello', 'there'],\n        hours: {\n          '00:00': '',\n          '00:30': '',\n          '01:00': '',\n          '01:30': '',\n          '02:00': '',\n          '02:30': '',\n          '03:00': '',\n          '03:30': '',\n          '04:00': '',\n          '04:30': '',\n          '05:00': '',\n          '05:30': '',\n          '06:00': '',\n          '06:30': '',\n          '07:00': '',\n          '08:30': '',\n          '08:00': '',\n          '08:30': '',\n          '09:00': '',\n          '09:30': '',\n          '10:00': '',\n          '10:30': '',\n          '11:00': '',\n          '11:30': '',\n          '12:00': '',\n          '12:30': '',\n          '13:00': '',\n          '13:30': '',\n          '14:00': '',\n          '14:30': '',\n          '15:00': '',\n          '15:30': '',\n          '16:00': '',\n          '16:30': '',\n          '17:00': '',\n          '17:30': '',\n          '18:00': '',\n          '18.30': '',\n          '19:00': '',\n          '19.30': '',\n          '20:00': '',\n          '20.30': '',\n          '21:00': '',\n          '21.30': '',\n          '02:00': '',\n          '22.30': '',\n          '23:00': '',\n          '23.30': '',\n          '24:00': '',\n          '24.30': ''\n        }\n      };\n      console.dir(dayObjName);\n\n      // let currentDaysObj = { ...this.state.days };\n      // let upgradeDaysObj = {};\n\n      // if (currentDaysObj[dayObjName]) {\n      //   upgradeDaysObj = { ...currentDaysObj, [dayObjName]: day };\n      // } else {\n      //   let randomTask = { id: '2432', title: 'grocery shopping' };\n      //   let currentDayObj = { ...this.state.days[dayObjName] };\n      //   let currentDayUnScheduledTask = currentDayObj.unScheduledTask;\n      //   let upgradedDayUnScheduledTask = currentDayUnScheduledTask.push(\n      //     randomTask\n      //   );\n\n      //   let upgradedDayObj = {\n      //     ...currentDayObj,\n      //     unScheduledTask: upgradedDayUnScheduledTask\n      //   };\n\n      let updatedDayObj = { ...this.state.days, [dayObjName]: dayObjName2 };\n      this.setState({ days: updatedDayObj });\n\n      // }\n    };\n\n    //this.createDayObjName = () => {};\n  }\n  state = {\n    showChooseDate: false,\n    days: {\n      '200204Tue': {\n        unscheduledtasks: [{ id: 'task8', title: 'homework;' }]\n      }\n    }\n  };\n\n  createDayObjName = event => {\n    event.preventDefault();\n    alert('inside createDayObjName');\n    let day = this.state.startTimeDate.day;\n\n    let date = this.state.startTimeDate.toLocalString;\n    console.log(date);\n  };\n\n  handleStartTimeDateChange(date) {\n    let currentShowStartTimeDate = this.state.showStartTimeDate;\n    let day = format(date, 'E');\n    let dateDigit = format(date, 'dd');\n    let year = format(date, 'yy');\n    let month = format(date, 'MM');\n    let dayObjName = year + month + dateDigit + day;\n\n    console.log(`day: ${day} type: ${typeof day}`);\n    console.log(`date: ${dateDigit} type: ${typeof dateDigit}`);\n    console.log(`year: ${year} type: ${typeof year}`);\n    console.log(`month: ${month} type: ${typeof month}`);\n    console.log(`dayObjName: ${dayObjName} type: ${typeof dayObjName}`);\n    let currentDaysObj = this.state.days;\n\n    //if there there is NO obj for that day\n    if (typeof currentDaysObj[dayObjName] == 'undefined') {\n      this.newDayObj(dayObjName);\n    } else {\n      //if there is an obj for that day\n\n      let newTask = { id: 'task243', title: 'groceries' };\n\n      //[dayObjName]\n      let updatedDaysObj = {\n        ...this.state.days[dayObjName],\n        [dayObjName]: newTask\n\n        //[dayObjName]: newTask\n      };\n      this.setState(\n        {\n          days: updatedDaysObj\n        },\n        // () => console.log('afterSetState')\n        () => console.log(this.state.days[dayObjName])\n      );\n    }\n\n    // //dynamic keys use []\n    // let currentDaysObj = {\n    //   ...this.state.days,\n    //   [dayObjName]: {\n    //     word: 'hello'\n    //   }\n    // };\n\n    // console.dir(currentDaysObj);\n\n    // this.setState(\n    //   {\n    //     showStartTimeDate: !currentShowStartTimeDate,\n    //     startDate: date\n    //     // startTimeDate: startTimeDate\n    //   },\n    //   () => console.log(day)\n    // );\n  }\n\n  render() {\n    console.dir(this.state);\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <DatePicker\n            placeholderText=\"Choose Start Time\"\n            selected={this.state.startDate}\n            onChange={date => this.handleStartTimeDateChange(date)}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={30}\n            timeCaption=\"Start\"\n            dateFormat=\"MMMM dd, yyyy\"\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default CalendarData;\n"]},"metadata":{},"sourceType":"module"}
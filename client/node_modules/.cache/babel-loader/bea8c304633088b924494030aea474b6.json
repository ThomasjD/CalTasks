{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/SchedulerView.js\";\nimport React, { Component } from 'react';\nimport Scheduler, { SchedulerData, ViewTypes, DATE_FORMAT } from 'react-big-scheduler'; //include `react-big-scheduler/lib/css/style.css` for styles, link it in html or import it here\n\nimport 'react-big-scheduler/lib/css/style.css';\nimport moment from 'moment';\n\nclass ScheduleView extends Component {\n  constructor(props) {\n    super(props); //2. create the view model, put it in the props obj\n\n    let schedulerData = new SchedulerData(new moment().format(DATE_FORMAT), ViewTypes.Week); //set locale moment to the schedulerData, if your locale isn't English. By default, Scheduler comes with English(en, United States).\n\n    moment.locale('zh-cn');\n    schedulerData.setLocaleMoment(moment); //set resources here or later\n\n    let resources = [{\n      id: 'r1',\n      name: 'Resource1'\n    }, {\n      id: 'r2',\n      name: 'Resource2'\n    }, {\n      id: 'r3',\n      name: 'Resource3'\n    }];\n    schedulerData.setResources(resources); //set events here or later,\n    //the event array should be sorted in ascending order by event.start property, otherwise there will be some rendering errors\n\n    let events = [{\n      id: 1,\n      start: '2017-12-18 09:30:00',\n      end: '2017-12-19 23:30:00',\n      resourceId: 'r1',\n      title: 'I am finished',\n      bgColor: '#D9D9D9'\n    }, {\n      id: 2,\n      start: '2017-12-18 12:30:00',\n      end: '2017-12-26 23:30:00',\n      resourceId: 'r2',\n      title: 'I am not resizable',\n      resizable: false\n    }, {\n      id: 3,\n      start: '2017-12-19 12:30:00',\n      end: '2017-12-20 23:30:00',\n      resourceId: 'r3',\n      title: 'I am not movable',\n      movable: false\n    }, {\n      id: 4,\n      start: '2017-12-19 14:30:00',\n      end: '2017-12-20 23:30:00',\n      resourceId: 'r1',\n      title: 'I am not start-resizable',\n      startResizable: false\n    }, {\n      id: 5,\n      start: '2017-12-19 15:30:00',\n      end: '2017-12-20 23:30:00',\n      resourceId: 'r2',\n      title: 'R2 has recurring tasks every week on Tuesday, Friday',\n      rrule: 'FREQ=WEEKLY;DTSTART=20171219T013000Z;BYDAY=TU,FR',\n      bgColor: '#f759ab'\n    }];\n    schedulerData.setEvents(events);\n  }\n\n  render() {\n    const schedulerData = this.props.schedulerData;\n    return React.createElement(Scheduler, {\n      schedulerData: schedulerData,\n      prevClick: this.prevClick,\n      nextClick: this.nextClick,\n      onSelectDate: this.onSelectDate,\n      onViewChange: this.onViewChange,\n      eventItemClick: this.eventClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default ScheduleView;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/SchedulerView.js"],"names":["React","Component","Scheduler","SchedulerData","ViewTypes","DATE_FORMAT","moment","ScheduleView","constructor","props","schedulerData","format","Week","locale","setLocaleMoment","resources","id","name","setResources","events","start","end","resourceId","title","bgColor","resizable","movable","startResizable","rrule","setEvents","render","prevClick","nextClick","onSelectDate","onViewChange","eventClicked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Scheduler, {\n  SchedulerData,\n  ViewTypes,\n  DATE_FORMAT\n} from 'react-big-scheduler';\n//include `react-big-scheduler/lib/css/style.css` for styles, link it in html or import it here\nimport 'react-big-scheduler/lib/css/style.css';\nimport moment from 'moment';\n\nclass ScheduleView extends Component {\n  constructor(props) {\n    super(props);\n    //2. create the view model, put it in the props obj\n    let schedulerData = new SchedulerData(\n      new moment().format(DATE_FORMAT),\n      ViewTypes.Week\n    );\n    //set locale moment to the schedulerData, if your locale isn't English. By default, Scheduler comes with English(en, United States).\n    moment.locale('zh-cn');\n    schedulerData.setLocaleMoment(moment);\n    //set resources here or later\n    let resources = [\n      {\n        id: 'r1',\n        name: 'Resource1'\n      },\n      {\n        id: 'r2',\n        name: 'Resource2'\n      },\n      {\n        id: 'r3',\n        name: 'Resource3'\n      }\n    ];\n    schedulerData.setResources(resources);\n    //set events here or later,\n    //the event array should be sorted in ascending order by event.start property, otherwise there will be some rendering errors\n    let events = [\n      {\n        id: 1,\n        start: '2017-12-18 09:30:00',\n        end: '2017-12-19 23:30:00',\n        resourceId: 'r1',\n        title: 'I am finished',\n        bgColor: '#D9D9D9'\n      },\n      {\n        id: 2,\n        start: '2017-12-18 12:30:00',\n        end: '2017-12-26 23:30:00',\n        resourceId: 'r2',\n        title: 'I am not resizable',\n        resizable: false\n      },\n      {\n        id: 3,\n        start: '2017-12-19 12:30:00',\n        end: '2017-12-20 23:30:00',\n        resourceId: 'r3',\n        title: 'I am not movable',\n        movable: false\n      },\n      {\n        id: 4,\n        start: '2017-12-19 14:30:00',\n        end: '2017-12-20 23:30:00',\n        resourceId: 'r1',\n        title: 'I am not start-resizable',\n        startResizable: false\n      },\n      {\n        id: 5,\n        start: '2017-12-19 15:30:00',\n        end: '2017-12-20 23:30:00',\n        resourceId: 'r2',\n        title: 'R2 has recurring tasks every week on Tuesday, Friday',\n        rrule: 'FREQ=WEEKLY;DTSTART=20171219T013000Z;BYDAY=TU,FR',\n        bgColor: '#f759ab'\n      }\n    ];\n    schedulerData.setEvents(events);\n  }\n\n  render() {\n    const { schedulerData } = this.props;\n    return (\n      <Scheduler\n        schedulerData={schedulerData}\n        prevClick={this.prevClick}\n        nextClick={this.nextClick}\n        onSelectDate={this.onSelectDate}\n        onViewChange={this.onViewChange}\n        eventItemClick={this.eventClicked}\n      />\n    );\n  }\n}\n\nexport default ScheduleView;\n"]},"metadata":{},"sourceType":"module"}
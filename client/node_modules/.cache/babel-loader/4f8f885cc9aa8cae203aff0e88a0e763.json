{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Template/dynamic charts/Dynamic Line Chart.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar dps = [{\n  x: 1,\n  y: 10\n}, {\n  x: 2,\n  y: 13\n}, {\n  x: 3,\n  y: 18\n}, {\n  x: 4,\n  y: 20\n}, {\n  x: 5,\n  y: 17\n}, {\n  x: 6,\n  y: 10\n}, {\n  x: 7,\n  y: 13\n}, {\n  x: 8,\n  y: 18\n}, {\n  x: 9,\n  y: 20\n}, {\n  x: 10,\n  y: 17\n}]; //dataPoints.\n\nvar xVal = dps.length + 1;\nvar yVal = 15;\nvar updateInterval = 1000;\n\nclass DynamicLineChart extends Component {\n  constructor() {\n    super();\n    this.updateChart = this.updateChart.bind(this);\n  }\n\n  componentDidMount() {\n    setInterval(this.updateChart, updateInterval);\n  }\n\n  updateChart() {\n    yVal = yVal + Math.round(5 + Math.random() * (-5 - 5));\n    dps.push({\n      x: xVal,\n      y: yVal\n    });\n    xVal++;\n\n    if (dps.length > 10) {\n      dps.shift();\n    }\n\n    this.chart.render();\n  }\n\n  render() {\n    const options = {\n      title: {\n        text: \"Dynamic Line Chart\"\n      },\n      data: [{\n        type: \"line\",\n        dataPoints: dps\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"React Dynamic Line Chart\"), React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DynamicLineChart;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Template/dynamic charts/Dynamic Line Chart.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","dps","x","y","xVal","length","yVal","updateInterval","DynamicLineChart","constructor","updateChart","bind","componentDidMount","setInterval","Math","round","random","push","shift","chart","render","options","title","text","data","type","dataPoints","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC;AAEA,IAAIC,GAAG,GAAG,CAAC;AAACC,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAAD,EAAgB;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAAhB,EAA+B;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAA/B,EAA8C;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAA9C,EAA6D;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAA7D,EAA2E;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAA3E,EAA0F;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAA1F,EAAyG;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAAzG,EAAwH;AAACD,EAAAA,CAAC,EAAE,CAAJ;AAAOC,EAAAA,CAAC,EAAE;AAAV,CAAxH,EAAuI;AAACD,EAAAA,CAAC,EAAE,EAAJ;AAAQC,EAAAA,CAAC,EAAE;AAAX,CAAvI,CAAV,C,CAAoK;;AACpK,IAAIC,IAAI,GAAGH,GAAG,CAACI,MAAJ,GAAa,CAAxB;AACA,IAAIC,IAAI,GAAG,EAAX;AACA,IAAIC,cAAc,GAAG,IAArB;;AAEA,MAAMC,gBAAN,SAA+BV,SAA/B,CAAyC;AACxCW,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA;;AACDC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,WAAW,CAAC,KAAKH,WAAN,EAAmBH,cAAnB,CAAX;AACA;;AACDG,EAAAA,WAAW,GAAG;AACbJ,IAAAA,IAAI,GAAGA,IAAI,GAAIQ,IAAI,CAACC,KAAL,CAAW,IAAID,IAAI,CAACE,MAAL,MAAgB,CAAC,CAAD,GAAG,CAAnB,CAAf,CAAf;AACAf,IAAAA,GAAG,CAACgB,IAAJ,CAAS;AAACf,MAAAA,CAAC,EAAEE,IAAJ;AAASD,MAAAA,CAAC,EAAEG;AAAZ,KAAT;AACAF,IAAAA,IAAI;;AACJ,QAAIH,GAAG,CAACI,MAAJ,GAAc,EAAlB,EAAuB;AACtBJ,MAAAA,GAAG,CAACiB,KAAJ;AACA;;AACD,SAAKC,KAAL,CAAWC,MAAX;AACA;;AACDA,EAAAA,MAAM,GAAG;AACR,UAAMC,OAAO,GAAG;AACfC,MAAAA,KAAK,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OADQ;AAIfC,MAAAA,IAAI,EAAE,CAAC;AACNC,QAAAA,IAAI,EAAE,MADA;AAENC,QAAAA,UAAU,EAAGzB;AAFP,OAAD;AAJS,KAAhB;AAUA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADD,EAEC,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAIoB,OAA1B;AACC,MAAA,KAAK,EAAEM,GAAG,IAAI,KAAKR,KAAL,GAAaQ,GAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADA;AASA;;AArCuC;;AAwCzC,eAAenB,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CanvasJSReact from '../../assets/canvasjs.react';\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nvar dps = [{x: 1, y: 10}, {x: 2, y: 13}, {x: 3, y: 18}, {x: 4, y: 20}, {x: 5, y: 17},{x: 6, y: 10}, {x: 7, y: 13}, {x: 8, y: 18}, {x: 9, y: 20}, {x: 10, y: 17}];   //dataPoints.\r\nvar xVal = dps.length + 1;\r\nvar yVal = 15;\r\nvar updateInterval = 1000;\r\n\r\nclass DynamicLineChart extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.updateChart = this.updateChart.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tsetInterval(this.updateChart, updateInterval);\r\n\t}\r\n\tupdateChart() {\r\n\t\tyVal = yVal +  Math.round(5 + Math.random() *(-5-5));\r\n\t\tdps.push({x: xVal,y: yVal});\r\n\t\txVal++;\r\n\t\tif (dps.length >  10 ) {\r\n\t\t\tdps.shift();\r\n\t\t}\r\n\t\tthis.chart.render();\r\n\t}\r\n\trender() {\r\n\t\tconst options = {\r\n\t\t\ttitle :{\r\n\t\t\t\ttext: \"Dynamic Line Chart\"\r\n\t\t\t},\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdataPoints : dps\r\n\t\t\t}]\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>React Dynamic Line Chart</h1>\r\n\t\t\t<CanvasJSChart options = {options} \r\n\t\t\t\tonRef={ref => this.chart = ref}\r\n\t\t\t/>\r\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DynamicLineChart;"]},"metadata":{},"sourceType":"module"}
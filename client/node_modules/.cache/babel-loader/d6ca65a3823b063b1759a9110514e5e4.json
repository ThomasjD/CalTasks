{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/TasksData.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit'; //import TasksContext from '../../context/tasksContext';\n\nimport calendarObj from '../../components/Calendar/calendarObj';\nimport numToDay from '../../components/Calendar/numToDay';\nimport StoreContext from '../../context/StoreDataContext';\n\nclass TasksData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataBaseName: 'tasks',\n      showHowBusyWeeek: false,\n      //NewEvent\n      assignedTimeStart: '',\n      //14:00:00 GMT-0500 (Colombia Standard Time)\n      assignedTimeStop: '',\n      //00:00 - 24:00, string\n      assignedDateStart: '',\n      //Thu Jan 16 2020\n      assignedDateStop: '',\n      //optional\n      eventDuration: '',\n      //\n      blockOffTimeSlot: '',\n      //T-F  when event will take on time slot for scheduled day\n      unAssignedTasksForWeek: [{\n        id: 'qrwrwq',\n        scheduleTask: null,\n        task: 'Find work',\n        deadline: 'Lunes',\n        category: 'workout',\n        source: '' //Syllabus/syllabusId/syllabusTitle\n\n      }, {\n        id: 'egewhw',\n        scheduleTask: null,\n        task: 'buy shoes',\n        deadline: 'Martes',\n        category: 'programing',\n        source: ''\n      }, {\n        id: 'asfasv',\n        scheduleTask: null,\n        task: 'mail package',\n        deadline: 'Jueves',\n        category: 'study',\n        source: ''\n      }],\n      Monday: [{\n        id: 'morning1',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'programing',\n        source: '',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'afternoon1',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'workout'\n      }, {\n        id: 'evening1',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'errands',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }],\n      Tuesday: [{\n        id: 'morning2',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'errands',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      } // {\n      //   id: 'afternoon2',\n      //   timeOfDay: 'afternoon',\n      //   task: 'eat lunch',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles',\n      //   assignedTimeStart: '',\n      //   assignedTimeStop: '',\n      //   assignedDate: ''\n      // },\n      // {\n      //   id: 'evening2',\n      //   timeOfDay: 'evening',\n      //   task: 'play ball',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles'\n      // }\n      ],\n      Wednesday: [{\n        id: 'morning3',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'afternoon3',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'evening3',\n        timeOfDay: '',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }],\n      // Thursday: [\n      //   {\n      //     id: 'morning4',\n      //     timeOfDay: 'morning',\n      //     task: 'comprar comida',\n      //     deadline: 'Jueves',\n      //     category: 'Laureles',\n      //     assignedTimeStart: '',\n      //     assignedTimeStop: '',\n      //     assignedDate: ''\n      //   },\n      //   {\n      //     id: 'afternoon4',\n      //     timeOfDay: 'afternoon',\n      //     task: 'eat lunch',\n      //     deadline: 'Jueves',\n      //     category: 'Laureles',\n      //     assignedTimeStart: '',\n      //     assignedTimeStop: '',\n      //     assignedDate: ''\n      //   },\n      //   {\n      //     id: 'evening4',\n      //     timeOfDay: 'evening',\n      //     task: 'play ball',\n      //     deadline: 'Jueves',\n      //     category: 'Laureles',\n      //     assignedTimeStart: '',\n      //     assignedTimeStop: '',\n      //     assignedDate: ''\n      //   }\n      // ],\n      Friday: [{\n        id: 'morning5',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'afternoon5',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'evening5',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }],\n      Saturday: [{\n        id: 'morning6',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'afternoon6',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'evening6',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }],\n      Sunday: [{\n        id: 'morning7',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }, {\n        id: 'afternoon7',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      } // {\n      //   id: 'evening7',\n      //   timeOfDay: 'evening',\n      //   task: 'play ball',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles',\n      //   assignedTimeStart: '',\n      //   assignedTimeStop: '',\n      //   assignedDate: ''\n      // }\n      ],\n      TodayTasksHeader: '',\n      word: 'red',\n      reRenderTasks: false\n    };\n\n    this.lastTaskHeaderHandler = () => {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          if (this.state.unAssignedTasksForWeek.length != 0) {\n            // alert(`Inside of lastTaskHeaderHandler if statement:`);\n            this.setState({\n              lastTaskHeader: this.state.unAssignedTasksForWeek[0],\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            }, () => this.context.dataReceiverHandler(this.state)); // alert(`Inside of lastTaskHeaderHandler after setState :`);\n          } else {\n            //alert(`Inside of lastTaskHeaderHandler else statement:`);\n            this.setState({\n              lastTaskHeader: this.state.lastTaskHeader,\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            }, () => this.context.dataReceiverHandler(this.state));\n          }\n\n          break;\n\n        case '2':\n          //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n          let today = this.context.dataRequestDetails.dataLocation;\n\n          if (this.state[today].length != 0) {\n            //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n            this.setState({\n              TodayTasksHeader: this.state[today][0],\n              dataLocation: today\n            }, () => this.context.dataReceiverHandler(this.state));\n          } else {\n            // alert(`Inside of lastTaskHeaderHandler case 2 else statement:`);\n            this.setState({\n              TodayTasksHeader: this.state.TodayTasksHeader\n            }, // () => console.log(this.state)\n            () => this.context.dataReceiverHandler(this.state));\n          } // alert(\n          //   `inside tasksData  TodayTasksHeader: ${this.state.TodayTasksHeader}`\n          // );\n\n\n          break;\n\n        case '9':\n          let pickedDay = this.context.dataRequestDetails.dataLocation; // alert(`inside case 9 pickedDay: ${pickedDay}`);\n          // alert(\n          //   `inside case 9 datalocation: ${this.state[pickedDay].eventTitle}`\n          // );\n\n          if (!this.state[pickedDay]) {\n            let chair = this.state[pickedDay]; //[]\n            // alert(pickedDay);\n            // alert(\n            //   `Inside of lastTaskHeaderHandler case 2 if statement: ${chair}`\n            // );\n\n            this.setState({\n              pickedDayTasksHeader: this.state.Friday[0],\n              // pickedDayTasksHeader: this.state.Monday[0],\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            }, () => this.context.dataReceiverHandler(this.state));\n          } else {\n            //alert(`Inside of lastTaskHeaderHandler else statement:`);\n            this.setState({\n              pickedDayTasksHeader: this.state[pickedDay][0],\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            }, () => this.context.dataReceiverHandler(this.state));\n          }\n\n          break;\n\n        case '10':\n          if (!this.state[pickedDay]) {\n            //pickedDay = this.context.dataRequestDetails.dataLocation;\n            alert(`inside case 10 pickedDay: ${pickedDay}`);\n            this.setState({\n              pickedDayTasksHeader: this.state.Monday[0],\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            }, () => this.context.dataReceiverHandler(this.state));\n          }\n\n          break;\n      }\n    };\n\n    this.deleteTaskFromUnAssignedTasksForWeekHandler = taskIndex => {\n      let currentUnassignedTasksForWeek = [...this.state.unAssignedTasksForWeek];\n      currentUnassignedTasksForWeek.splice(taskIndex, 1);\n      this.setState({\n        unAssignedTasksForWeek: currentUnassignedTasksForWeek,\n        receivedData: 'YES',\n        dataLocation: 'unAssignedTasksForWeek'\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.changeTaskFromUnAssignedTasksForWeekHandler = (taskValue, taskChangeId) => {\n      //Find the index of the lessons that matches the id sent in\n      const foundTaskIndex = this.state.unAssignedTasksForWeek.findIndex(currentId => {\n        return currentId.id === taskChangeId;\n      }); //createnew task item to put into array\n\n      const updatedTasks = _objectSpread({}, this.state.unAssignedTasksForWeek[foundTaskIndex]); //using updated values to define the task of the particular pulled out task\n      //updatedTasks.lesson = event.target.value;\n\n\n      updatedTasks.task = taskValue; //pull out of states maxReact array\n\n      const unAssignedTasksForWeek = [...this.state.unAssignedTasksForWeek]; //update the new lesson w/ ID of interest from the copy of MaxReact (unAssignedTasksForWeek)\n\n      unAssignedTasksForWeek[foundTaskIndex] = updatedTasks; //final update of unAssignedTasksForWeek\n\n      this.setState({\n        unAssignedTasksForWeek: unAssignedTasksForWeek\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.deleteTodayTaskhandler = taskIndex => {\n      //alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTodayTasks: true\n      });\n      let dataLocation = this.context.dataRequestDetails.dataLocation; //get tasks array\n\n      const todayTasks = [...this.state[dataLocation]]; //splice task of interst\n\n      todayTasks.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        [dataLocation]: todayTasks\n      }, () => this.context.dataReceiverHandler(this.state)); //this.setState({ showTasksCounter: false });\n    };\n\n    this.todayTaskChangeHandler = (newTaskValue, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      let dataLocation = this.context.dataRequestDetails.dataLocation;\n      const foundTaskIndex = this.state[dataLocation].findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state[dataLocation][foundTaskIndex]);\n\n      updatedTask.task = newTaskValue; //pull out the states tasks array\n\n      const todayTasks = [...this.state[dataLocation]]; //update the task with id of interest w/ new task description\n\n      todayTasks[foundTaskIndex] = updatedTask; //update the state\n      //without the () =>() -> dataReceiver will not wait till things have been updated in state, it will exicute rightaway\n\n      this.setState({\n        [dataLocation]: todayTasks\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.showHowBusyEverydayHandler = () => {\n      let daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n      let numTasksThisWeek = {};\n      daysOfWeek.map(day => {\n        let numberOfTaskForDay = 0;\n\n        if (this.state[day]) {\n          numberOfTaskForDay = this.state[day].length; // alert(numberOfTaskForDay);\n        }\n\n        let currentNumTasksThisWeek = _objectSpread({}, numTasksThisWeek, {\n          [day]: numberOfTaskForDay\n        });\n\n        numTasksThisWeek = currentNumTasksThisWeek;\n      });\n      this.setState({\n        numTasksThisWeek: numTasksThisWeek,\n        showHowBusyWeek: true\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.newTaskHandler = () => {\n      console.log('inside TasksData newTaskHandler'); //need to fix this in newTask so that it automaticly picks up the default value of the radio button\n\n      let newTask = _objectSpread({}, this.context.dataRequestDetails.value);\n\n      let newTaskObj = _objectSpread({}, newTask);\n\n      let day = numToDay(newTaskObj.startTimeDate.day);\n      console.log(day);\n\n      let currentDayTasks = _objectSpread({}, this.state[day]);\n\n      console.log(currentDayTasks);\n      let updatedDayTasks = currentDayTasks.push(newTaskObj);\n      this.setState({\n        tasks: updatedDayTasks\n      }, () => this.context.dataReceiverHandler(this.state)); //this.setState({ showEvents: true });\n    };\n\n    this.newEventHandler = value => {\n      let newEvent = this.context.dataRequestDetails.value;\n      let startTimeDate = this.context.dataRequestDetails.value.startTimeDate;\n      let assignTask = {\n        id: newEvent.startTimeDate.dateObjectString,\n        timeOfDay: startTimeDate.time,\n        task: newEvent.eventTitle,\n        note: newEvent.eventNote,\n        deadline: newEvent.deadline,\n        category: newEvent.eventCategory,\n        assignedTimeStart: startTimeDate,\n        assignedTimeStop: newEvent.finishTimeDate\n      }; //Thur blocked out\n\n      let dataLocation = this.context.dataRequestDetails.dataLocation; // let availableObjects = Object.keys(this.state)\n\n      if (!this.state[dataLocation]) {\n        // object exists\n        let addNewEventToNewDataLocation = [assignTask];\n        this.setState({\n          [dataLocation]: addNewEventToNewDataLocation,\n          pickedDayTasksHeader: assignTask,\n          dataLocation: dataLocation\n        }, () => this.context.dataReceiverHandler(this.state));\n      } else {\n        let addNewEventToExistingDataLocation = this.state[dataLocation][0];\n        this.setState({\n          [dataLocation]: addNewEventToExistingDataLocation,\n          pickedDayTasksHeader: assignTask,\n          dataLocation: dataLocation\n        }, () => this.context.dataReceiverHandler(this.state));\n      } // //THE DAY OF THE WEEK\n      // //let assignToDay = newEvent.startTimeDate.day;\n      // let today = calendarObj();\n      // let findDay = '';\n      // switch (today) {\n      //   case 1:\n      //     findDay = 'Monday';\n      //     break;\n      //   case 2:\n      //     findDay = 'Tuesday';\n      //     break;\n      //   case 3:\n      //     findDay = 'Wednesday';\n      //     break;\n      //   case 4:\n      //     findDay = 'Thursday';\n      //     break;\n      //   case 5:\n      //     findDay = 'Friday';\n      //     break;\n      //   case 6:\n      //     findDay = 'Saturday';\n      //     break;\n      //   case 0:\n      //     findDay = 'Sunday';\n      //     break;\n      // }\n      // let foundDay = this.state[today]; //array of objects on certain day\n      // foundDay.push(assignTask);\n      // this.setState({ [today]: foundDay }, () =>\n      //   this.context.dataReceiverHandler(this.state)\n      // );\n      // if (this.state[this.context.dataRequestDetails.dataLocation]) {\n      //   let pickedDay = this.context.dataRequestDetails.dataLocation;\n      //   //alert(`inside case 9 pickedDay: ${pickedDay}`);\n      //   // alert(\n      //   //   `inside case 9 datalocation: ${this.state[pickedDay].eventTitle}`\n      //   // );\n      //   if (!this.state[pickedDay]) {\n      //     //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n      //     //alert('inside TasksData newEventHandler if statement');\n      //     this.setState(\n      //       {\n      //         pickedDayTasksHeader: this.state[pickedDay][0],\n      //         dataLocation: this.context.dataRequestDetails.dataLocation\n      //       },\n      //       () => this.context.dataReceiverHandler(this.state)\n      //     );\n      //   } else {\n      //     //alert(`Inside of lastTaskHeaderHandler case 2 else statement:`);\n      //     this.setState(\n      //       {\n      //         pickedDayTasksHeader: this.state[pickedDay][0],\n      //         dataLocation: this.context.dataRequestDetails.dataLocation\n      //       },\n      //       () => this.context.dataReceiverHandler(this.state)\n      //     );\n      //   }\n      // }\n\n    };\n  }\n\n  render() {\n    //need to put back this.context.\n    if (this.context.dataRequestDetails && this.context.dataRequestDetails.typeOfData === 'events') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          //new Event\n          // alert(\n          //   `doogie inside TasksData events case 1 contentChoice: ${this.context.dataRequestDetails.handlerChoice}`\n          // );\n          this.context.resetHandlerChoice(this.newEventHandler(this.props.dataRequestDetails.value));\n          this.context.resetHandlerChoice(() => this.lastTaskHeaderHandler(() => this.newEventHandler(this.props.dataRequestDetails.value))); // this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n\n          break;\n      }\n    } //dataRequestDetails.typeOfData === 'events';\n\n\n    if (this.context.dataRequestDetails.typeOfData === 'tasks') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          //Unscheduled Tasks for Week\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '2':\n          //Today's Tasks: TodayTasksHeader\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '3':\n          //delete from contentChoice = #1\n          this.context.resetHandlerChoice(this.deleteTaskFromUnAssignedTasksForWeekHandler(this.props.dataRequestDetails.index));\n          break;\n\n        case '4':\n          //change from contentChoice = #1\n          this.context.resetHandlerChoice(this.changeTaskFromUnAssignedTasksForWeekHandler(this.props.dataRequestDetails.value, this.props.dataRequestDetails.id));\n          break;\n\n        case '5':\n          //Delete task on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(this.deleteTodayTaskhandler(this.props.dataRequestDetails.index));\n          break;\n\n        case '6':\n          //Changes on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(this.todayTaskChangeHandler(this.props.dataRequestDetails.value, this.props.dataRequestDetails.id));\n          break;\n\n        case '7':\n          //for cockpit displaying icons for every task for each day of week\n          this.context.resetHandlerChoice(this.showHowBusyEverydayHandler());\n          break;\n\n        case '8':\n          //new Event\n          break;\n\n        case '9':\n          //picked day\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '10':\n          //picked day\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '11':\n          //newTask\n          console.log('inside TasksData case 11');\n          this.context.resetHandlerChoice(this.newTaskHandler()); //this.newTaskHandler();\n\n          break;\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    });\n  }\n\n}\n\nTasksData.contextType = StoreContext;\nexport default TasksData;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/TasksData.js"],"names":["React","Component","RightCockpit","calendarObj","numToDay","StoreContext","TasksData","state","dataBaseName","showHowBusyWeeek","assignedTimeStart","assignedTimeStop","assignedDateStart","assignedDateStop","eventDuration","blockOffTimeSlot","unAssignedTasksForWeek","id","scheduleTask","task","deadline","category","source","Monday","timeOfDay","assignedDate","Tuesday","Wednesday","Friday","Saturday","Sunday","TodayTasksHeader","word","reRenderTasks","lastTaskHeaderHandler","context","dataRequestDetails","handlerChoice","length","setState","lastTaskHeader","dataLocation","dataReceiverHandler","today","pickedDay","chair","pickedDayTasksHeader","alert","deleteTaskFromUnAssignedTasksForWeekHandler","taskIndex","currentUnassignedTasksForWeek","splice","receivedData","changeTaskFromUnAssignedTasksForWeekHandler","taskValue","taskChangeId","foundTaskIndex","findIndex","currentId","updatedTasks","deleteTodayTaskhandler","reRenderTodayTasks","todayTasks","todayTaskChangeHandler","newTaskValue","taskChangedId","updatedTask","showHowBusyEverydayHandler","daysOfWeek","numTasksThisWeek","map","day","numberOfTaskForDay","currentNumTasksThisWeek","showHowBusyWeek","newTaskHandler","console","log","newTask","value","newTaskObj","startTimeDate","currentDayTasks","updatedDayTasks","push","tasks","newEventHandler","newEvent","assignTask","dateObjectString","time","eventTitle","note","eventNote","eventCategory","finishTimeDate","addNewEventToNewDataLocation","addNewEventToExistingDataLocation","render","typeOfData","resetHandlerChoice","props","index","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\n//import TasksContext from '../../context/tasksContext';\nimport calendarObj from '../../components/Calendar/calendarObj';\nimport numToDay from '../../components/Calendar/numToDay';\nimport StoreContext from '../../context/StoreDataContext';\n\nclass TasksData extends Component {\n  state = {\n    dataBaseName: 'tasks',\n    showHowBusyWeeek: false,\n\n    //NewEvent\n    assignedTimeStart: '', //14:00:00 GMT-0500 (Colombia Standard Time)\n    assignedTimeStop: '', //00:00 - 24:00, string\n    assignedDateStart: '', //Thu Jan 16 2020\n    assignedDateStop: '',\n    //optional\n    eventDuration: '', //\n    blockOffTimeSlot: '', //T-F  when event will take on time slot for scheduled day\n\n    unAssignedTasksForWeek: [\n      {\n        id: 'qrwrwq',\n        scheduleTask: null,\n        task: 'Find work',\n\n        deadline: 'Lunes',\n        category: 'workout',\n\n        source: ''\n        //Syllabus/syllabusId/syllabusTitle\n      },\n      {\n        id: 'egewhw',\n        scheduleTask: null,\n        task: 'buy shoes',\n        deadline: 'Martes',\n        category: 'programing',\n        source: ''\n      },\n      {\n        id: 'asfasv',\n        scheduleTask: null,\n        task: 'mail package',\n        deadline: 'Jueves',\n        category: 'study',\n        source: ''\n      }\n    ],\n    Monday: [\n      {\n        id: 'morning1',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'programing',\n        source: '',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'afternoon1',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'workout'\n      },\n      {\n        id: 'evening1',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'errands',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }\n    ],\n    Tuesday: [\n      {\n        id: 'morning2',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'errands',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }\n      // {\n      //   id: 'afternoon2',\n      //   timeOfDay: 'afternoon',\n      //   task: 'eat lunch',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles',\n      //   assignedTimeStart: '',\n      //   assignedTimeStop: '',\n      //   assignedDate: ''\n      // },\n      // {\n      //   id: 'evening2',\n      //   timeOfDay: 'evening',\n      //   task: 'play ball',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles'\n      // }\n    ],\n    Wednesday: [\n      {\n        id: 'morning3',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'afternoon3',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'evening3',\n        timeOfDay: '',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }\n    ],\n    // Thursday: [\n    //   {\n    //     id: 'morning4',\n    //     timeOfDay: 'morning',\n    //     task: 'comprar comida',\n    //     deadline: 'Jueves',\n    //     category: 'Laureles',\n    //     assignedTimeStart: '',\n    //     assignedTimeStop: '',\n    //     assignedDate: ''\n    //   },\n    //   {\n    //     id: 'afternoon4',\n    //     timeOfDay: 'afternoon',\n    //     task: 'eat lunch',\n    //     deadline: 'Jueves',\n    //     category: 'Laureles',\n    //     assignedTimeStart: '',\n    //     assignedTimeStop: '',\n    //     assignedDate: ''\n    //   },\n    //   {\n    //     id: 'evening4',\n    //     timeOfDay: 'evening',\n    //     task: 'play ball',\n    //     deadline: 'Jueves',\n    //     category: 'Laureles',\n    //     assignedTimeStart: '',\n    //     assignedTimeStop: '',\n    //     assignedDate: ''\n    //   }\n    // ],\n    Friday: [\n      {\n        id: 'morning5',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'afternoon5',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'evening5',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }\n    ],\n    Saturday: [\n      {\n        id: 'morning6',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'afternoon6',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'evening6',\n        timeOfDay: 'evening',\n        task: 'play ball',\n        deadline: 'Jueves',\n        category: 'Laureles'\n      }\n    ],\n    Sunday: [\n      {\n        id: 'morning7',\n        timeOfDay: 'morning',\n        task: 'comprar comida',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      {\n        id: 'afternoon7',\n        timeOfDay: 'afternoon',\n        task: 'eat lunch',\n        deadline: 'Jueves',\n        category: 'Laureles',\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      }\n      // {\n      //   id: 'evening7',\n      //   timeOfDay: 'evening',\n      //   task: 'play ball',\n      //   deadline: 'Jueves',\n      //   category: 'Laureles',\n      //   assignedTimeStart: '',\n      //   assignedTimeStop: '',\n      //   assignedDate: ''\n      // }\n    ],\n    TodayTasksHeader: '',\n    word: 'red',\n    reRenderTasks: false\n  };\n  static contextType = StoreContext;\n  lastTaskHeaderHandler = () => {\n    switch (this.context.dataRequestDetails.handlerChoice) {\n      case '1':\n        if (this.state.unAssignedTasksForWeek.length != 0) {\n          // alert(`Inside of lastTaskHeaderHandler if statement:`);\n          this.setState(\n            {\n              lastTaskHeader: this.state.unAssignedTasksForWeek[0],\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n          // alert(`Inside of lastTaskHeaderHandler after setState :`);\n        } else {\n          //alert(`Inside of lastTaskHeaderHandler else statement:`);\n          this.setState(\n            {\n              lastTaskHeader: this.state.lastTaskHeader,\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        }\n\n        break;\n\n      case '2':\n        //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n        let today = this.context.dataRequestDetails.dataLocation;\n\n        if (this.state[today].length != 0) {\n          //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n          this.setState(\n            { TodayTasksHeader: this.state[today][0], dataLocation: today },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        } else {\n          // alert(`Inside of lastTaskHeaderHandler case 2 else statement:`);\n          this.setState(\n            { TodayTasksHeader: this.state.TodayTasksHeader },\n            // () => console.log(this.state)\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        }\n        // alert(\n        //   `inside tasksData  TodayTasksHeader: ${this.state.TodayTasksHeader}`\n        // );\n\n        break;\n      case '9':\n        let pickedDay = this.context.dataRequestDetails.dataLocation;\n        // alert(`inside case 9 pickedDay: ${pickedDay}`);\n        // alert(\n        //   `inside case 9 datalocation: ${this.state[pickedDay].eventTitle}`\n        // );\n        if (!this.state[pickedDay]) {\n          let chair = this.state[pickedDay]; //[]\n          // alert(pickedDay);\n          // alert(\n          //   `Inside of lastTaskHeaderHandler case 2 if statement: ${chair}`\n          // );\n\n          this.setState(\n            {\n              pickedDayTasksHeader: this.state.Friday[0],\n              // pickedDayTasksHeader: this.state.Monday[0],\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        } else {\n          //alert(`Inside of lastTaskHeaderHandler else statement:`);\n          this.setState(\n            {\n              pickedDayTasksHeader: this.state[pickedDay][0],\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        }\n\n        break;\n      case '10':\n        if (!this.state[pickedDay]) {\n          //pickedDay = this.context.dataRequestDetails.dataLocation;\n          alert(`inside case 10 pickedDay: ${pickedDay}`);\n          this.setState(\n            {\n              pickedDayTasksHeader: this.state.Monday[0],\n              dataLocation: this.context.dataRequestDetails.dataLocation\n            },\n\n            () => this.context.dataReceiverHandler(this.state)\n          );\n        }\n        break;\n    }\n  };\n\n  deleteTaskFromUnAssignedTasksForWeekHandler = taskIndex => {\n    let currentUnassignedTasksForWeek = [...this.state.unAssignedTasksForWeek];\n\n    currentUnassignedTasksForWeek.splice(taskIndex, 1);\n\n    this.setState(\n      {\n        unAssignedTasksForWeek: currentUnassignedTasksForWeek,\n        receivedData: 'YES',\n        dataLocation: 'unAssignedTasksForWeek'\n      },\n\n      () => this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  changeTaskFromUnAssignedTasksForWeekHandler = (taskValue, taskChangeId) => {\n    //Find the index of the lessons that matches the id sent in\n    const foundTaskIndex = this.state.unAssignedTasksForWeek.findIndex(\n      currentId => {\n        return currentId.id === taskChangeId;\n      }\n    );\n\n    //createnew task item to put into array\n    const updatedTasks = {\n      ...this.state.unAssignedTasksForWeek[foundTaskIndex]\n    };\n\n    //using updated values to define the task of the particular pulled out task\n    //updatedTasks.lesson = event.target.value;\n    updatedTasks.task = taskValue;\n\n    //pull out of states maxReact array\n    const unAssignedTasksForWeek = [...this.state.unAssignedTasksForWeek];\n\n    //update the new lesson w/ ID of interest from the copy of MaxReact (unAssignedTasksForWeek)\n    unAssignedTasksForWeek[foundTaskIndex] = updatedTasks;\n\n    //final update of unAssignedTasksForWeek\n    this.setState({ unAssignedTasksForWeek: unAssignedTasksForWeek }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  deleteTodayTaskhandler = taskIndex => {\n    //alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTodayTasks: true });\n    let dataLocation = this.context.dataRequestDetails.dataLocation;\n\n    //get tasks array\n    const todayTasks = [...this.state[dataLocation]];\n\n    //splice task of interst\n    todayTasks.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ [dataLocation]: todayTasks }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n\n    //this.setState({ showTasksCounter: false });\n  };\n\n  todayTaskChangeHandler = (newTaskValue, taskChangedId) => {\n    //find the task that matches the taskChangedId\n    let dataLocation = this.context.dataRequestDetails.dataLocation;\n\n    const foundTaskIndex = this.state[dataLocation].findIndex(currentId => {\n      return currentId.id === taskChangedId;\n    });\n\n    //create new task item that we will put into array\n    const updatedTask = { ...this.state[dataLocation][foundTaskIndex] };\n\n    updatedTask.task = newTaskValue;\n\n    //pull out the states tasks array\n    const todayTasks = [...this.state[dataLocation]];\n\n    //update the task with id of interest w/ new task description\n    todayTasks[foundTaskIndex] = updatedTask;\n\n    //update the state\n    //without the () =>() -> dataReceiver will not wait till things have been updated in state, it will exicute rightaway\n    this.setState({ [dataLocation]: todayTasks }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n  showHowBusyEverydayHandler = () => {\n    let daysOfWeek = [\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n      'Sunday'\n    ];\n\n    let numTasksThisWeek = {};\n    daysOfWeek.map(day => {\n      let numberOfTaskForDay = 0;\n      if (this.state[day]) {\n        numberOfTaskForDay = this.state[day].length;\n        // alert(numberOfTaskForDay);\n      }\n      let currentNumTasksThisWeek = {\n        ...numTasksThisWeek,\n        [day]: numberOfTaskForDay\n      };\n\n      numTasksThisWeek = currentNumTasksThisWeek;\n    });\n\n    this.setState(\n      { numTasksThisWeek: numTasksThisWeek, showHowBusyWeek: true },\n      () => this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  //newTask\n  newTaskHandler = () => {\n    console.log('inside TasksData newTaskHandler');\n    //need to fix this in newTask so that it automaticly picks up the default value of the radio button\n    let newTask = { ...this.context.dataRequestDetails.value };\n\n    let newTaskObj = { ...newTask };\n\n    let day = numToDay(newTaskObj.startTimeDate.day);\n    console.log(day);\n    let currentDayTasks = { ...this.state[day] };\n    console.log(currentDayTasks);\n    let updatedDayTasks = currentDayTasks.push(newTaskObj);\n    this.setState({ tasks: updatedDayTasks }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n    //this.setState({ showEvents: true });\n  };\n\n  newEventHandler = value => {\n    let newEvent = this.context.dataRequestDetails.value;\n    let startTimeDate = this.context.dataRequestDetails.value.startTimeDate;\n\n    let assignTask = {\n      id: newEvent.startTimeDate.dateObjectString,\n      timeOfDay: startTimeDate.time,\n      task: newEvent.eventTitle,\n      note: newEvent.eventNote,\n      deadline: newEvent.deadline,\n      category: newEvent.eventCategory,\n      assignedTimeStart: startTimeDate,\n      assignedTimeStop: newEvent.finishTimeDate\n    };\n\n    //Thur blocked out\n    let dataLocation = this.context.dataRequestDetails.dataLocation;\n\n    // let availableObjects = Object.keys(this.state)\n\n    if (!this.state[dataLocation]) {\n      // object exists\n      let addNewEventToNewDataLocation = [assignTask];\n\n      this.setState(\n        {\n          [dataLocation]: addNewEventToNewDataLocation,\n          pickedDayTasksHeader: assignTask,\n          dataLocation: dataLocation\n        },\n\n        () => this.context.dataReceiverHandler(this.state)\n      );\n    } else {\n      let addNewEventToExistingDataLocation = this.state[dataLocation][0];\n\n      this.setState(\n        {\n          [dataLocation]: addNewEventToExistingDataLocation,\n          pickedDayTasksHeader: assignTask,\n          dataLocation: dataLocation\n        },\n\n        () => this.context.dataReceiverHandler(this.state)\n      );\n    }\n\n    // //THE DAY OF THE WEEK\n    // //let assignToDay = newEvent.startTimeDate.day;\n    // let today = calendarObj();\n\n    // let findDay = '';\n    // switch (today) {\n    //   case 1:\n    //     findDay = 'Monday';\n    //     break;\n    //   case 2:\n    //     findDay = 'Tuesday';\n    //     break;\n    //   case 3:\n    //     findDay = 'Wednesday';\n    //     break;\n    //   case 4:\n    //     findDay = 'Thursday';\n    //     break;\n    //   case 5:\n    //     findDay = 'Friday';\n    //     break;\n    //   case 6:\n    //     findDay = 'Saturday';\n    //     break;\n    //   case 0:\n    //     findDay = 'Sunday';\n    //     break;\n    // }\n\n    // let foundDay = this.state[today]; //array of objects on certain day\n    // foundDay.push(assignTask);\n\n    // this.setState({ [today]: foundDay }, () =>\n    //   this.context.dataReceiverHandler(this.state)\n    // );\n    // if (this.state[this.context.dataRequestDetails.dataLocation]) {\n    //   let pickedDay = this.context.dataRequestDetails.dataLocation;\n    //   //alert(`inside case 9 pickedDay: ${pickedDay}`);\n    //   // alert(\n    //   //   `inside case 9 datalocation: ${this.state[pickedDay].eventTitle}`\n    //   // );\n    //   if (!this.state[pickedDay]) {\n    //     //alert(`Inside of lastTaskHeaderHandler case 2 if statement:`);\n    //     //alert('inside TasksData newEventHandler if statement');\n    //     this.setState(\n    //       {\n    //         pickedDayTasksHeader: this.state[pickedDay][0],\n    //         dataLocation: this.context.dataRequestDetails.dataLocation\n    //       },\n\n    //       () => this.context.dataReceiverHandler(this.state)\n    //     );\n    //   } else {\n    //     //alert(`Inside of lastTaskHeaderHandler case 2 else statement:`);\n    //     this.setState(\n    //       {\n    //         pickedDayTasksHeader: this.state[pickedDay][0],\n    //         dataLocation: this.context.dataRequestDetails.dataLocation\n    //       },\n\n    //       () => this.context.dataReceiverHandler(this.state)\n    //     );\n    //   }\n    // }\n  };\n\n  render() {\n    //need to put back this.context.\n\n    if (\n      this.context.dataRequestDetails &&\n      this.context.dataRequestDetails.typeOfData === 'events'\n    ) {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1': //new Event\n          // alert(\n          //   `doogie inside TasksData events case 1 contentChoice: ${this.context.dataRequestDetails.handlerChoice}`\n          // );\n\n          this.context.resetHandlerChoice(\n            this.newEventHandler(this.props.dataRequestDetails.value)\n          );\n\n          this.context.resetHandlerChoice(() =>\n            this.lastTaskHeaderHandler(() =>\n              this.newEventHandler(this.props.dataRequestDetails.value)\n            )\n          );\n\n          // this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n\n          break;\n      }\n    }\n\n    //dataRequestDetails.typeOfData === 'events';\n    if (this.context.dataRequestDetails.typeOfData === 'tasks') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1': //Unscheduled Tasks for Week\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n\n          break;\n\n        case '2': //Today's Tasks: TodayTasksHeader\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n\n        case '3': //delete from contentChoice = #1\n          this.context.resetHandlerChoice(\n            this.deleteTaskFromUnAssignedTasksForWeekHandler(\n              this.props.dataRequestDetails.index\n            )\n          );\n          break;\n        case '4': //change from contentChoice = #1\n          this.context.resetHandlerChoice(\n            this.changeTaskFromUnAssignedTasksForWeekHandler(\n              this.props.dataRequestDetails.value,\n              this.props.dataRequestDetails.id\n            )\n          );\n          break;\n\n        case '5': //Delete task on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(\n            this.deleteTodayTaskhandler(this.props.dataRequestDetails.index)\n          );\n\n          break;\n        case '6': //Changes on TodayTasks contentChoice = #2\n          this.context.resetHandlerChoice(\n            this.todayTaskChangeHandler(\n              this.props.dataRequestDetails.value,\n              this.props.dataRequestDetails.id\n            )\n          );\n\n          break;\n        case '7': //for cockpit displaying icons for every task for each day of week\n          this.context.resetHandlerChoice(this.showHowBusyEverydayHandler());\n\n          break;\n        case '8': //new Event\n          break;\n        case '9': //picked day\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n        case '10': //picked day\n          this.context.resetHandlerChoice(this.lastTaskHeaderHandler());\n          break;\n        case '11': //newTask\n          console.log('inside TasksData case 11');\n          this.context.resetHandlerChoice(this.newTaskHandler());\n          //this.newTaskHandler();\n          break;\n      }\n    }\n\n    return <React.Fragment></React.Fragment>;\n  }\n}\n\nexport default TasksData;\n"]},"metadata":{},"sourceType":"module"}
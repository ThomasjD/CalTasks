{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Syllabus/displayPickedSyllabus.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport DisplayPickedSyllabusInfo from './displayPickedSyllabusInfo/displayPickedSyllabusInfo';\nimport student from '../../../containers/Student.css';\nimport SyllabusContext from '../../../context/syllabusContext';\nimport taskStyle from '../Tasks/Task/Task.module.css';\nimport StoreContext from '../../../context/StoreDataContext';\n\nconst DisplayPickedSyllabus = props => {\n  const storeContext = useContext(StoreContext);\n\n  const renderTableHeaderHandler = () => {\n    let dataLocation = storeContext.dataRequestDetails.dataLocation;\n\n    if (storeContext.everythingSyllabus && storeContext.everythingSyllabus.syllabusData && storeContext.everythingSyllabus.syllabusData.syllabi && storeContext.everythingSyllabus.syllabusData.syllabi[dataLocation]) {\n      alert(dataLocation);\n\n      let syllabi = _objectSpread({}, storeContext.everythingSyllabus.syllabusData.syllabi);\n\n      let header = Object.keys(syllabi[dataLocation]);\n      return header.map((key, index) => {\n        switch (key) {\n          case 'syllabusId':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27\n              },\n              __self: this\n            }, \"Click\\xA0to\\xA0Delete\");\n            break;\n\n          case 'name':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n\n          case 'syllabusCompletionTime':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, \"Total Time\");\n            break;\n\n          case 'completionStatus':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n\n          case 'lessons':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n        }\n      });\n    }\n  }; //todayTaskChanged={props.changed}\n\n\n  const infoOfSelectedSyllabusHandler = () => {\n    let starvingCow = {};\n\n    if ( // storeContext.everythingSyllabus.syllabusData &&\n    // storeContext.everythingSyllabus.syllabusData.syllabi\n    storeContext.everythingSyllabus && storeContext.everythingSyllabus.syllabusData && storeContext.everythingSyllabus.syllabusData.syllabi && storeContext.everythingSyllabus.syllabusData.syllabi[dataLocation]) {\n      let dataLocation = storeContext.dataRequestDetails.dataLocation;\n      let syllabus = storeContext.everythingSyllabus.syllabusData.syllabi[dataLocation];\n      let grass = Object.keys(syllabus).map(key => {\n        if (key === 'syllabusId' || 'name' || 'syllabusCompletionTime' || 'completionStatus' || 'lessons') {\n          let food = _objectSpread({}, starvingCow, {\n            [key]: syllabus[key]\n          });\n\n          starvingCow = food;\n        }\n\n        return starvingCow;\n      });\n      console.log(starvingCow); //single object\n\n      console.log(grass); //array of objects\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(DisplayPickedSyllabusInfo, {\n        syllabus: starvingCow,\n        particularKey: starvingCow.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \" Syllabus Info\"), React.createElement(\"table\", {\n    id: \"students\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, renderTableHeaderHandler())), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, infoOfSelectedSyllabusHandler())));\n};\n\nexport default DisplayPickedSyllabus;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Syllabus/displayPickedSyllabus.js"],"names":["React","useState","useEffect","useContext","DisplayPickedSyllabusInfo","student","SyllabusContext","taskStyle","StoreContext","DisplayPickedSyllabus","props","storeContext","renderTableHeaderHandler","dataLocation","dataRequestDetails","everythingSyllabus","syllabusData","syllabi","alert","header","Object","keys","map","key","index","toUpperCase","infoOfSelectedSyllabusHandler","starvingCow","syllabus","grass","food","console","log","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport DisplayPickedSyllabusInfo from './displayPickedSyllabusInfo/displayPickedSyllabusInfo';\nimport student from '../../../containers/Student.css';\nimport SyllabusContext from '../../../context/syllabusContext';\nimport taskStyle from '../Tasks/Task/Task.module.css';\nimport StoreContext from '../../../context/StoreDataContext';\nconst DisplayPickedSyllabus = props => {\n  const storeContext = useContext(StoreContext);\n\n  const renderTableHeaderHandler = () => {\n    let dataLocation = storeContext.dataRequestDetails.dataLocation;\n    if (\n      storeContext.everythingSyllabus &&\n      storeContext.everythingSyllabus.syllabusData &&\n      storeContext.everythingSyllabus.syllabusData.syllabi &&\n      storeContext.everythingSyllabus.syllabusData.syllabi[dataLocation]\n    ) {\n      alert(dataLocation);\n      let syllabi = {\n        ...storeContext.everythingSyllabus.syllabusData.syllabi\n      };\n      let header = Object.keys(syllabi[dataLocation]);\n\n      return header.map((key, index) => {\n        switch (key) {\n          case 'syllabusId':\n            return <th key={index}>Click to Delete</th>;\n            break;\n\n          case 'name':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n\n          case 'syllabusCompletionTime':\n            return <th key={index}>Total Time</th>;\n            break;\n\n          case 'completionStatus':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n\n          case 'lessons':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n        }\n      });\n    }\n  };\n  //todayTaskChanged={props.changed}\n  const infoOfSelectedSyllabusHandler = () => {\n    let starvingCow = {};\n    if (\n      // storeContext.everythingSyllabus.syllabusData &&\n      // storeContext.everythingSyllabus.syllabusData.syllabi\n      storeContext.everythingSyllabus &&\n      storeContext.everythingSyllabus.syllabusData &&\n      storeContext.everythingSyllabus.syllabusData.syllabi &&\n      storeContext.everythingSyllabus.syllabusData.syllabi[dataLocation]\n    ) {\n      let dataLocation = storeContext.dataRequestDetails.dataLocation;\n      let syllabus =\n        storeContext.everythingSyllabus.syllabusData.syllabi[dataLocation];\n\n      let grass = Object.keys(syllabus).map(key => {\n        if (\n          key === 'syllabusId' ||\n          'name' ||\n          'syllabusCompletionTime' ||\n          'completionStatus' ||\n          'lessons'\n        ) {\n          let food = { ...starvingCow, [key]: syllabus[key] };\n          starvingCow = food;\n        }\n\n        return starvingCow;\n      });\n\n      console.log(starvingCow); //single object\n      console.log(grass); //array of objects\n\n      return (\n        <React.Fragment>\n          <DisplayPickedSyllabusInfo\n            syllabus={starvingCow}\n            particularKey={starvingCow.name}\n          />\n        </React.Fragment>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h1 id=\"title\"> Syllabus Info</h1>\n\n      <table id=\"students\">\n        <thead>\n          <tr>{renderTableHeaderHandler()}</tr>\n        </thead>\n        <tbody>{infoOfSelectedSyllabusHandler()}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default DisplayPickedSyllabus;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Cockpit.js\";\nimport React from 'react';\nimport rocky from '../../containers/App.module.css';\nimport classNames from 'classnames';\nimport classes from './Cockpit.module.css';\n\nconst cockpit = props => {\n  //styling the 'Things to Do' using strings for classnames\n  const assignedClasses = [];\n  let btnClass = '';\n\n  switch (props.tasks.length) {\n    case 3:\n      assignedClasses.push('bold', 'red');\n      break;\n\n    case 2:\n      assignedClasses.push('red');\n      break;\n\n    case 1:\n      assignedClasses.push('orange');\n      break;\n\n    default:\n      assignedClasses.push('green');\n      break;\n  }\n\n  console.log(assignedClasses[0]); //add multiple classes for <p> w/ strings\n  //const classesFinal = classes.join(' ')\n\n  const classesFinal = 'rocky.' + classes;\n  console.log(classesFinal);\n  console.log(\"This is classesFinal \".concat(classesFinal));\n  return React.createElement(\"div\", {\n    className: rocky.App,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.Cockpit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Medellin\"), React.createElement(\"p\", {\n    className: classNames({\n      [rocky[assignedClasses[0]]]: true,\n      [rocky[assignedClasses[1]]]: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Things to Do!\"), React.createElement(\"button\", {\n    className: btnClass,\n    onClick: props.clicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Show Task\")));\n};\n\nexport default cockpit; // </div>","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Cockpit.js"],"names":["React","rocky","classNames","classes","cockpit","props","assignedClasses","btnClass","tasks","length","push","console","log","classesFinal","App","Cockpit","clicked"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB;AACA,QAAMC,eAAe,GAAG,EAAxB;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,UAAQF,KAAK,CAACG,KAAN,CAAYC,MAApB;AACE,SAAM,CAAN;AACAH,MAAAA,eAAe,CAACI,IAAhB,CAAqB,MAArB,EAA6B,KAA7B;AACG;;AACH,SAAM,CAAN;AACAJ,MAAAA,eAAe,CAACI,IAAhB,CAAqB,KAArB;AACG;;AACH,SAAM,CAAN;AACEJ,MAAAA,eAAe,CAACI,IAAhB,CAAqB,QAArB;AACC;;AACH;AACAJ,MAAAA,eAAe,CAACI,IAAhB,CAAqB,OAArB;AACC;AAZH;;AAeAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,eAAe,CAAC,CAAD,CAA3B,EArBuB,CAsBvB;AACE;;AACA,QAAMO,YAAY,GAAG,WAAWV,OAAhC;AAEFQ,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AAEAF,EAAAA,OAAO,CAACC,GAAR,gCAAoCC,YAApC;AAGA,SACI;AAAK,IAAA,SAAS,EAAEZ,KAAK,CAACa,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAIX,OAAO,CAACY,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,EAGQ;AAAG,IAAA,SAAS,EAAEb,UAAU,CAAC;AAAC,OAACD,KAAK,CAACK,eAAe,CAAC,CAAD,CAAhB,CAAN,GAA6B,IAA9B;AAAoC,OAACL,KAAK,CAACK,eAAe,CAAC,CAAD,CAAhB,CAAN,GAA6B;AAAjE,KAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHR,EAOA;AACE,IAAA,SAAS,EAAIC,QADf;AAEE,IAAA,OAAO,EAAIF,KAAK,CAACW,OAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPA,CADA,CADJ;AAmBH,CAlDD;;AAqDA,eAAeZ,OAAf,C,CAGA","sourcesContent":["import React from 'react'\nimport rocky from '../../containers/App.module.css'\nimport classNames from 'classnames';\nimport classes from './Cockpit.module.css'\n\nconst cockpit = (props) => {\n\n    //styling the 'Things to Do' using strings for classnames\n    const assignedClasses = [];\n    let btnClass = '';\n\n    switch (props.tasks.length) {\n      case (3): \n      assignedClasses.push('bold', 'red')\n         break\n      case (2): \n      assignedClasses.push('red')\n         break\n      case (1):\n        assignedClasses.push('orange')\n         break\n      default: \n      assignedClasses.push('green')\n       break\n    }\n    \n    console.log(assignedClasses[0])\n    //add multiple classes for <p> w/ strings\n      //const classesFinal = classes.join(' ')\n      const classesFinal = 'rocky.' + classes\n\n    console.log(classesFinal)\n    \n    console.log(`This is classesFinal ${classesFinal}`)\n\n\n    return (\n        <div className={rocky.App}>\n        <div className = {classes.Cockpit}>\n           \n                <h1>Medellin</h1>\n                <p className={classNames({[rocky[assignedClasses[0]]]: true, [rocky[assignedClasses[1]]]: true})}>Things to Do!</p>\n            \n                \n\n        <button \n          className = {btnClass}\n          onClick = {props.clicked}>Show Task</button>\n      </div>\n    </div>\n\n        \n        \n    );\n\n}\n\n\nexport default cockpit;\n\n\n// </div>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/Store.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\nimport Aux from '../../hoc/Aux';\nimport Layout from '../../hoc/Layout';\nimport CalendarContext from '../../context/calendarContext';\n\nclass Store extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSyllabusList: false,\n      crunk: 'Hootie',\n      showLeftOverLessonsFromSyllabus: false,\n      showLeftOverTasksForWeek: false,\n      syllabusData: null,\n      tasksData: null,\n      fish: 'blowFish',\n      dataRequestDetails: {\n        handlerChoice: false,\n        index: null,\n        id: null,\n        value: null\n      }\n    };\n\n    this.sendSyllabusDataHandler = handlerChoice => {\n      this.setState({\n        syllabusHandlerChoice: handlerChoice\n      });\n      console.log('Inside of sendSyllabusDataHandler');\n    };\n\n    this.receiveSyllabusDataHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          }, () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          });\n          break;\n\n        case 'tasks':\n          this.setState({\n            tasksData: dataBase,\n            tasksHandlerChoice: '0'\n          });\n          break;\n      }\n    };\n\n    this.dataRequestHandler = (event, typeOfData, handlerChoice, infoType, info) => {\n      //alert('inside dataRequestHandler');\n      //alert(` ${typeOfData}  :${handlerChoice} :${infoType} :${info}`);\n      let index = null;\n      let id = null;\n      let value = '';\n      let dataRequestDetails = null; //let inspection = event.value;\n\n      switch (typeOfData) {\n        case 'tasks':\n          switch (infoType) {\n            case 'index':\n              index = info;\n              value = event.target.value;\n              break;\n\n            case 'id':\n              id = info;\n              value = event.target.value;\n              break;\n\n            case 'pickedDayTasks':\n              value = info;\n              break;\n          }\n\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            value: value,\n            typeOfData: typeOfData\n          };\n          break;\n\n        case 'events':\n          dataRequestDetails = {\n            handlerChoice: handlerChoice,\n            index: index,\n            id: id,\n            typeOfData: typeOfData,\n            value: info\n          };\n          break;\n      } //event, index, handlerType\n\n\n      this.setState({\n        dataRequestDetails: dataRequestDetails\n      });\n    };\n\n    this.dataReceiverHandler = dataBase => {\n      switch (dataBase.dataBaseName) {\n        case 'syllabus':\n          this.setState({\n            syllabusData: dataBase\n          });\n          break;\n\n        case 'tasks':\n          this.setState({\n            tasksData: dataBase\n          });\n          break;\n      }\n    };\n\n    this.resetHandlerChoice = () => {\n      this.setState({\n        dataRequestDetails: {\n          handlerChoice: '0',\n          typeOfData: '',\n          index: null,\n          id: null,\n          value: ''\n        }\n      });\n    };\n  }\n\n  render() {\n    // let displayMessage = null;\n    // if (this.state.syllabusHandlerChoice === '0') {\n    //   displayMessage = <div>Hey syllabusHandlerchoice is recorded</div>;\n    // }\n    // Layout wrap displayed\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(CalendarContext.Provider, {\n      value: {\n        resetHandlerChoice: this.resetHandlerChoice,\n        everythingCalendar: this.state,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        dataReceiverHandler: this.dataReceiverHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(SyllabusContext.Provider, {\n      value: {\n        resetHandlerChoice: this.resetHandlerChoice,\n        everythingSyllabus: this.state,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        dataReceiverHandler: this.dataReceiverHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(SyllabusData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(TasksDataContext.Provider, {\n      value: {\n        crunk: this.state.crunk,\n        dataReceiverHandler: this.dataReceiverHandler,\n        dataRequestHandler: this.dataRequestHandler,\n        dataRequestDetails: this.state.dataRequestDetails,\n        tasksData: this.state,\n        resetHandlerChoice: this.resetHandlerChoice,\n        newDataHandler: this.newDataHandler\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(TasksData, {\n      showLeftOverTasksForWeek: this.state.showLeftOverTasksForWeek,\n      dataRequestDetails: this.state.dataRequestDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(RightCockpit, {\n      crunk: this.state.crunk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/Store.js"],"names":["React","Component","RightCockpit","TasksData","SyllabusData","SyllabusContext","TasksDataContext","Aux","Layout","CalendarContext","Store","state","showSyllabusList","crunk","showLeftOverLessonsFromSyllabus","showLeftOverTasksForWeek","syllabusData","tasksData","fish","dataRequestDetails","handlerChoice","index","id","value","sendSyllabusDataHandler","setState","syllabusHandlerChoice","console","log","receiveSyllabusDataHandler","dataBase","dataBaseName","lastLessonHeader","tasksHandlerChoice","dataRequestHandler","event","typeOfData","infoType","info","target","dataReceiverHandler","resetHandlerChoice","render","everythingCalendar","everythingSyllabus","newDataHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BU,KAD4B,GACpB;AACNC,MAAAA,gBAAgB,EAAE,KADZ;AAENC,MAAAA,KAAK,EAAE,QAFD;AAGNC,MAAAA,+BAA+B,EAAE,KAH3B;AAINC,MAAAA,wBAAwB,EAAE,KAJpB;AAKNC,MAAAA,YAAY,EAAE,IALR;AAMNC,MAAAA,SAAS,EAAE,IANL;AAONC,MAAAA,IAAI,EAAE,UAPA;AASNC,MAAAA,kBAAkB,EAAE;AAClBC,QAAAA,aAAa,EAAE,KADG;AAElBC,QAAAA,KAAK,EAAE,IAFW;AAGlBC,QAAAA,EAAE,EAAE,IAHc;AAIlBC,QAAAA,KAAK,EAAE;AAJW;AATd,KADoB;;AAAA,SAmB5BC,uBAnB4B,GAmBFJ,aAAa,IAAI;AACzC,WAAKK,QAAL,CAAc;AAAEC,QAAAA,qBAAqB,EAAEN;AAAzB,OAAd;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,KAtB2B;;AAAA,SAwB5BC,0BAxB4B,GAwBCC,QAAQ,IAAI;AACvC,cAAQA,QAAQ,CAACC,YAAjB;AACE,aAAK,UAAL;AACE,eAAKN,QAAL,CACE;AACET,YAAAA,YAAY,EAAEc,QADhB;AAEEJ,YAAAA,qBAAqB,EAAE;AAFzB,WADF,EAKE,MAAM;AACJC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWK,YAAX,CAAwBgB,gBAApC;AACD,WAPH;AASA;;AAEF,aAAK,OAAL;AACE,eAAKP,QAAL,CAAc;AACZR,YAAAA,SAAS,EAAEa,QADC;AAEZG,YAAAA,kBAAkB,EAAE;AAFR,WAAd;AAIA;AAlBJ;AAoBD,KA7C2B;;AAAA,SA+C5BC,kBA/C4B,GA+CP,CAACC,KAAD,EAAQC,UAAR,EAAoBhB,aAApB,EAAmCiB,QAAnC,EAA6CC,IAA7C,KAAsD;AACzE;AACA;AACA,UAAIjB,KAAK,GAAG,IAAZ;AACA,UAAIC,EAAE,GAAG,IAAT;AACA,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIJ,kBAAkB,GAAG,IAAzB,CANyE,CAOzE;;AACA,cAAQiB,UAAR;AACE,aAAK,OAAL;AACE,kBAAQC,QAAR;AACE,iBAAK,OAAL;AACEhB,cAAAA,KAAK,GAAGiB,IAAR;AACAf,cAAAA,KAAK,GAAGY,KAAK,CAACI,MAAN,CAAahB,KAArB;AACA;;AACF,iBAAK,IAAL;AACED,cAAAA,EAAE,GAAGgB,IAAL;AACAf,cAAAA,KAAK,GAAGY,KAAK,CAACI,MAAN,CAAahB,KAArB;AACA;;AACF,iBAAK,gBAAL;AACEA,cAAAA,KAAK,GAAGe,IAAR;AACA;AAXJ;;AAcAnB,UAAAA,kBAAkB,GAAG;AACnBC,YAAAA,aAAa,EAAEA,aADI;AAEnBC,YAAAA,KAAK,EAAEA,KAFY;AAGnBC,YAAAA,EAAE,EAAEA,EAHe;AAInBC,YAAAA,KAAK,EAAEA,KAJY;AAKnBa,YAAAA,UAAU,EAAEA;AALO,WAArB;AAOA;;AACF,aAAK,QAAL;AACEjB,UAAAA,kBAAkB,GAAG;AACnBC,YAAAA,aAAa,EAAEA,aADI;AAEnBC,YAAAA,KAAK,EAAEA,KAFY;AAGnBC,YAAAA,EAAE,EAAEA,EAHe;AAInBc,YAAAA,UAAU,EAAEA,UAJO;AAKnBb,YAAAA,KAAK,EAAEe;AALY,WAArB;AAOA;AAhCJ,OARyE,CA2CzE;;;AACA,WAAKb,QAAL,CAAc;AACZN,QAAAA,kBAAkB,EAAEA;AADR,OAAd;AAGD,KA9F2B;;AAAA,SAgG5BqB,mBAhG4B,GAgGNV,QAAQ,IAAI;AAChC,cAAQA,QAAQ,CAACC,YAAjB;AACE,aAAK,UAAL;AACE,eAAKN,QAAL,CAAc;AACZT,YAAAA,YAAY,EAAEc;AADF,WAAd;AAGA;;AAEF,aAAK,OAAL;AACE,eAAKL,QAAL,CAAc;AACZR,YAAAA,SAAS,EAAEa;AADC,WAAd;AAIA;AAZJ;AAcD,KA/G2B;;AAAA,SAiH5BW,kBAjH4B,GAiHP,MAAM;AACzB,WAAKhB,QAAL,CAAc;AACZN,QAAAA,kBAAkB,EAAE;AAClBC,UAAAA,aAAa,EAAE,GADG;AAElBgB,UAAAA,UAAU,EAAE,EAFM;AAGlBf,UAAAA,KAAK,EAAE,IAHW;AAIlBC,UAAAA,EAAE,EAAE,IAJc;AAKlBC,UAAAA,KAAK,EAAE;AALW;AADR,OAAd;AASD,KA3H2B;AAAA;;AA6H5BmB,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD,CAAiB,QAAjB;AACE,MAAA,KAAK,EAAE;AACLD,QAAAA,kBAAkB,EAAE,KAAKA,kBADpB;AAELE,QAAAA,kBAAkB,EAAE,KAAKhC,KAFpB;AAGLuB,QAAAA,kBAAkB,EAAE,KAAKA,kBAHpB;AAILf,QAAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAWQ,kBAJ1B;AAKLqB,QAAAA,mBAAmB,EAAE,KAAKA;AALrB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE,oBAAC,eAAD,CAAiB,QAAjB;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,kBAAkB,EAAE,KAAKA,kBADpB;AAELG,QAAAA,kBAAkB,EAAE,KAAKjC,KAFpB;AAGLuB,QAAAA,kBAAkB,EAAE,KAAKA,kBAHpB;AAILf,QAAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAWQ,kBAJ1B;AAKLqB,QAAAA,mBAAmB,EAAE,KAAKA;AALrB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAWE,oBAAC,gBAAD,CAAkB,QAAlB;AACE,MAAA,KAAK,EAAE;AACL3B,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADb;AAEL2B,QAAAA,mBAAmB,EAAE,KAAKA,mBAFrB;AAGLN,QAAAA,kBAAkB,EAAE,KAAKA,kBAHpB;AAILf,QAAAA,kBAAkB,EAAE,KAAKR,KAAL,CAAWQ,kBAJ1B;AAKLF,QAAAA,SAAS,EAAE,KAAKN,KALX;AAML8B,QAAAA,kBAAkB,EAAE,KAAKA,kBANpB;AAOLI,QAAAA,cAAc,EAAE,KAAKA;AAPhB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE,oBAAC,SAAD;AACE,MAAA,wBAAwB,EAAE,KAAKlC,KAAL,CAAWI,wBADvC;AAEE,MAAA,kBAAkB,EAAE,KAAKJ,KAAL,CAAWQ,kBAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAeE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CAXF,CAXF,CADF,CADF,CADF;AA+CD;;AAlL2B;;AAqL9B,eAAeH,KAAf","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport SyllabusData from './SyllabusData';\nimport SyllabusContext from '../../context/syllabusContext.js';\nimport TasksDataContext from '../../context/tasksContext.js';\nimport Aux from '../../hoc/Aux';\nimport Layout from '../../hoc/Layout';\nimport CalendarContext from '../../context/calendarContext';\n\nclass Store extends Component {\n  state = {\n    showSyllabusList: false,\n    crunk: 'Hootie',\n    showLeftOverLessonsFromSyllabus: false,\n    showLeftOverTasksForWeek: false,\n    syllabusData: null,\n    tasksData: null,\n    fish: 'blowFish',\n\n    dataRequestDetails: {\n      handlerChoice: false,\n      index: null,\n      id: null,\n      value: null\n    }\n  };\n\n  //Now deals with syllabusData strictly\n  sendSyllabusDataHandler = handlerChoice => {\n    this.setState({ syllabusHandlerChoice: handlerChoice });\n    console.log('Inside of sendSyllabusDataHandler');\n  };\n\n  receiveSyllabusDataHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState(\n          {\n            syllabusData: dataBase,\n            syllabusHandlerChoice: '0'\n          },\n          () => {\n            console.log(this.state.syllabusData.lastLessonHeader);\n          }\n        );\n        break;\n\n      case 'tasks':\n        this.setState({\n          tasksData: dataBase,\n          tasksHandlerChoice: '0'\n        });\n        break;\n    }\n  };\n\n  dataRequestHandler = (event, typeOfData, handlerChoice, infoType, info) => {\n    //alert('inside dataRequestHandler');\n    //alert(` ${typeOfData}  :${handlerChoice} :${infoType} :${info}`);\n    let index = null;\n    let id = null;\n    let value = '';\n    let dataRequestDetails = null;\n    //let inspection = event.value;\n    switch (typeOfData) {\n      case 'tasks':\n        switch (infoType) {\n          case 'index':\n            index = info;\n            value = event.target.value;\n            break;\n          case 'id':\n            id = info;\n            value = event.target.value;\n            break;\n          case 'pickedDayTasks':\n            value = info;\n            break;\n        }\n\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          value: value,\n          typeOfData: typeOfData\n        };\n        break;\n      case 'events':\n        dataRequestDetails = {\n          handlerChoice: handlerChoice,\n          index: index,\n          id: id,\n          typeOfData: typeOfData,\n          value: info\n        };\n        break;\n    }\n\n    //event, index, handlerType\n    this.setState({\n      dataRequestDetails: dataRequestDetails\n    });\n  };\n\n  dataReceiverHandler = dataBase => {\n    switch (dataBase.dataBaseName) {\n      case 'syllabus':\n        this.setState({\n          syllabusData: dataBase\n        });\n        break;\n\n      case 'tasks':\n        this.setState({\n          tasksData: dataBase\n        });\n\n        break;\n    }\n  };\n\n  resetHandlerChoice = () => {\n    this.setState({\n      dataRequestDetails: {\n        handlerChoice: '0',\n        typeOfData: '',\n        index: null,\n        id: null,\n        value: ''\n      }\n    });\n  };\n\n  render() {\n    // let displayMessage = null;\n    // if (this.state.syllabusHandlerChoice === '0') {\n    //   displayMessage = <div>Hey syllabusHandlerchoice is recorded</div>;\n    // }\n    // Layout wrap displayed\n    return (\n      <Aux>\n        <Layout>\n          <CalendarContext.Provider\n            value={{\n              resetHandlerChoice: this.resetHandlerChoice,\n              everythingCalendar: this.state,\n              dataRequestHandler: this.dataRequestHandler,\n              dataRequestDetails: this.state.dataRequestDetails,\n              dataReceiverHandler: this.dataReceiverHandler\n            }}\n          >\n            {/* <Calendar /> */}\n\n            <SyllabusContext.Provider\n              value={{\n                resetHandlerChoice: this.resetHandlerChoice,\n                everythingSyllabus: this.state,\n                dataRequestHandler: this.dataRequestHandler,\n                dataRequestDetails: this.state.dataRequestDetails,\n                dataReceiverHandler: this.dataReceiverHandler\n              }}\n            >\n              <SyllabusData></SyllabusData>\n\n              <TasksDataContext.Provider\n                value={{\n                  crunk: this.state.crunk,\n                  dataReceiverHandler: this.dataReceiverHandler,\n                  dataRequestHandler: this.dataRequestHandler,\n                  dataRequestDetails: this.state.dataRequestDetails,\n                  tasksData: this.state,\n                  resetHandlerChoice: this.resetHandlerChoice,\n                  newDataHandler: this.newDataHandler\n                }}\n              >\n                <TasksData\n                  showLeftOverTasksForWeek={this.state.showLeftOverTasksForWeek}\n                  dataRequestDetails={this.state.dataRequestDetails}\n                />\n                <RightCockpit crunk={this.state.crunk}></RightCockpit>\n              </TasksDataContext.Provider>\n            </SyllabusContext.Provider>\n          </CalendarContext.Provider>\n        </Layout>\n      </Aux>\n    );\n  }\n}\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}
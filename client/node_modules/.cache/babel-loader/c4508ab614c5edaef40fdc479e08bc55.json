{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Creation/NewEvent.js\";\nimport React, { Component } from 'react';\nimport DatePickerPicker from '../../containers/RightCockpit/DatePicker.js'; //import ReactDatePicker from '../Calendar/ReactDatePicker';\n\nimport TimePicker from 'react-time-picker';\nimport Icon from '../Calendar/Icon';\nimport { Form, Input, FormGroup, Container, Label } from 'reactstrap';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates'; // onSubmit = e => {\n// e.preventDefault();\n// const [newEvent, setNewEvent] = useState({\n//   title: ''\n// });\n// setNewEvent({\n//   [e.target.name]: e.target.value\n// });\n// let bigEvent = { [e.target.name]: e.target.value };\n// props.newestEvent(bigEvent);\n// };\n\nclass NewEvent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventTitle: '',\n      day: '',\n      month: '',\n      year: '',\n      time: '',\n      task: {\n        id: '',\n        //task + date + start time\n        timeOfDay: '',\n        task: '',\n        //title\n        note: '',\n        deadline: '',\n        //scheduled date\n        category: '',\n        //\n        source: '',\n        //event\n        assignedTimeStart: '',\n        assignedTimeStop: '',\n        assignedDate: ''\n      },\n      date: null,\n      focused: null,\n      showPickedDate: false\n    };\n\n    this.change = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.newestEvent(this.state);\n    };\n\n    this.handleDateChange = date => {\n      //let date = event.target.value;\n      this.setState({\n        date: date,\n        showPickedDate: true\n      }, () => alert(this.state.date._d));\n    };\n  }\n\n  render() {\n    let reactTimePicker = React.createElement(TimePicker, {\n      onChange: this.onChange,\n      value: this.state.time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n    let showCaseReactDate = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(SingleDatePicker, {\n      firstDayOfWeek: 1,\n      keepOpenOnDateSelect: true //doesn't close screen after picking date\n      ,\n      hideKeyboardShortcutsPanel: false //displayFormat={() => moment.localeData().longDateFormat('L')}\n      //phrases={SingleDatePickerPhrases}\n      ,\n      showClearDate: false,\n      small: true,\n      block: false,\n      numberOfMonths: 2,\n      date: this.state.date,\n      onDateChange: date => this.handleDateChange(date),\n      focused: this.state.focused,\n      onFocusChange: ({\n        focused\n      }) => this.setState({\n        focused\n      }),\n      openDirection: \"down\",\n      hideKeyboardShortcutsPanel: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })))));\n    let showCurrentPickedDate = null;\n\n    if (this.state.date && this.state.date._d) {\n      showCurrentPickedDate = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, JSON.stringify(this.state.date['_d']));\n    } //{ showCurrentPickedDate }\n\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Event Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      value: this.state.task.task,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Note\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      className: \"form-control\",\n      value: this.state.task.note,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), showCaseReactDate, reactTimePicker), showCurrentPickedDate, React.createElement(\"button\", {\n      onClick: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n} // {this.state.showPickedDate ? { showCurrentPickedDate } : null}\n\n\nexport default NewEvent; // <div className=\"form-group\">\n//             <label for=\"exampleFormControlTextarea1\">Example textarea</label>\n//             <textarea\n//               value = 'Search on Ebay'\n//               className=\"form-control\"\n//               rows=\"3\">\n//                </textarea>\n//           </div>","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Creation/NewEvent.js"],"names":["React","Component","DatePickerPicker","TimePicker","Icon","Form","Input","FormGroup","Container","Label","DateRangePicker","SingleDatePicker","DayPickerRangeController","NewEvent","state","eventTitle","day","month","year","time","task","id","timeOfDay","note","deadline","category","source","assignedTimeStart","assignedTimeStop","assignedDate","date","focused","showPickedDate","change","e","setState","target","name","value","onSubmit","preventDefault","props","newestEvent","handleDateChange","alert","_d","render","reactTimePicker","onChange","showCaseReactDate","showCurrentPickedDate","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\n//import ReactDatePicker from '../Calendar/ReactDatePicker';\nimport TimePicker from 'react-time-picker';\nimport Icon from '../Calendar/Icon';\nimport { Form, Input, FormGroup, Container, Label } from 'reactstrap';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport {\n  DateRangePicker,\n  SingleDatePicker,\n  DayPickerRangeController\n} from 'react-dates';\n\n// onSubmit = e => {\n// e.preventDefault();\n\n// const [newEvent, setNewEvent] = useState({\n//   title: ''\n// });\n\n// setNewEvent({\n//   [e.target.name]: e.target.value\n// });\n// let bigEvent = { [e.target.name]: e.target.value };\n// props.newestEvent(bigEvent);\n// };\n\nclass NewEvent extends Component {\n  state = {\n    eventTitle: '',\n    day: '',\n    month: '',\n    year: '',\n    time: '',\n    task: {\n      id: '', //task + date + start time\n      timeOfDay: '',\n      task: '', //title\n      note: '',\n      deadline: '', //scheduled date\n      category: '', //\n      source: '', //event\n      assignedTimeStart: '',\n      assignedTimeStop: '',\n      assignedDate: ''\n    },\n    date: null,\n    focused: null,\n    showPickedDate: false\n  };\n  change = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.newestEvent(this.state);\n  };\n  handleDateChange = date => {\n    //let date = event.target.value;\n    this.setState({ date: date, showPickedDate: true }, () =>\n      alert(this.state.date._d)\n    );\n  };\n  render() {\n    let reactTimePicker = (\n      <TimePicker onChange={this.onChange} value={this.state.time} />\n    );\n    let showCaseReactDate = (\n      <div>\n        <Container>\n          <Form>\n            <FormGroup>\n              <SingleDatePicker\n                firstDayOfWeek={1}\n                keepOpenOnDateSelect={true} //doesn't close screen after picking date\n                hideKeyboardShortcutsPanel={false}\n                //displayFormat={() => moment.localeData().longDateFormat('L')}\n\n                //phrases={SingleDatePickerPhrases}\n                showClearDate={false}\n                small={true}\n                block={false}\n                numberOfMonths={2}\n                date={this.state.date}\n                onDateChange={date => this.handleDateChange(date)}\n                focused={this.state.focused}\n                onFocusChange={({ focused }) => this.setState({ focused })}\n                openDirection=\"down\"\n                hideKeyboardShortcutsPanel={true}\n              />\n            </FormGroup>\n          </Form>\n        </Container>\n      </div>\n    );\n    let showCurrentPickedDate = null;\n\n    if (this.state.date && this.state.date._d) {\n      showCurrentPickedDate = (\n        <div>{JSON.stringify(this.state.date['_d'])}</div>\n      );\n    }\n\n    //{ showCurrentPickedDate }\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <form>\n            <div className=\"form-group\">\n              <label>Event Title</label>\n              <input\n                type=\"text\"\n                name=\"title\"\n                className=\"form-control\"\n                value={this.state.task.task}\n                onChange={e => this.change(e)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Note</label>\n              <input\n                type=\"text\"\n                name=\"description\"\n                className=\"form-control\"\n                value={this.state.task.note}\n                onChange={e => this.change(e)}\n              />\n\n              {showCaseReactDate}\n              {reactTimePicker}\n            </div>\n            {showCurrentPickedDate}\n            <button onClick={e => this.onSubmit(e)}>Submit</button>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n// {this.state.showPickedDate ? { showCurrentPickedDate } : null}\nexport default NewEvent;\n\n// <div className=\"form-group\">\n//             <label for=\"exampleFormControlTextarea1\">Example textarea</label>\n//             <textarea\n//               value = 'Search on Ebay'\n//               className=\"form-control\"\n//               rows=\"3\">\n//                </textarea>\n//           </div>\n"]},"metadata":{},"sourceType":"module"}
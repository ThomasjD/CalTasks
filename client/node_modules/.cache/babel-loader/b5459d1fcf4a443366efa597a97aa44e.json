{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/CalendarData.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nimport DatePicker from 'react-datepicker';\n\nclass CalendarData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createDayObjName = () => {\n      let day = this.state.startTimeDate.day; //let year = this.state.startTimeDate.\n\n      let date = this.state.startTimeDate.toLocalString;\n      console.log(date);\n    };\n\n    this.newDayObj = () => {//obj name 200219Wed\n    };\n\n    this.createDayObjName = () => {\n      /*\n        //datepicker to give obj of startime\n        //use starttime to make obj name\n        //d\n          */\n      state = {\n        showChooseDate: false\n      };\n    };\n  }\n\n  handleStartTimeDateChange(date) {\n    let currentShowStartTimeDate = this.state.showStartTimeDate;\n    let startTimeDate = {\n      date: date,\n      dateObjectString: date.toString(),\n      toISOString: date.toISOString(),\n      toUTCString: date.toUTCString(),\n      toGMTString: date.toUTCString(),\n      dateString: date.toDateString(),\n      timeString: date.toTimeString(),\n      year: date.getFullYear(),\n      yearShort: date.getYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay(),\n      time: date.toLocaleTimeString(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      UTCDate: date.getUTCDate(),\n      toLocalString: date.toLocaleString(),\n      toLocalDateString: date.toLocaleDateString(),\n      toLocaleTimeString: date.toLocaleTimeString()\n    };\n    this.setState({\n      showStartTimeDate: !currentShowStartTimeDate,\n      startDate: date,\n      startTimeDate: startTimeDate\n    }, () => this.createDayObjName() // () => this.props.startDateTimeHandler(this.state.startTimeDate)\n    );\n  }\n\n  render() {\n    //datePicker\n    let chooseDate = null;\n\n    if (this.state.showChooseDate) {\n      chooseDate = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        placeholderText: \"Choose Start Time\",\n        selected: this.state.startDate,\n        onChange: date => this.handleStartTimeDateChange(date),\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        timeIntervals: 30,\n        timeCaption: \"Start\",\n        dateFormat: \"MMMM d, yyyy h:mm aa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.setState({\n        showChooseDate: !this.state.showChooseDate\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"PickDate\"), chooseDate);\n  }\n\n}\n\nexport default CalendarData;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/CalendarData.js"],"names":["React","Component","RightCockpit","TasksContext","DatePicker","CalendarData","constructor","props","createDayObjName","day","state","startTimeDate","date","toLocalString","console","log","newDayObj","showChooseDate","handleStartTimeDateChange","currentShowStartTimeDate","showStartTimeDate","dateObjectString","toString","toISOString","toUTCString","toGMTString","dateString","toDateString","timeString","toTimeString","year","getFullYear","yearShort","getYear","month","getMonth","getDate","getDay","time","toLocaleTimeString","hour","getHours","minute","getMinutes","UTCDate","getUTCDate","toLocaleString","toLocalDateString","toLocaleDateString","setState","startDate","render","chooseDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nimport DatePicker from 'react-datepicker';\n\nclass CalendarData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newDayObj = () => {\n      //obj name 200219Wed\n    };\n\n    this.createDayObjName = () => {\n      /*\n        //datepicker to give obj of startime\n        //use starttime to make obj name\n        //d\n\n\n\n\n      */\n\n      state = {\n        showChooseDate: false\n      };\n    };\n  }\n\n  createDayObjName = () => {\n    let day = this.state.startTimeDate.day;\n    //let year = this.state.startTimeDate.\n    let date = this.state.startTimeDate.toLocalString;\n    console.log(date);\n  };\n\n  handleStartTimeDateChange(date) {\n    let currentShowStartTimeDate = this.state.showStartTimeDate;\n    let startTimeDate = {\n      date: date,\n      dateObjectString: date.toString(),\n      toISOString: date.toISOString(),\n      toUTCString: date.toUTCString(),\n      toGMTString: date.toUTCString(),\n      dateString: date.toDateString(),\n      timeString: date.toTimeString(),\n      year: date.getFullYear(),\n      yearShort: date.getYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay(),\n      time: date.toLocaleTimeString(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      UTCDate: date.getUTCDate(),\n      toLocalString: date.toLocaleString(),\n      toLocalDateString: date.toLocaleDateString(),\n      toLocaleTimeString: date.toLocaleTimeString()\n    };\n\n    this.setState(\n      {\n        showStartTimeDate: !currentShowStartTimeDate,\n        startDate: date,\n        startTimeDate: startTimeDate\n      },\n      () => this.createDayObjName()\n\n      // () => this.props.startDateTimeHandler(this.state.startTimeDate)\n    );\n  }\n\n  render() {\n    //datePicker\n    let chooseDate = null;\n    if (this.state.showChooseDate) {\n      chooseDate = (\n        <React.Fragment>\n          <div className=\"container\">\n            <DatePicker\n              placeholderText=\"Choose Start Time\"\n              selected={this.state.startDate}\n              onChange={date => this.handleStartTimeDateChange(date)}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={30}\n              timeCaption=\"Start\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n\n            {/* <DatePicker\n            placeholderText=\"Choose End Time\"\n            selected={this.state.finishDate}\n            onChange={date => this.handleFinishTimeDateChange(date)}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            timeCaption=\"End\"\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n          /> */}\n          </div>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <button\n          onClick={this.setState({\n            showChooseDate: !this.state.showChooseDate\n          })}\n        >\n          PickDate\n        </button>\n        {chooseDate}\n      </React.Fragment>\n    );\n  }\n}\nexport default CalendarData;\n"]},"metadata":{},"sourceType":"module"}
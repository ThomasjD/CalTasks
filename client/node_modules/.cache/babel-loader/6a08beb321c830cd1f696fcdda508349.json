{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Navigation/Toolbar /Toolbar.js\";\n// import React, { useState, useContext, useEffect } from 'react';\n// import StoreContext from '../../../context/StoreDataContext';\n// import classes from '../../Cockpit/Cockpit.module.css';\n// import calendarObj from '../../Calendar/calendarObj';\n// import SyllabiList from '../../ViewContent/Syllabus/SyllabiList';\n// import classes from './Toolbar.module.css';\n// import Logo from '../../../Logo/Logo';\n// import NavigationItems from '../NavigationItems/NavigationItems';\n// import DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n// const Toolbar = props => {\n//   const [newTaskState, setTaskState] = useState({\n//     showNewTaskForm: false\n//   });\n//   const storeContext = useContext(StoreContext);\n//   const requestDataHandler = event => {\n//     let contentchoice = event.target.value;\n//     let typeOfData = ''; //string: syllabus,tasks,events,objectives\n//     let handlerChoice = ''; //string: '#' handler inside of database\n//     let dataLocation = ''; // string: where obj found inside database\n//     let infoType = ''; //string: index/id/\n//     let info = ''; //string: actual info\n//     let today = calendarObj();\n//     // let value = '';\n//     let dataRequestMessage = {};\n//     switch (contentchoice) {\n//       case '1':\n//         typeOfData = 'tasks';\n//         handlerChoice = '1';\n//         dataLocation = 'unAssignedTasksForWeek';\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//       case '2':\n//         typeOfData = 'tasks';\n//         handlerChoice = '2';\n//         dataLocation = today;\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//       case '3':\n//         break;\n//       case '4':\n//         break;\n//       case '5':\n//         break;\n//       case '6': //load up newSyllabus component -> get data prepared to display maxReactWorkLeft\n//         typeOfData = 'syllabus';\n//         handlerChoice = '10';\n//         dataLocation = 'maxReactWorkLeft';\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//     }\n//     let contentViewObject = {\n//       target: {\n//         value: contentchoice\n//       }\n//     };\n//     storeContext.contentViewHandler(contentViewObject);\n//   };\n//   const pickedSyllabusRequestHandler = event => {\n//     //let dayPicked = event.target.value;\n//     //event\n//     let dataRequestMessage = null;\n//     if (event.target.value === 'showSyllabiList') {\n//       dataRequestMessage = {\n//         typeOfData: 'syllabus',\n//         handlerChoice: '18',\n//         dataLocation: null,\n//         infoType: 'triggerShowSyllabus',\n//         info: ''\n//       };\n//       storeContext.dataRequestHandler(event, dataRequestMessage);\n//     } else {\n//       // alert(\n//       //   `inside pickedSyllabusRequestHandler value from onClick: ${event.target.value}`\n//       // );\n//       dataRequestMessage = {\n//         typeOfData: 'syllabus',\n//         handlerChoice: '11',\n//         dataLocation: event.target.value,\n//         infoType: 'triggerShowSyllabus',\n//         info: ''\n//       };\n//       storeContext.dataRequestHandler(event, dataRequestMessage);\n//       // let newContentChoice = event.target.value;\n//       let contentViewObject = {\n//         target: {\n//           value: '10'\n//         }\n//       };\n//       storeContext.contentViewHandler(contentViewObject);\n//     }\n//     //tasksContext.contentViewHandler(3)\n//   };\n//   const processSyllabiList = () => {\n//     return Object.keys(\n//       storeContext.everythingSyllabus.syllabusData.syllabi\n//     ).map((syllabus, index) => {\n//       return (\n//         <React.Fragment key={index}>\n//           <SyllabiList\n//             click={event => pickedSyllabusRequestHandler(event)}\n//             syllabusId={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .syllabusId\n//             }\n//             value={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .syllabusId\n//             }\n//             index={index}\n//             syllabusName={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .name\n//             }\n//           />\n//         </React.Fragment>\n//       );\n//     });\n//   };\n//   useEffect(() => {\n//     console.log('[Cockpit.js] useffect');\n//     //getting rid of timer\n//     // const timer = setTimeout(() => {\n//     //   alert('Delete Cockpit timer alert');\n//     // }, 100);\n//     return () => {\n//       //clearTimeout(timer);\n//       console.log('[Cockpit.js] cleanup work in useEffect');\n//     };\n//   }, []);\n//   const newTaskHandler = () => {\n//     let currentShowNewTaskForm = newTaskState.showNewTaskForm;\n//     console.log('inside newTaskHandler()');\n//     setTaskState({\n//       showNewTaskForm: !currentShowNewTaskForm\n//     });\n//   };\n//   const [newTaskInfoState, setTaskInfoState] = useState({\n//     newTaskTitle: '',\n//     newTaskCategory: ''\n//     // newTaskDescription: '',\n//     // newTaskTime: '',\n//     // newTaskestimatedDuration: '' //estimation\n//   });\n//   //notify new title changed - set up new state\n//   const newSetTaskInfoState = event => {\n//     console.log('inside newTaskFormHandler()');\n//     setTaskInfoState({\n//       newTaskTitle: event.target.value,\n//       newTaskCategory: newTaskInfoState.newTaskCategory\n//     });\n//   };\n//   //notify new category changed - set up new state\n//   const newSetTaskCategoryState = event => {\n//     console.log('inside newSetTaskCategoryState()');\n//     setTaskInfoState({\n//       newTaskTitle: newTaskInfoState.newTaskTitle,\n//       newTaskCategory: event.target.value\n//     });\n//   };\n//   const navbarDisplay = (\n//     <div>\n//       <nav className=\"navbar navbar-expand-sm navbar-light bg-light mb-3\">\n//         <button className=\"btn btn-primary\" onClick={props.deleteCockpit}>\n//           {' '}\n//           Delete Cockpit\n//         </button>\n//         <div className=\"container\">\n//           <div className={classes.specialbtn}>\n//             <div className=\"dropdown\">\n//               <button\n//                 className=\"btn dropdown-toggle\"\n//                 type=\"button\"\n//                 data-toggle=\"dropdown\"\n//               >\n//                 <span className=\"navbar-toggler-icon\"></span>\n//                 Tasks\n//               </button>\n//               <div className=\"dropdown-menu\">\n//                 <div className={classes.specialbtnAllTasks}>\n//                   <button\n//                     className=\"dropdown-item\"\n//                     onClick={event => requestDataHandler(event)}\n//                     value=\"1\"\n//                   >\n//                     All Tasks\n//                   </button>\n//                 </div>\n//                 <div className={classes.specialbtnTodayTasks}>\n//                   <button\n//                     className=\"dropdown-item\"\n//                     onClick={event => requestDataHandler(event)}\n//                     value=\"2\"\n//                   >\n//                     Today\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n//             <ul className=\"navbar-nav\">\n//               <li className=\"nav-item\">\n//                 <a className=\"nav-link\" href=\"#\">\n//                   Calendar\n//                 </a>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <a className=\"nav-link\" href=\"#\">\n//                   Plans\n//                 </a>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <a className=\"nav-link\" href=\"#\">\n//                   Objetivos\n//                 </a>\n//               </li>\n//               <li className=\"nav-item dropdown active\">\n//                 <button\n//                   className=\"btn dropdown-toggle\"\n//                   type=\"button\"\n//                   id=\"dropdownMenu2\"\n//                   data-toggle=\"dropdown\"\n//                   aria-haspopup=\"true\"\n//                   aria-expanded=\"false\"\n//                   onClick={event => pickedSyllabusRequestHandler(event)}\n//                   value=\"showSyllabiList\"\n//                 >\n//                   {' '}\n//                   View Syllabi\n//                 </button>\n//                 <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n//                   {storeContext.everythingSyllabus.syllabusData\n//                     ? processSyllabiList()\n//                     : null}\n//                 </div>\n//               </li>\n//             </ul>\n//             <form className=\"form-inline ml-auto\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control mr-2\"\n//                 placeholder=\"Search Task\"\n//               />\n//               <button className=\"btn btn-outline-success\">Search</button>\n//             </form>\n//             <div className=\"nav-item dropdown\">\n//               <a\n//                 href=\"#\"\n//                 className=\"nav-link dropdown-toggle\"\n//                 data-toggle=\"dropdown\"\n//               >\n//                 Creation\n//               </a>\n//               <div className=\"dropdown-menu\">\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"4\"\n//                   className=\"dropdown-item\"\n//                 >\n//                   {' '}\n//                   Task\n//                 </button>\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"5\" //will be contentChoice later\n//                   className=\"dropdown-item\"\n//                 >\n//                   Event\n//                 </button>\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"6\" //for contentChoice //'10' is handlerChoice\n//                   className=\"dropdown-item\"\n//                 >\n//                   Syllabus\n//                 </button>\n//                 <a href=\"#\" className=\"dropdown-item\">\n//                   Objetivo\n//                 </a>\n//                 <a href=\"#\" className=\"dropdown-item\"></a>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </nav>\n//     </div>\n//   );\n//   return <React.Fragment>{navbarDisplay}</React.Fragment>;\n// };\n// export default Toolbar;\nimport React from 'react';\nimport NavBar from '../../../components/Cockpit/Navbar/Navbar';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = props => React.createElement(\"header\", {\n  className: classes.Toolbar,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 358\n  },\n  __self: this\n}, React.createElement(DrawerToggle, {\n  clicked: props.drawerToggleClicked,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 359\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: classes.Logo,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 360\n  },\n  __self: this\n}, React.createElement(Logo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 361\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: classes.DesktopOnly,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 363\n  },\n  __self: this\n}, React.createElement(NavBar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 365\n  },\n  __self: this\n})));\n\nexport default toolbar;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Navigation/Toolbar /Toolbar.js"],"names":["React","NavBar","classes","Logo","NavigationItems","DrawerToggle","toolbar","props","Toolbar","drawerToggleClicked","DesktopOnly"],"mappingskB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,YAAP,MAAyB,yCAAzB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IACnB;AAAQ,EAAA,SAAS,EAAEL,OAAO,CAACM,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAED,KAAK,CAACE,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAK,EAAA,SAAS,EAAEP,OAAO,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFF,EAKE;AAAK,EAAA,SAAS,EAAED,OAAO,CAACQ,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CALF,CADF;;AAaA,eAAeJ,OAAf","sourcesContent":["// import React, { useState, useContext, useEffect } from 'react';\n// import StoreContext from '../../../context/StoreDataContext';\n// import classes from '../../Cockpit/Cockpit.module.css';\n// import calendarObj from '../../Calendar/calendarObj';\n// import SyllabiList from '../../ViewContent/Syllabus/SyllabiList';\n// import classes from './Toolbar.module.css';\n// import Logo from '../../../Logo/Logo';\n// import NavigationItems from '../NavigationItems/NavigationItems';\n// import DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\n// const Toolbar = props => {\n//   const [newTaskState, setTaskState] = useState({\n//     showNewTaskForm: false\n//   });\n\n//   const storeContext = useContext(StoreContext);\n\n//   const requestDataHandler = event => {\n//     let contentchoice = event.target.value;\n//     let typeOfData = ''; //string: syllabus,tasks,events,objectives\n//     let handlerChoice = ''; //string: '#' handler inside of database\n//     let dataLocation = ''; // string: where obj found inside database\n//     let infoType = ''; //string: index/id/\n//     let info = ''; //string: actual info\n//     let today = calendarObj();\n\n//     // let value = '';\n//     let dataRequestMessage = {};\n//     switch (contentchoice) {\n//       case '1':\n//         typeOfData = 'tasks';\n//         handlerChoice = '1';\n//         dataLocation = 'unAssignedTasksForWeek';\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//       case '2':\n//         typeOfData = 'tasks';\n//         handlerChoice = '2';\n//         dataLocation = today;\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//       case '3':\n//         break;\n//       case '4':\n//         break;\n//       case '5':\n//         break;\n//       case '6': //load up newSyllabus component -> get data prepared to display maxReactWorkLeft\n//         typeOfData = 'syllabus';\n//         handlerChoice = '10';\n//         dataLocation = 'maxReactWorkLeft';\n//         infoType = null;\n//         info = null;\n//         dataRequestMessage = {\n//           typeOfData: typeOfData,\n//           handlerChoice: handlerChoice,\n//           dataLocation: dataLocation,\n//           infoType: infoType,\n//           info: info\n//         };\n\n//         storeContext.dataRequestHandler(event, dataRequestMessage);\n//         break;\n//     }\n\n//     let contentViewObject = {\n//       target: {\n//         value: contentchoice\n//       }\n//     };\n\n//     storeContext.contentViewHandler(contentViewObject);\n//   };\n\n//   const pickedSyllabusRequestHandler = event => {\n//     //let dayPicked = event.target.value;\n//     //event\n//     let dataRequestMessage = null;\n//     if (event.target.value === 'showSyllabiList') {\n//       dataRequestMessage = {\n//         typeOfData: 'syllabus',\n//         handlerChoice: '18',\n//         dataLocation: null,\n//         infoType: 'triggerShowSyllabus',\n//         info: ''\n//       };\n//       storeContext.dataRequestHandler(event, dataRequestMessage);\n//     } else {\n//       // alert(\n//       //   `inside pickedSyllabusRequestHandler value from onClick: ${event.target.value}`\n//       // );\n//       dataRequestMessage = {\n//         typeOfData: 'syllabus',\n//         handlerChoice: '11',\n//         dataLocation: event.target.value,\n//         infoType: 'triggerShowSyllabus',\n//         info: ''\n//       };\n//       storeContext.dataRequestHandler(event, dataRequestMessage);\n//       // let newContentChoice = event.target.value;\n\n//       let contentViewObject = {\n//         target: {\n//           value: '10'\n//         }\n//       };\n//       storeContext.contentViewHandler(contentViewObject);\n//     }\n\n//     //tasksContext.contentViewHandler(3)\n//   };\n\n//   const processSyllabiList = () => {\n//     return Object.keys(\n//       storeContext.everythingSyllabus.syllabusData.syllabi\n//     ).map((syllabus, index) => {\n//       return (\n//         <React.Fragment key={index}>\n//           <SyllabiList\n//             click={event => pickedSyllabusRequestHandler(event)}\n//             syllabusId={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .syllabusId\n//             }\n//             value={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .syllabusId\n//             }\n//             index={index}\n//             syllabusName={\n//               storeContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n//                 .name\n//             }\n//           />\n//         </React.Fragment>\n//       );\n//     });\n//   };\n\n//   useEffect(() => {\n//     console.log('[Cockpit.js] useffect');\n\n//     //getting rid of timer\n//     // const timer = setTimeout(() => {\n//     //   alert('Delete Cockpit timer alert');\n//     // }, 100);\n\n//     return () => {\n//       //clearTimeout(timer);\n//       console.log('[Cockpit.js] cleanup work in useEffect');\n//     };\n//   }, []);\n\n//   const newTaskHandler = () => {\n//     let currentShowNewTaskForm = newTaskState.showNewTaskForm;\n//     console.log('inside newTaskHandler()');\n//     setTaskState({\n//       showNewTaskForm: !currentShowNewTaskForm\n//     });\n//   };\n\n//   const [newTaskInfoState, setTaskInfoState] = useState({\n//     newTaskTitle: '',\n//     newTaskCategory: ''\n\n//     // newTaskDescription: '',\n//     // newTaskTime: '',\n//     // newTaskestimatedDuration: '' //estimation\n//   });\n\n//   //notify new title changed - set up new state\n//   const newSetTaskInfoState = event => {\n//     console.log('inside newTaskFormHandler()');\n//     setTaskInfoState({\n//       newTaskTitle: event.target.value,\n//       newTaskCategory: newTaskInfoState.newTaskCategory\n//     });\n//   };\n\n//   //notify new category changed - set up new state\n//   const newSetTaskCategoryState = event => {\n//     console.log('inside newSetTaskCategoryState()');\n//     setTaskInfoState({\n//       newTaskTitle: newTaskInfoState.newTaskTitle,\n//       newTaskCategory: event.target.value\n//     });\n//   };\n\n//   const navbarDisplay = (\n//     <div>\n//       <nav className=\"navbar navbar-expand-sm navbar-light bg-light mb-3\">\n//         <button className=\"btn btn-primary\" onClick={props.deleteCockpit}>\n//           {' '}\n//           Delete Cockpit\n//         </button>\n//         <div className=\"container\">\n//           <div className={classes.specialbtn}>\n//             <div className=\"dropdown\">\n//               <button\n//                 className=\"btn dropdown-toggle\"\n//                 type=\"button\"\n//                 data-toggle=\"dropdown\"\n//               >\n//                 <span className=\"navbar-toggler-icon\"></span>\n//                 Tasks\n//               </button>\n\n//               <div className=\"dropdown-menu\">\n//                 <div className={classes.specialbtnAllTasks}>\n//                   <button\n//                     className=\"dropdown-item\"\n//                     onClick={event => requestDataHandler(event)}\n//                     value=\"1\"\n//                   >\n//                     All Tasks\n//                   </button>\n//                 </div>\n\n//                 <div className={classes.specialbtnTodayTasks}>\n//                   <button\n//                     className=\"dropdown-item\"\n//                     onClick={event => requestDataHandler(event)}\n//                     value=\"2\"\n//                   >\n//                     Today\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n//             <ul className=\"navbar-nav\">\n//               <li className=\"nav-item\">\n//                 <a className=\"nav-link\" href=\"#\">\n//                   Calendar\n//                 </a>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <a className=\"nav-link\" href=\"#\">\n//                   Plans\n//                 </a>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <a className=\"nav-link\" href=\"#\">\n//                   Objetivos\n//                 </a>\n//               </li>\n//               <li className=\"nav-item dropdown active\">\n//                 <button\n//                   className=\"btn dropdown-toggle\"\n//                   type=\"button\"\n//                   id=\"dropdownMenu2\"\n//                   data-toggle=\"dropdown\"\n//                   aria-haspopup=\"true\"\n//                   aria-expanded=\"false\"\n//                   onClick={event => pickedSyllabusRequestHandler(event)}\n//                   value=\"showSyllabiList\"\n//                 >\n//                   {' '}\n//                   View Syllabi\n//                 </button>\n\n//                 <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n//                   {storeContext.everythingSyllabus.syllabusData\n//                     ? processSyllabiList()\n//                     : null}\n//                 </div>\n//               </li>\n//             </ul>\n\n//             <form className=\"form-inline ml-auto\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control mr-2\"\n//                 placeholder=\"Search Task\"\n//               />\n//               <button className=\"btn btn-outline-success\">Search</button>\n//             </form>\n//             <div className=\"nav-item dropdown\">\n//               <a\n//                 href=\"#\"\n//                 className=\"nav-link dropdown-toggle\"\n//                 data-toggle=\"dropdown\"\n//               >\n//                 Creation\n//               </a>\n//               <div className=\"dropdown-menu\">\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"4\"\n//                   className=\"dropdown-item\"\n//                 >\n//                   {' '}\n//                   Task\n//                 </button>\n\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"5\" //will be contentChoice later\n//                   className=\"dropdown-item\"\n//                 >\n//                   Event\n//                 </button>\n\n//                 <button\n//                   onClick={event => requestDataHandler(event)}\n//                   value=\"6\" //for contentChoice //'10' is handlerChoice\n//                   className=\"dropdown-item\"\n//                 >\n//                   Syllabus\n//                 </button>\n\n//                 <a href=\"#\" className=\"dropdown-item\">\n//                   Objetivo\n//                 </a>\n//                 <a href=\"#\" className=\"dropdown-item\"></a>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </nav>\n//     </div>\n//   );\n//   return <React.Fragment>{navbarDisplay}</React.Fragment>;\n// };\n\n// export default Toolbar;\n\nimport React from 'react';\nimport NavBar from '../../../components/Cockpit/Navbar/Navbar';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = props => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle clicked={props.drawerToggleClicked} />\n    <div className={classes.Logo}>\n      <Logo />\n    </div>\n    <div className={classes.DesktopOnly}>\n      {/* <NavigationItems /> */}\n      <NavBar />\n    </div>\n  </header>\n);\n\nexport default toolbar;\n"]},"metadata":{},"sourceType":"module"}
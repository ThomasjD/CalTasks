{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/src/EventItemPopover.js\";\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport Col from 'antd/lib/col';\nimport Row from 'antd/lib/row';\nimport 'antd/lib/grid/style/index.css';\n\nclass EventItemPopover extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _this$props = this.props,\n          schedulerData = _this$props.schedulerData,\n          eventItem = _this$props.eventItem,\n          title = _this$props.title,\n          startTime = _this$props.startTime,\n          endTime = _this$props.endTime,\n          statusColor = _this$props.statusColor,\n          subtitleGetter = _this$props.subtitleGetter,\n          viewEventClick = _this$props.viewEventClick,\n          viewEventText = _this$props.viewEventText,\n          viewEvent2Click = _this$props.viewEvent2Click,\n          viewEvent2Text = _this$props.viewEvent2Text,\n          eventItemPopoverTemplateResolver = _this$props.eventItemPopoverTemplateResolver;\n    const localeMoment = schedulerData.localeMoment,\n          config = schedulerData.config;\n    let start = localeMoment(startTime),\n        end = localeMoment(endTime);\n\n    if (eventItemPopoverTemplateResolver != undefined) {\n      return eventItemPopoverTemplateResolver(schedulerData, eventItem, title, start, end, statusColor);\n    } else {\n      let subtitleRow = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n\n      if (subtitleGetter !== undefined) {\n        let subtitle = subtitleGetter(schedulerData, eventItem);\n\n        if (subtitle != undefined) {\n          subtitleRow = React.createElement(Row, {\n            type: \"flex\",\n            align: \"middle\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, React.createElement(Col, {\n            span: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          })), React.createElement(Col, {\n            span: 22,\n            className: \"overflow-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"header2-text\",\n            title: subtitle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, subtitle)));\n        }\n      }\n\n      let opsRow = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n\n      if (viewEventText !== undefined && viewEventClick !== undefined && (eventItem.clickable1 == undefined || eventItem.clickable1)) {\n        let col = React.createElement(Col, {\n          span: 22,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"header2-text\",\n          style: {\n            color: '#108EE9',\n            cursor: 'pointer'\n          },\n          onClick: () => {\n            viewEventClick(schedulerData, eventItem);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, viewEventText));\n\n        if (viewEvent2Text !== undefined && viewEvent2Click !== undefined && (eventItem.clickable2 == undefined || eventItem.clickable2)) {\n          col = React.createElement(Col, {\n            span: 22,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"header2-text\",\n            style: {\n              color: '#108EE9',\n              cursor: 'pointer'\n            },\n            onClick: () => {\n              viewEventClick(schedulerData, eventItem);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, viewEventText), React.createElement(\"span\", {\n            className: \"header2-text\",\n            style: {\n              color: '#108EE9',\n              cursor: 'pointer',\n              marginLeft: '16px'\n            },\n            onClick: () => {\n              viewEvent2Click(schedulerData, eventItem);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, viewEvent2Text));\n        }\n\n        ;\n        opsRow = React.createElement(Row, {\n          type: \"flex\",\n          align: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Col, {\n          span: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        })), col);\n      } else if (viewEvent2Text !== undefined && viewEvent2Click !== undefined && (eventItem.clickable2 == undefined || eventItem.clickable2)) {\n        let col = React.createElement(Col, {\n          span: 22,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"header2-text\",\n          style: {\n            color: '#108EE9',\n            cursor: 'pointer'\n          },\n          onClick: () => {\n            viewEvent2Click(schedulerData, eventItem);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, viewEvent2Text));\n        opsRow = React.createElement(Row, {\n          type: \"flex\",\n          align: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Col, {\n          span: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        })), col);\n      }\n\n      let dateFormat = config.eventItemPopoverDateFormat;\n      return React.createElement(\"div\", {\n        style: {\n          width: '300px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        align: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status-dot\",\n        style: {\n          backgroundColor: statusColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 22,\n        className: \"overflow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header2-text\",\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, title))), subtitleRow, React.createElement(Row, {\n        type: \"flex\",\n        align: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header1-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, start.format('HH:mm')), React.createElement(\"span\", {\n        className: \"help-text\",\n        style: {\n          marginLeft: '8px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, start.format(dateFormat)), React.createElement(\"span\", {\n        className: \"header2-text\",\n        style: {\n          marginLeft: '8px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"span\", {\n        className: \"header1-text\",\n        style: {\n          marginLeft: '8px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, end.format('HH:mm')), React.createElement(\"span\", {\n        className: \"help-text\",\n        style: {\n          marginLeft: '8px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, end.format(dateFormat)))), opsRow);\n    }\n  }\n\n}\n\nEventItemPopover.propTypes = {\n  schedulerData: PropTypes.object.isRequired,\n  eventItem: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  startTime: PropTypes.string.isRequired,\n  endTime: PropTypes.string.isRequired,\n  statusColor: PropTypes.string.isRequired,\n  subtitleGetter: PropTypes.func,\n  viewEventClick: PropTypes.func,\n  viewEventText: PropTypes.string,\n  viewEvent2Click: PropTypes.func,\n  viewEvent2Text: PropTypes.string,\n  eventItemPopoverTemplateResolver: PropTypes.func\n};\nexport default EventItemPopover;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/src/EventItemPopover.js"],"names":["React","Component","PropTypes","Col","Row","EventItemPopover","constructor","props","render","schedulerData","eventItem","title","startTime","endTime","statusColor","subtitleGetter","viewEventClick","viewEventText","viewEvent2Click","viewEvent2Text","eventItemPopoverTemplateResolver","localeMoment","config","start","end","undefined","subtitleRow","subtitle","opsRow","clickable1","col","color","cursor","clickable2","marginLeft","dateFormat","eventItemPopoverDateFormat","width","backgroundColor","format","propTypes","object","isRequired","string","func"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\nimport Col from 'antd/lib/col'\r\nimport Row from 'antd/lib/row'\r\nimport 'antd/lib/grid/style/index.css'\r\n\r\nclass EventItemPopover extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    static propTypes = {\r\n        schedulerData: PropTypes.object.isRequired,\r\n        eventItem: PropTypes.object.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        startTime: PropTypes.string.isRequired,\r\n        endTime: PropTypes.string.isRequired,\r\n        statusColor: PropTypes.string.isRequired,\r\n        subtitleGetter: PropTypes.func,\r\n        viewEventClick: PropTypes.func,\r\n        viewEventText:PropTypes.string,\r\n        viewEvent2Click: PropTypes.func,\r\n        viewEvent2Text: PropTypes.string,\r\n        eventItemPopoverTemplateResolver: PropTypes.func\r\n    }\r\n\r\n    render(){\r\n        const {schedulerData, eventItem, title, startTime, endTime, statusColor,subtitleGetter, viewEventClick, viewEventText, viewEvent2Click, viewEvent2Text, eventItemPopoverTemplateResolver} = this.props;\r\n        const {localeMoment, config} = schedulerData;\r\n        let start = localeMoment(startTime), end = localeMoment(endTime);\r\n\r\n        if (eventItemPopoverTemplateResolver != undefined) {\r\n            return eventItemPopoverTemplateResolver(schedulerData, eventItem, title, start, end, statusColor);\r\n        } else {\r\n            let subtitleRow = <div />;\r\n            if(subtitleGetter !== undefined){\r\n                let subtitle = subtitleGetter(schedulerData, eventItem);\r\n                if(subtitle != undefined){\r\n                    subtitleRow = (\r\n                        <Row type=\"flex\" align=\"middle\">\r\n                            <Col span={2}>\r\n                                <div />\r\n                            </Col>\r\n                            <Col span={22} className=\"overflow-text\">\r\n                                <span className=\"header2-text\" title={subtitle}>{subtitle}</span>\r\n                            </Col>\r\n                        </Row>\r\n                    );\r\n                }\r\n            }\r\n\r\n            let opsRow = <div />;\r\n            if(viewEventText !== undefined && viewEventClick !== undefined && (eventItem.clickable1 == undefined || eventItem.clickable1)){\r\n                let col = (\r\n                    <Col span={22}>\r\n                        <span className=\"header2-text\" style={{color: '#108EE9', cursor: 'pointer'}} onClick={() => {viewEventClick(schedulerData, eventItem);}}>{viewEventText}</span>\r\n                    </Col>\r\n                );\r\n                if(viewEvent2Text !== undefined && viewEvent2Click !== undefined && (eventItem.clickable2 == undefined || eventItem.clickable2)) {\r\n                    col = (\r\n                        <Col span={22}>\r\n                            <span className=\"header2-text\" style={{color: '#108EE9', cursor: 'pointer'}} onClick={() => {viewEventClick(schedulerData, eventItem);}}>{viewEventText}</span><span className=\"header2-text\" style={{color: '#108EE9', cursor: 'pointer', marginLeft: '16px'}} onClick={() => {viewEvent2Click(schedulerData, eventItem);}}>{viewEvent2Text}</span>\r\n                        </Col>\r\n                    )\r\n                };\r\n                opsRow = (\r\n                    <Row type=\"flex\" align=\"middle\">\r\n                        <Col span={2}>\r\n                            <div />\r\n                        </Col>\r\n                        {col}\r\n                    </Row>\r\n                );\r\n            }\r\n            else if(viewEvent2Text !== undefined && viewEvent2Click !== undefined && (eventItem.clickable2 == undefined || eventItem.clickable2)) {\r\n                let col = (\r\n                    <Col span={22}>\r\n                        <span className=\"header2-text\" style={{color: '#108EE9', cursor: 'pointer'}} onClick={() => {viewEvent2Click(schedulerData, eventItem);}}>{viewEvent2Text}</span>\r\n                    </Col>\r\n                );\r\n                opsRow = (\r\n                    <Row type=\"flex\" align=\"middle\">\r\n                        <Col span={2}>\r\n                            <div />\r\n                        </Col>\r\n                        {col}\r\n                    </Row>\r\n                );\r\n            }\r\n\r\n            let dateFormat = config.eventItemPopoverDateFormat;\r\n            return (\r\n                <div style={{width: '300px'}}>\r\n                    <Row type=\"flex\" align=\"middle\">\r\n                        <Col span={2}>\r\n                            <div className=\"status-dot\" style={{backgroundColor: statusColor}} />\r\n                        </Col>\r\n                        <Col span={22} className=\"overflow-text\">\r\n                            <span className=\"header2-text\" title={title}>{title}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    {subtitleRow}\r\n                    <Row type=\"flex\" align=\"middle\">\r\n                        <Col span={2}>\r\n                            <div />\r\n                        </Col>\r\n                        <Col span={22}>\r\n                            <span className=\"header1-text\">{start.format('HH:mm')}</span><span className=\"help-text\" style={{marginLeft: '8px'}}>{start.format(dateFormat)}</span><span className=\"header2-text\"  style={{marginLeft: '8px'}}>-</span><span className=\"header1-text\" style={{marginLeft: '8px'}}>{end.format('HH:mm')}</span><span className=\"help-text\" style={{marginLeft: '8px'}}>{end.format(dateFormat)}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    {opsRow}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventItemPopover\r\n"]},"metadata":{},"sourceType":"module"}
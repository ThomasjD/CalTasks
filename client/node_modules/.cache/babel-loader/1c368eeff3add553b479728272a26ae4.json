{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/CalendarData.js\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nimport DatePicker from 'react-datepicker';\nimport numToDay from '../../components/Calendar/numToDay'; //import * as moment from 'moment';\n\nimport { format, compareAsc } from 'date-fns';\n\nclass CalendarData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showChooseDate: false,\n      days: {}\n    };\n\n    this.createDayObjName = event => {\n      event.preventDefault();\n      alert('inside createDayObjName');\n      let day = this.state.startTimeDate.day;\n      let date = this.state.startTimeDate.toLocalString;\n      console.log(date);\n    };\n\n    this.newDayObj = dayObjName => {\n      let day = {\n        unScheduledTask: [],\n        repeats: [],\n        hours: {\n          '00:00': '',\n          '00:30': '',\n          '01:00': '',\n          '01:30': '',\n          '02:00': '',\n          '02:30': '',\n          '03:00': '',\n          '03:30': '',\n          '04:00': '',\n          '04:30': '',\n          '05:00': '',\n          '05:30': '',\n          '06:00': '',\n          '06:30': '',\n          '07:00': '',\n          '08:30': '',\n          '08:00': '',\n          '08:30': '',\n          '09:00': '',\n          '09:30': '',\n          '10:00': '',\n          '10:30': '',\n          '11:00': '',\n          '11:30': '',\n          '12:00': '',\n          '12:30': '',\n          '13:00': '',\n          '13:30': '',\n          '14:00': '',\n          '14:30': '',\n          '15:00': '',\n          '15:30': '',\n          '16:00': '',\n          '16:30': '',\n          '17:00': '',\n          '17:30': '',\n          '18:00': '',\n          '18.30': '',\n          '19:00': '',\n          '19.30': '',\n          '20:00': '',\n          '20.30': '',\n          '21:00': '',\n          '21.30': '',\n          '02:00': '',\n          '22.30': '',\n          '23:00': '',\n          '23.30': '',\n          '24:00': '',\n          '24.30': ''\n        }\n      };\n\n      let currentDaysObj = _objectSpread({}, this.state.days);\n\n      let upgradeDaysObj = {};\n\n      if (currentDaysObj[dayObjName]) {\n        upgradeDaysObj = _objectSpread({}, currentDaysObj, {\n          [dayObjName]: day\n        });\n      } else {\n        let randomTask = {\n          id: '2432',\n          title: 'grocery shopping'\n        };\n\n        let currentDayObj = _objectSpread({}, this.state.days[dayObjName]);\n\n        let currentDayUnScheduledTask = currentDayObj.unScheduledTask;\n        let upgradedDayUnScheduledTask = currentDayUnScheduledTask.push(randomTask);\n\n        let upgradedDayObj = _objectSpread({}, currentDayObj, {\n          unScheduledTask: upgradedDayUnScheduledTask\n        });\n\n        this.setState({});\n      }\n    };\n\n    this.createDayObjName = () => {};\n  }\n\n  handleStartTimeDateChange(date) {\n    let currentShowStartTimeDate = this.state.showStartTimeDate;\n    let day = format(date, 'E');\n    let dateDigit = format(date, 'dd');\n    let year = format(date, 'yy');\n    let month = format(date, 'MM');\n    let dayObjName = year + month + dateDigit + day;\n    console.log(`day: ${day} type: ${typeof day}`);\n    console.log(`date: ${dateDigit} type: ${typeof dateDigit}`);\n    console.log(`year: ${year} type: ${typeof year}`);\n    console.log(`month: ${month} type: ${typeof month}`);\n    console.log(`dayObjName: ${dayObjName} type: ${typeof dayObjName}`); //dynamic keys use []\n\n    let currentDaysObj = _objectSpread({}, this.state.days, {\n      [dayObjName]: {\n        word: 'hello'\n      }\n    });\n\n    console.dir(currentDaysObj);\n    this.setState({\n      showStartTimeDate: !currentShowStartTimeDate,\n      startDate: date // startTimeDate: startTimeDate\n\n    }, () => console.log(day));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      placeholderText: \"Choose Start Time\",\n      selected: this.state.startDate,\n      onChange: date => this.handleStartTimeDateChange(date),\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 30,\n      timeCaption: \"Start\",\n      dateFormat: \"MMMM dd, yyyy\" //dateFormat=\"MMMM d, yyyy h:mm aa\"\n      //dateFormat=\"mm/dd/yyyy h:m aa\",\n      // format=\"mm/dd/yyyy\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CalendarData;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/CalendarData.js"],"names":["React","Component","RightCockpit","TasksContext","DatePicker","numToDay","format","compareAsc","CalendarData","constructor","props","state","showChooseDate","days","createDayObjName","event","preventDefault","alert","day","startTimeDate","date","toLocalString","console","log","newDayObj","dayObjName","unScheduledTask","repeats","hours","currentDaysObj","upgradeDaysObj","randomTask","id","title","currentDayObj","currentDayUnScheduledTask","upgradedDayUnScheduledTask","push","upgradedDayObj","setState","handleStartTimeDateChange","currentShowStartTimeDate","showStartTimeDate","dateDigit","year","month","word","dir","startDate","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nimport DatePicker from 'react-datepicker';\nimport numToDay from '../../components/Calendar/numToDay';\n//import * as moment from 'moment';\nimport { format, compareAsc } from 'date-fns';\nclass CalendarData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newDayObj = dayObjName => {\n      let day = {\n        unScheduledTask: [],\n        repeats: [],\n        hours: {\n          '00:00': '',\n          '00:30': '',\n          '01:00': '',\n          '01:30': '',\n          '02:00': '',\n          '02:30': '',\n          '03:00': '',\n          '03:30': '',\n          '04:00': '',\n          '04:30': '',\n          '05:00': '',\n          '05:30': '',\n          '06:00': '',\n          '06:30': '',\n          '07:00': '',\n          '08:30': '',\n          '08:00': '',\n          '08:30': '',\n          '09:00': '',\n          '09:30': '',\n          '10:00': '',\n          '10:30': '',\n          '11:00': '',\n          '11:30': '',\n          '12:00': '',\n          '12:30': '',\n          '13:00': '',\n          '13:30': '',\n          '14:00': '',\n          '14:30': '',\n          '15:00': '',\n          '15:30': '',\n          '16:00': '',\n          '16:30': '',\n          '17:00': '',\n          '17:30': '',\n          '18:00': '',\n          '18.30': '',\n          '19:00': '',\n          '19.30': '',\n          '20:00': '',\n          '20.30': '',\n          '21:00': '',\n          '21.30': '',\n          '02:00': '',\n          '22.30': '',\n          '23:00': '',\n          '23.30': '',\n          '24:00': '',\n          '24.30': ''\n        }\n      };\n      let currentDaysObj = { ...this.state.days };\n      let upgradeDaysObj = {};\n\n      if (currentDaysObj[dayObjName]) {\n        upgradeDaysObj = { ...currentDaysObj, [dayObjName]: day };\n      } else {\n        let randomTask = { id: '2432', title: 'grocery shopping' };\n        let currentDayObj = { ...this.state.days[dayObjName] };\n        let currentDayUnScheduledTask = currentDayObj.unScheduledTask;\n        let upgradedDayUnScheduledTask = currentDayUnScheduledTask.push(\n          randomTask\n        );\n        let upgradedDayObj = {\n          ...currentDayObj,\n          unScheduledTask: upgradedDayUnScheduledTask\n        };\n        this.setState({});\n      }\n    };\n\n    this.createDayObjName = () => {};\n  }\n  state = {\n    showChooseDate: false,\n    days: {}\n  };\n\n  createDayObjName = event => {\n    event.preventDefault();\n    alert('inside createDayObjName');\n    let day = this.state.startTimeDate.day;\n\n    let date = this.state.startTimeDate.toLocalString;\n    console.log(date);\n  };\n\n  handleStartTimeDateChange(date) {\n    let currentShowStartTimeDate = this.state.showStartTimeDate;\n    let day = format(date, 'E');\n    let dateDigit = format(date, 'dd');\n    let year = format(date, 'yy');\n    let month = format(date, 'MM');\n    let dayObjName = year + month + dateDigit + day;\n\n    console.log(`day: ${day} type: ${typeof day}`);\n    console.log(`date: ${dateDigit} type: ${typeof dateDigit}`);\n    console.log(`year: ${year} type: ${typeof year}`);\n    console.log(`month: ${month} type: ${typeof month}`);\n    console.log(`dayObjName: ${dayObjName} type: ${typeof dayObjName}`);\n\n    //dynamic keys use []\n    let currentDaysObj = {\n      ...this.state.days,\n      [dayObjName]: {\n        word: 'hello'\n      }\n    };\n\n    console.dir(currentDaysObj);\n\n    this.setState(\n      {\n        showStartTimeDate: !currentShowStartTimeDate,\n        startDate: date\n        // startTimeDate: startTimeDate\n      },\n      () => console.log(day)\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <DatePicker\n            placeholderText=\"Choose Start Time\"\n            selected={this.state.startDate}\n            onChange={date => this.handleStartTimeDateChange(date)}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={30}\n            timeCaption=\"Start\"\n            dateFormat=\"MMMM dd, yyyy\"\n            //dateFormat=\"MMMM d, yyyy h:mm aa\"\n            //dateFormat=\"mm/dd/yyyy h:m aa\",\n            // format=\"mm/dd/yyyy\"\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default CalendarData;\n"]},"metadata":{},"sourceType":"module"}
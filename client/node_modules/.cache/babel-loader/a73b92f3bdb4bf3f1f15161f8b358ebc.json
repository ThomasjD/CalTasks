{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Syllabus/Syllabi.js\";\nimport React, { Component } from 'react'; //import Task from './Task/Task';\n\nimport ErrorBoundary from './../../ErrorBoundary/ErrorBoundary';\nimport student from './../../../containers/Student.css';\nimport Syllabus from './Syllabus';\nimport SyllabusContext from './../../../context/syllabusContext';\n\nclass Syllabi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickToAddDelete: null\n    };\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n  //rendering current lessons headers\n  renderAllSyllabiTableHeaderHandler() {\n    //this is part of First row of table\n    let clickToAddDelete = null; // if (this.props.showLeftOverLessonsFromOrigSyllabus) {\n    //   clickToAddDelete = 'Click to schedule this lesson';\n    // } else {\n    //   clickToAddDelete = 'Click to Delete Lesson';\n    // }\n\n    let header = Object.keys(this.context.everythingSyllabus.syllabusData.lastLessonHeader); //lastLessonHeader;\n\n    return header.map((key, index) => {\n      //console.log(`this is the key: (${key}) and the index: (${index})`);\n      switch (key) {\n        case 'syllabusId':\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, \"Click To Delete\");\n          break;\n\n        case '':\n          break;\n\n        case '':\n          break;\n\n        case '':\n          break;\n      }\n\n      if (key === 'syllabusId') {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Click To Delete\");\n      } else {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, key.toUpperCase());\n      }\n    });\n  } //rendering current lessons\n\n\n  allLessonssHandler() {\n    let handlerType = null;\n\n    switch (this.props.everything.contentChoice) {\n      case '3':\n        break;\n\n      case '6':\n        this.props.showLeftOverLessonsFromOrigSyllabus ? handlerType = 'add' : handlerType = 'delete';\n        break;\n    }\n\n    return this.props.lessons.map((lesson, index) => {\n      let functionChoiceDelete = null;\n      let functionChoiceChange = null;\n\n      if (this.props.everything.contentChoice === '3') {\n        functionChoiceDelete = '3';\n        functionChoiceChange = '4';\n      } else {\n        functionChoiceDelete = '5';\n        functionChoiceChange = '6';\n      }\n\n      return React.createElement(ErrorBoundary, {\n        key: lesson.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Lesson, {\n        lesson: lesson.lesson,\n        completion: lesson.completion,\n        particularKey: lesson.id,\n        click: event => this.context.dataRequestHandler(event, 'syllabus', functionChoiceDelete, 'index', index) //changed={event => this.props.changed(event, handlerType, lesson.id)}\n        ,\n        changed: event => this.context.dataRequestHandler(event, 'syllabus', functionChoiceChange, 'id', lesson.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    });\n  } // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Tasks] getSnapshotBeforeUpdate');\n  //   return { message: 'Snapshot' };\n  // }\n  // // componentWillUpdate() {\n  // //     return\n  // // }\n  // componentDidUpdate(prevProps, prevState, message) {\n  //   console.log('[Tasks] componentDidUpdate');\n  //   console.log(message);\n  // }\n  // componentWillUnmount() {\n  //   console.log('[Tasks.js] componentWillUnmount');\n  // }\n\n\n  render() {\n    console.log('[Lessons] rendering...');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \" Syllabus\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \" contentChoice: \", this.props.everything.contentChoice), React.createElement(\"table\", {\n      id: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.renderAllLessonsTableHeaderHandler()), this.allLessonssHandler())));\n  }\n\n}\n\nSyllabi.contextType = SyllabusContext;\nexport default Lessons;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Syllabus/Syllabi.js"],"names":["React","Component","ErrorBoundary","student","Syllabus","SyllabusContext","Syllabi","constructor","props","state","clickToAddDelete","renderAllSyllabiTableHeaderHandler","header","Object","keys","context","everythingSyllabus","syllabusData","lastLessonHeader","map","key","index","toUpperCase","allLessonssHandler","handlerType","everything","contentChoice","showLeftOverLessonsFromOrigSyllabus","lessons","lesson","functionChoiceDelete","functionChoiceChange","id","completion","event","dataRequestHandler","render","console","log","renderAllLessonsTableHeaderHandler","contextType","Lessons"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAGnBC,KAHmB,GAGX;AACNC,MAAAA,gBAAgB,EAAE;AADZ,KAHW;AAElB;;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC,EAAAA,kCAAkC,GAAG;AACnC;AACA,QAAID,gBAAgB,GAAG,IAAvB,CAFmC,CAInC;AACA;AACA;AACA;AACA;;AAEA,QAAIE,MAAM,GAAGC,MAAM,CAACC,IAAP,CACX,KAAKC,OAAL,CAAaC,kBAAb,CAAgCC,YAAhC,CAA6CC,gBADlC,CAAb,CAVmC,CAanC;;AACA,WAAON,MAAM,CAACO,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChC;AAEA,cAAQD,GAAR;AACE,aAAK,YAAL;AACE,iBAAO;AAAI,YAAA,GAAG,EAAEC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACA;;AACF,aAAK,EAAL;AACE;;AACF,aAAK,EAAL;AACE;;AACF,aAAK,EAAL;AACE;AATJ;;AAWA,UAAID,GAAG,KAAK,YAAZ,EAA0B;AACxB,eAAO;AAAI,UAAA,GAAG,EAAEC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD,OAFD,MAEO;AACL,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBD,GAAG,CAACE,WAAJ,EAAjB,CAAP;AACD;AACF,KAnBM,CAAP;AAoBD,GApD6B,CAsD9B;;;AACAC,EAAAA,kBAAkB,GAAG;AACnB,QAAIC,WAAW,GAAG,IAAlB;;AAEA,YAAQ,KAAKhB,KAAL,CAAWiB,UAAX,CAAsBC,aAA9B;AACE,WAAK,GAAL;AACE;;AACF,WAAK,GAAL;AACE,aAAKlB,KAAL,CAAWmB,mCAAX,GACKH,WAAW,GAAG,KADnB,GAEKA,WAAW,GAAG,QAFnB;AAIA;AARJ;;AAWA,WAAO,KAAKhB,KAAL,CAAWoB,OAAX,CAAmBT,GAAnB,CAAuB,CAACU,MAAD,EAASR,KAAT,KAAmB;AAC/C,UAAIS,oBAAoB,GAAG,IAA3B;AACA,UAAIC,oBAAoB,GAAG,IAA3B;;AAEA,UAAI,KAAKvB,KAAL,CAAWiB,UAAX,CAAsBC,aAAtB,KAAwC,GAA5C,EAAiD;AAC/CI,QAAAA,oBAAoB,GAAG,GAAvB;AACAC,QAAAA,oBAAoB,GAAG,GAAvB;AACD,OAHD,MAGO;AACLD,QAAAA,oBAAoB,GAAG,GAAvB;AACAC,QAAAA,oBAAoB,GAAG,GAAvB;AACD;;AAED,aACE,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAEF,MAAM,CAACG,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAEH,MAAM,CAACA,MADjB;AAEE,QAAA,UAAU,EAAEA,MAAM,CAACI,UAFrB;AAGE,QAAA,aAAa,EAAEJ,MAAM,CAACG,EAHxB;AAIE,QAAA,KAAK,EAAEE,KAAK,IACV,KAAKnB,OAAL,CAAaoB,kBAAb,CACED,KADF,EAEE,UAFF,EAGEJ,oBAHF,EAIE,OAJF,EAKET,KALF,CALJ,CAaE;AAbF;AAeE,QAAA,OAAO,EAAEa,KAAK,IACZ,KAAKnB,OAAL,CAAaoB,kBAAb,CACED,KADF,EAEE,UAFF,EAGEH,oBAHF,EAIE,IAJF,EAKEF,MAAM,CAACG,EALT,CAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AA6BD,KAzCM,CAAP;AA0CD,GA/G6B,CAiH9B;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEAI,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAoB,KAAK9B,KAAL,CAAWiB,UAAX,CAAsBC,aAA1C,CAFF,EAGE;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKa,kCAAL,EAAL,CADF,EAEG,KAAKhB,kBAAL,EAFH,CADF,CAHF,CADF;AAYD;;AAlJ6B;;AAA1BjB,O,CAOGkC,W,GAAcnC,e;AA8IvB,eAAeoC,OAAf","sourcesContent":["import React, { Component } from 'react';\n//import Task from './Task/Task';\nimport ErrorBoundary from './../../ErrorBoundary/ErrorBoundary';\nimport student from './../../../containers/Student.css';\nimport Syllabus from './Syllabus';\nimport SyllabusContext from './../../../context/syllabusContext';\n\nclass Syllabi extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    clickToAddDelete: null\n  };\n  static contextType = SyllabusContext;\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n  //rendering current lessons headers\n  renderAllSyllabiTableHeaderHandler() {\n    //this is part of First row of table\n    let clickToAddDelete = null;\n\n    // if (this.props.showLeftOverLessonsFromOrigSyllabus) {\n    //   clickToAddDelete = 'Click to schedule this lesson';\n    // } else {\n    //   clickToAddDelete = 'Click to Delete Lesson';\n    // }\n\n    let header = Object.keys(\n      this.context.everythingSyllabus.syllabusData.lastLessonHeader\n    );\n    //lastLessonHeader;\n    return header.map((key, index) => {\n      //console.log(`this is the key: (${key}) and the index: (${index})`);\n\n      switch (key) {\n        case 'syllabusId':\n          return <th key={index}>Click To Delete</th>;\n          break;\n        case '':\n          break;\n        case '':\n          break;\n        case '':\n          break;\n      }\n      if (key === 'syllabusId') {\n        return <th key={index}>Click To Delete</th>;\n      } else {\n        return <th key={index}>{key.toUpperCase()}</th>;\n      }\n    });\n  }\n\n  //rendering current lessons\n  allLessonssHandler() {\n    let handlerType = null;\n\n    switch (this.props.everything.contentChoice) {\n      case '3':\n        break;\n      case '6':\n        this.props.showLeftOverLessonsFromOrigSyllabus\n          ? (handlerType = 'add')\n          : (handlerType = 'delete');\n\n        break;\n    }\n\n    return this.props.lessons.map((lesson, index) => {\n      let functionChoiceDelete = null;\n      let functionChoiceChange = null;\n\n      if (this.props.everything.contentChoice === '3') {\n        functionChoiceDelete = '3';\n        functionChoiceChange = '4';\n      } else {\n        functionChoiceDelete = '5';\n        functionChoiceChange = '6';\n      }\n\n      return (\n        <ErrorBoundary key={lesson.id}>\n          <Lesson\n            lesson={lesson.lesson}\n            completion={lesson.completion}\n            particularKey={lesson.id}\n            click={event =>\n              this.context.dataRequestHandler(\n                event,\n                'syllabus',\n                functionChoiceDelete,\n                'index',\n                index\n              )\n            }\n            //changed={event => this.props.changed(event, handlerType, lesson.id)}\n\n            changed={event =>\n              this.context.dataRequestHandler(\n                event,\n                'syllabus',\n                functionChoiceChange,\n                'id',\n                lesson.id\n              )\n            }\n          ></Lesson>\n        </ErrorBoundary>\n      );\n    });\n  }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Tasks] getSnapshotBeforeUpdate');\n  //   return { message: 'Snapshot' };\n  // }\n\n  // // componentWillUpdate() {\n  // //     return\n  // // }\n\n  // componentDidUpdate(prevProps, prevState, message) {\n  //   console.log('[Tasks] componentDidUpdate');\n  //   console.log(message);\n  // }\n\n  // componentWillUnmount() {\n  //   console.log('[Tasks.js] componentWillUnmount');\n  // }\n\n  render() {\n    console.log('[Lessons] rendering...');\n\n    return (\n      <div>\n        <h3 id=\"title\"> Syllabus</h3>\n        <p> contentChoice: {this.props.everything.contentChoice}</p>\n        <table id=\"students\">\n          <tbody>\n            <tr>{this.renderAllLessonsTableHeaderHandler()}</tr>\n            {this.allLessonssHandler()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Lessons;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar IsExtensible = require('./IsExtensible');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\n\nvar Type = require('./Type');\n\nvar ValidateAndApplyPropertyDescriptor = require('./ValidateAndApplyPropertyDescriptor'); // https://www.ecma-international.org/ecma-262/6.0/#sec-ordinarydefineownproperty\n\n\nmodule.exports = function OrdinaryDefineOwnProperty(O, P, Desc) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: O must be an Object');\n  }\n\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: P must be a Property Key');\n  }\n\n  if (!isPropertyDescriptor({\n    Type: Type,\n    IsDataDescriptor: IsDataDescriptor,\n    IsAccessorDescriptor: IsAccessorDescriptor\n  }, Desc)) {\n    throw new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n  }\n\n  var desc = $gOPD(O, P);\n  var current = desc && ToPropertyDescriptor(desc);\n  var extensible = IsExtensible(O);\n  return ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current);\n};","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/node_modules/es-abstract/2015/OrdinaryDefineOwnProperty.js"],"names":["GetIntrinsic","require","$gOPD","$TypeError","isPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsExtensible","IsPropertyKey","ToPropertyDescriptor","Type","ValidateAndApplyPropertyDescriptor","module","exports","OrdinaryDefineOwnProperty","O","P","Desc","desc","current","extensible"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAIC,KAAK,GAAGF,YAAY,CAAC,mCAAD,CAAxB;AACA,IAAIG,UAAU,GAAGH,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAII,oBAAoB,GAAGH,OAAO,CAAC,iCAAD,CAAlC;;AAEA,IAAII,oBAAoB,GAAGJ,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIK,gBAAgB,GAAGL,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIM,YAAY,GAAGN,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIO,aAAa,GAAGP,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIQ,oBAAoB,GAAGR,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIS,IAAI,GAAGT,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIU,kCAAkC,GAAGV,OAAO,CAAC,sCAAD,CAAhD,C,CAEA;;;AAEAW,MAAM,CAACC,OAAP,GAAiB,SAASC,yBAAT,CAAmCC,CAAnC,EAAsCC,CAAtC,EAAyCC,IAAzC,EAA+C;AAC/D,MAAIP,IAAI,CAACK,CAAD,CAAJ,KAAY,QAAhB,EAA0B;AACzB,UAAM,IAAIZ,UAAJ,CAAe,uCAAf,CAAN;AACA;;AACD,MAAI,CAACK,aAAa,CAACQ,CAAD,CAAlB,EAAuB;AACtB,UAAM,IAAIb,UAAJ,CAAe,4CAAf,CAAN;AACA;;AACD,MAAI,CAACC,oBAAoB,CAAC;AACzBM,IAAAA,IAAI,EAAEA,IADmB;AAEzBJ,IAAAA,gBAAgB,EAAEA,gBAFO;AAGzBD,IAAAA,oBAAoB,EAAEA;AAHG,GAAD,EAItBY,IAJsB,CAAzB,EAIU;AACT,UAAM,IAAId,UAAJ,CAAe,sDAAf,CAAN;AACA;;AACD,MAAIe,IAAI,GAAGhB,KAAK,CAACa,CAAD,EAAIC,CAAJ,CAAhB;AACA,MAAIG,OAAO,GAAGD,IAAI,IAAIT,oBAAoB,CAACS,IAAD,CAA1C;AACA,MAAIE,UAAU,GAAGb,YAAY,CAACQ,CAAD,CAA7B;AACA,SAAOJ,kCAAkC,CAACI,CAAD,EAAIC,CAAJ,EAAOI,UAAP,EAAmBH,IAAnB,EAAyBE,OAAzB,CAAzC;AACA,CAlBD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsExtensible = require('./IsExtensible');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar Type = require('./Type');\nvar ValidateAndApplyPropertyDescriptor = require('./ValidateAndApplyPropertyDescriptor');\n\n// https://www.ecma-international.org/ecma-262/6.0/#sec-ordinarydefineownproperty\n\nmodule.exports = function OrdinaryDefineOwnProperty(O, P, Desc) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: O must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t}\n\tif (!isPropertyDescriptor({\n\t\tType: Type,\n\t\tIsDataDescriptor: IsDataDescriptor,\n\t\tIsAccessorDescriptor: IsAccessorDescriptor\n\t}, Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tvar desc = $gOPD(O, P);\n\tvar current = desc && ToPropertyDescriptor(desc);\n\tvar extensible = IsExtensible(O);\n\treturn ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current);\n};\n"]},"metadata":{},"sourceType":"script"}
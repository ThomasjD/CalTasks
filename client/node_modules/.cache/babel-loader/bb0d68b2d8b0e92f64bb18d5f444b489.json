{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport Store from './Store';\nimport EventsData from './EventsData';\nimport SyllabusContext from '../../context/syllabusContext';\n\nclass Syllabus extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataBaseName: 'syllabus',\n      maxReact: [{\n        id: 'xvlwil',\n        lesson: '90. (for props Changes)',\n        completion: false\n      }, {\n        id: 'bbbskk',\n        lesson: '91. (for state Changes)',\n        completion: false\n      }, {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }],\n      maxReactWorkLeft: [{\n        lesson: '93. Controlling the useEffect() Behavior',\n        id: 'this.state.contentChoice.lesson.bind(this)',\n        completion: false\n      }, {\n        lesson: '94. Cleaning up with Lifecycle Hooks & useEffect()',\n        id: '94. Cleaning up with Lifecycle Hooks & useEffect()',\n        completion: false\n      }, {\n        lesson: '95. Cleanup Work with useEffect() - Ex',\n        id: '95. Cleanup Work with useEffect() - Ex',\n        completion: false\n      }],\n      syllabi: {\n        maxReact: {\n          //key act as name\n          syllabusId: 'maxReact',\n          name: 'Max React Full Stack',\n          category: 'programing',\n          concentration: 'fullstack',\n          subject: 'React',\n          source: 'Udemy',\n          completionStatus: false,\n          currentShowSyllabusList: false,\n          //actived from Navbar syllabus dropdown\n          lessons: [{\n            syllabusId: 'maxReact',\n            section: '7. Diving Deeper into Components & React Internals',\n            lessonId: 'xvlwil',\n            lessonNum: '90',\n            lessonName: 'For props Changes',\n            completion: false\n          }, {\n            syllabusId: 'maxReact',\n            section: '7. Diving Deeper into Components & React Internals',\n            lessonId: 'bbbskk',\n            lessonNum: '91',\n            lessonName: 'For state Changes',\n            completion: false\n          }, {\n            syllabusId: 'maxReact',\n            section: '7. Diving Deeper into Components & React Internals',\n            lessonId: 'kjhck2',\n            lessonNum: '92',\n            lessonName: 'Using useEffect() in Functional Components',\n            completion: false\n          }]\n        },\n        travestyBootStrap: {\n          syllabusId: 'travestyBootStrap',\n          name: 'Travesty BootStrap',\n          category: 'programing',\n          concentration: 'front-end',\n          subject: 'Bootstrap',\n          source: 'Udemy',\n          syllabusCompletionTime: '40 hours',\n          completionStatus: false,\n          lessons: [{\n            syllabusId: 'travestyBootStrap',\n            section: 'Section 4: Grid System & Flexbox',\n            lessonId: 'xvlwil',\n            lessonNum: '26',\n            lessonName: 'Grid System',\n            lessonCompletionTime: '',\n            completion: false\n          }, {\n            syllabusId: 'travestyBootStrap',\n            section: 'Section 4: Grid System & Flexbox',\n            lessonId: 'bbbskk',\n            lessonNum: '27',\n            lessonName: 'Grid Alignment',\n            lessonCompletionTime: '',\n            completion: false\n          }, {\n            syllabusId: 'travestyBootStrap',\n            section: 'Section 4: Grid System & Flexbox',\n            lessonId: 'kjhck2',\n            lessonNum: '28',\n            lessonName: 'Flexbox Classes',\n            lessonCompletionTime: '',\n            completion: false\n          }]\n        }\n      },\n      lastLessonHeader: [],\n      showLeftOverLessonsFromSyllabus: false,\n      TasksData: 'd'\n    };\n\n    this.assignLessonFromSyllabus = () => {\n      this.setState({\n        showLeftOverLessonsFromSyllabus: true\n      });\n\n      if (this.state.maxReact.length != 0) {\n        this.setState({\n          lastLessonHeader: this.state.maxReact[0]\n        });\n      } else {\n        this.setState({\n          lastLessonHeader: this.state.lastLessonHeader\n        });\n      }\n    };\n\n    this.deleteLessonFromOriginalSyllabusHandler = taskIndex => {\n      alert('Are you sure you want to add this lesson?');\n      let currentOriginalLessons = [...this.state.maxReactWorkLeft];\n      currentOriginalLessons.splice(taskIndex, 1);\n      this.setState({\n        maxReactWorkLeft: currentOriginalLessons\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.addLessonFromOriginalSyllabusHandler = taskIndex => {\n      let currentOriginalLessons = [...this.state.maxReactWorkLeft];\n      let lessonToAdd = currentOriginalLessons[taskIndex]; //add to maxReact the picked lesson\n\n      console.log('I am inside addNewLesonHandler');\n      let currentMaxReactSyllabus = [...this.state.maxReact];\n      currentMaxReactSyllabus.push(lessonToAdd); //currentMaxReactSyllabus.push(newLesson);\n\n      console.log(currentMaxReactSyllabus);\n      let currentShowLeftOverLessonsFromSyllabus = this.state.showLeftOverLessonsFromSyllabus; //showLeftOverLessonsFromSyllabus: !currentShowLeftOverLessonsFromSyllabus,\n      //Showing current left over Lessons from Syllabus (after addition/deletion)\n\n      this.setState({\n        maxReact: currentMaxReactSyllabus\n      }, this.deleteLessonFromOriginalSyllabusHandler(taskIndex));\n    };\n\n    this.lastLessonHeaderHandler = () => {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          if (this.state.maxReact.length != 0) {\n            this.setState({\n              lastLessonHeader: this.state.maxReact[0]\n            }, () => {\n              this.context.resetHandlerChoice(this.context.dataReceiverHandler(this.state));\n            });\n          } else {\n            this.setState({\n              lastLessonHeader: this.state.lastLessonHeader\n            }, () => {\n              this.context.resetHandlerChoice(this.context.dataReceiverHandler(this.state));\n            });\n          }\n\n          break;\n\n        case '2':\n          alert('In case 2 of lastHeader()');\n\n          if (this.state.Monday.length != 0) {\n            this.setState({\n              lastLessonHeader: this.state.Monday[0]\n            }, () => {\n              this.context.resetHandlerChoice(this.context.dataReceiverHandler(this.state));\n            });\n          } else {\n            this.setState({\n              lastLessonHeader: this.state.lastLessonHeader\n            }, () => {\n              this.context.resetHandlerChoice(this.context.dataReceiverHandler(this.state));\n            });\n          }\n\n          break;\n\n        case '6':\n          if (this.state.maxReactWorkLeft.length != 0) {\n            this.setState({\n              lastLessonHeader: this.state.maxReactWorkLeft[0]\n            }, () => {\n              this.context.resetHandlerChoice(this.context.dataReceiverHandler(this.state));\n            });\n          } else {\n            this.setState({\n              lastLessonHeader: this.state.lastLessonHeader\n            }, () => {\n              this.context.resetHandlerChoice(this.context.dataReceiverHandler(this.state));\n            });\n          }\n\n          break;\n\n        case '8':\n          let syllabusListLength = Object.keys(this.state.syllabi).length;\n          alert(syllabusListLength); // if (syllabusListLength != 0) {\n          // }else {\n          // }\n\n          break;\n      }\n    };\n\n    this.deleteLessonFromAssignedSyllabusHandler = taskIndex => {\n      let currentScheduledLessons = [...this.state.maxReact];\n      currentScheduledLessons.splice(taskIndex, 1);\n      this.setState({\n        maxReact: currentScheduledLessons\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.leftOverLessonChangeHandler = (lessonValue, taskChangeId) => {\n      const foundTaskId = this.state.maxReactWorkLeft.findIndex(currentId => {\n        return currentId.id === taskChangeId;\n      }); //createnew task item to put into array\n\n      const updatedLessons = _objectSpread({}, this.state.maxReactWorkLeft[foundTaskId]); //using updated values to define the lesson of the particular pulled out lesson\n\n\n      updatedLessons.lesson = lessonValue; //pull out of states maxReact array\n\n      const lessons = [...this.state.maxReactWorkLeft]; //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n\n      lessons[foundTaskId] = updatedLessons; //final update of lessons\n\n      this.setState({\n        maxReactWorkLeft: lessons,\n        showLeftOverLessonsFromSyllabus: true\n      }, () => this.lastLessonHeaderHandler(this.context.dataReceiverHandler(this.state)));\n    };\n\n    this.lessonChangeHandler = (lessonValue, taskChangeId) => {\n      //Find the index of the lessons that matches the id sent in\n      const foundTaskIndex = this.state.maxReact.findIndex(currentId => {\n        return currentId.id === taskChangeId;\n      }); //createnew task item to put into array\n\n      const updatedLessons = _objectSpread({}, this.state.maxReact[foundTaskIndex]); //using updated values to define the lesson of the particular pulled out lesson\n      //updatedLessons.lesson = event.target.value;\n\n\n      updatedLessons.lesson = lessonValue; //pull out of states maxReact array\n\n      const lessons = [...this.state.maxReact]; //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n\n      lessons[foundTaskIndex] = updatedLessons; //final update of lessons\n\n      this.setState({\n        maxReact: lessons\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n\n    this.showSyllabusListHandler = () => {\n      //alert('inside showSyllabusListHandler ');\n      //1st get all keys in an array\n      //2nd use keys of object to get values => name of these syllabus\n      let newShowSyllabistList = !this.state.currentShowSyllabusList;\n      this.setState({\n        currentShowSyllabusList: newShowSyllabistList\n      }, () => this.context.dataReceiverHandler(this.state));\n    };\n  }\n\n  render() {\n    //syllabusHandlerChoice\n    if (this.context.dataRequestDetails.typeOfData === 'syllabus') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          this.lastLessonHeaderHandler();\n          break;\n\n        case '2':\n          this.lastLessonHeaderHandler();\n          break;\n\n        case '3':\n          // alert(\n          //   `case 3 syllabusData for delete index:  ${this.context.dataRequestDetails['index']}`\n          // );\n          this.context.resetHandlerChoice(this.deleteLessonFromAssignedSyllabusHandler(this.context.dataRequestDetails.index));\n          break;\n\n        case '4':\n          //this.props.resetSyllabusHandlerChoice(\n          this.context.resetHandlerChoice(this.lessonChangeHandler(this.context.dataRequestDetails['value'], this.context.dataRequestDetails.id));\n          break;\n\n        case '5':\n          this.context.resetHandlerChoice(this.addLessonFromOriginalSyllabusHandler(this.context.dataRequestDetails.index));\n          break;\n\n        case '6':\n          // leftOverLessonChangeHandler;\n          //this.context.resetSyllabusHandlerChoice();\n          this.leftOverLessonChangeHandler(this.context.dataRequestDetails.value, this.context.dataRequestDetails.id);\n          break;\n\n        case '7':\n          //let index = this.props.index;\n          //this.addLessonFromOriginalSyllabusHandler(index);\n          this.context.resetHandlerChoice(this.addLessonFromOriginalSyllabusHandler(this.context.dataRequestDetails.index));\n          break;\n\n        case '8':\n          this.lastLessonHeaderHandler(); // this.context.resetHandlerChoice(this.showSyllabusListHandler());\n\n          break;\n      }\n    }\n\n    return null;\n  }\n\n}\n\nSyllabus.contextType = SyllabusContext;\nexport default Syllabus; // lessons: [\n//   {\n//     id: 'xvlwil',\n//     lesson: '90. (for props Changes)',\n//     completion: false,\n//   },\n//   {\n//     id: 'bbbskk',\n//     lesson: '91. (for state Changes)',\n//     completion: false\n//   },\n//   {\n//     id: 'kjhck2',\n//     lesson: '92. Using useEffect() in Functional Components ',\n//     completion: false\n//   }\n// ]","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/SyllabusData.js"],"names":["React","Component","RightCockpit","TasksData","Store","EventsData","SyllabusContext","Syllabus","state","dataBaseName","maxReact","id","lesson","completion","maxReactWorkLeft","syllabi","syllabusId","name","category","concentration","subject","source","completionStatus","currentShowSyllabusList","lessons","section","lessonId","lessonNum","lessonName","travestyBootStrap","syllabusCompletionTime","lessonCompletionTime","lastLessonHeader","showLeftOverLessonsFromSyllabus","assignLessonFromSyllabus","setState","length","deleteLessonFromOriginalSyllabusHandler","taskIndex","alert","currentOriginalLessons","splice","context","dataReceiverHandler","addLessonFromOriginalSyllabusHandler","lessonToAdd","console","log","currentMaxReactSyllabus","push","currentShowLeftOverLessonsFromSyllabus","lastLessonHeaderHandler","dataRequestDetails","handlerChoice","resetHandlerChoice","Monday","syllabusListLength","Object","keys","deleteLessonFromAssignedSyllabusHandler","currentScheduledLessons","leftOverLessonChangeHandler","lessonValue","taskChangeId","foundTaskId","findIndex","currentId","updatedLessons","lessonChangeHandler","foundTaskIndex","showSyllabusListHandler","newShowSyllabistList","render","typeOfData","index","value","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksData from './TasksData';\nimport Store from './Store';\nimport EventsData from './EventsData';\nimport SyllabusContext from '../../context/syllabusContext';\n\nclass Syllabus extends Component {\n  state = {\n    dataBaseName: 'syllabus',\n    maxReact: [\n      { id: 'xvlwil', lesson: '90. (for props Changes)', completion: false },\n      { id: 'bbbskk', lesson: '91. (for state Changes)', completion: false },\n      {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }\n    ],\n    maxReactWorkLeft: [\n      {\n        lesson: '93. Controlling the useEffect() Behavior',\n        id: 'this.state.contentChoice.lesson.bind(this)',\n        completion: false\n      },\n      {\n        lesson: '94. Cleaning up with Lifecycle Hooks & useEffect()',\n        id: '94. Cleaning up with Lifecycle Hooks & useEffect()',\n        completion: false\n      },\n      {\n        lesson: '95. Cleanup Work with useEffect() - Ex',\n        id: '95. Cleanup Work with useEffect() - Ex',\n        completion: false\n      }\n    ],\n\n    syllabi: {\n      maxReact: {\n        //key act as name\n        syllabusId: 'maxReact',\n        name: 'Max React Full Stack',\n        category: 'programing',\n        concentration: 'fullstack',\n        subject: 'React',\n        source: 'Udemy',\n        completionStatus: false,\n        currentShowSyllabusList: false, //actived from Navbar syllabus dropdown\n        lessons: [\n          {\n            syllabusId: 'maxReact',\n            section: '7. Diving Deeper into Components & React Internals',\n            lessonId: 'xvlwil',\n            lessonNum: '90',\n            lessonName: 'For props Changes',\n            completion: false\n          },\n          {\n            syllabusId: 'maxReact',\n            section: '7. Diving Deeper into Components & React Internals',\n            lessonId: 'bbbskk',\n            lessonNum: '91',\n            lessonName: 'For state Changes',\n            completion: false\n          },\n          {\n            syllabusId: 'maxReact',\n            section: '7. Diving Deeper into Components & React Internals',\n            lessonId: 'kjhck2',\n            lessonNum: '92',\n            lessonName: 'Using useEffect() in Functional Components',\n            completion: false\n          }\n        ]\n      },\n      travestyBootStrap: {\n        syllabusId: 'travestyBootStrap',\n        name: 'Travesty BootStrap',\n        category: 'programing',\n        concentration: 'front-end',\n        subject: 'Bootstrap',\n        source: 'Udemy',\n        syllabusCompletionTime: '40 hours',\n        completionStatus: false,\n        lessons: [\n          {\n            syllabusId: 'travestyBootStrap',\n            section: 'Section 4: Grid System & Flexbox',\n            lessonId: 'xvlwil',\n            lessonNum: '26',\n            lessonName: 'Grid System',\n            lessonCompletionTime: '',\n            completion: false\n          },\n          {\n            syllabusId: 'travestyBootStrap',\n            section: 'Section 4: Grid System & Flexbox',\n            lessonId: 'bbbskk',\n            lessonNum: '27',\n            lessonName: 'Grid Alignment',\n            lessonCompletionTime: '',\n            completion: false\n          },\n          {\n            syllabusId: 'travestyBootStrap',\n            section: 'Section 4: Grid System & Flexbox',\n            lessonId: 'kjhck2',\n            lessonNum: '28',\n            lessonName: 'Flexbox Classes',\n            lessonCompletionTime: '',\n            completion: false\n          }\n        ]\n      }\n    },\n\n    lastLessonHeader: [],\n\n    showLeftOverLessonsFromSyllabus: false,\n    TasksData: 'd'\n  };\n\n  static contextType = SyllabusContext;\n  assignLessonFromSyllabus = () => {\n    this.setState({ showLeftOverLessonsFromSyllabus: true });\n\n    if (this.state.maxReact.length != 0) {\n      this.setState({ lastLessonHeader: this.state.maxReact[0] });\n    } else {\n      this.setState({ lastLessonHeader: this.state.lastLessonHeader });\n    }\n  };\n\n  deleteLessonFromOriginalSyllabusHandler = taskIndex => {\n    alert('Are you sure you want to add this lesson?');\n\n    let currentOriginalLessons = [...this.state.maxReactWorkLeft];\n\n    currentOriginalLessons.splice(taskIndex, 1);\n\n    this.setState({ maxReactWorkLeft: currentOriginalLessons }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  addLessonFromOriginalSyllabusHandler = taskIndex => {\n    let currentOriginalLessons = [...this.state.maxReactWorkLeft];\n    let lessonToAdd = currentOriginalLessons[taskIndex];\n\n    //add to maxReact the picked lesson\n    console.log('I am inside addNewLesonHandler');\n    let currentMaxReactSyllabus = [...this.state.maxReact];\n    currentMaxReactSyllabus.push(lessonToAdd);\n\n    //currentMaxReactSyllabus.push(newLesson);\n    console.log(currentMaxReactSyllabus);\n    let currentShowLeftOverLessonsFromSyllabus = this.state\n      .showLeftOverLessonsFromSyllabus;\n    //showLeftOverLessonsFromSyllabus: !currentShowLeftOverLessonsFromSyllabus,\n    //Showing current left over Lessons from Syllabus (after addition/deletion)\n    this.setState(\n      {\n        maxReact: currentMaxReactSyllabus\n      },\n      this.deleteLessonFromOriginalSyllabusHandler(taskIndex)\n    );\n  };\n\n  lastLessonHeaderHandler = () => {\n    switch (this.context.dataRequestDetails.handlerChoice) {\n      case '1':\n        if (this.state.maxReact.length != 0) {\n          this.setState(\n            { lastLessonHeader: this.state.maxReact[0] },\n\n            () => {\n              this.context.resetHandlerChoice(\n                this.context.dataReceiverHandler(this.state)\n              );\n            }\n          );\n        } else {\n          this.setState(\n            { lastLessonHeader: this.state.lastLessonHeader },\n\n            () => {\n              this.context.resetHandlerChoice(\n                this.context.dataReceiverHandler(this.state)\n              );\n            }\n          );\n        }\n\n        break;\n\n      case '2':\n        alert('In case 2 of lastHeader()');\n        if (this.state.Monday.length != 0) {\n          this.setState(\n            { lastLessonHeader: this.state.Monday[0] },\n\n            () => {\n              this.context.resetHandlerChoice(\n                this.context.dataReceiverHandler(this.state)\n              );\n            }\n          );\n        } else {\n          this.setState(\n            { lastLessonHeader: this.state.lastLessonHeader },\n\n            () => {\n              this.context.resetHandlerChoice(\n                this.context.dataReceiverHandler(this.state)\n              );\n            }\n          );\n        }\n        break;\n\n      case '6':\n        if (this.state.maxReactWorkLeft.length != 0) {\n          this.setState(\n            {\n              lastLessonHeader: this.state.maxReactWorkLeft[0]\n            },\n\n            () => {\n              this.context.resetHandlerChoice(\n                this.context.dataReceiverHandler(this.state)\n              );\n            }\n          );\n        } else {\n          this.setState(\n            { lastLessonHeader: this.state.lastLessonHeader },\n\n            () => {\n              this.context.resetHandlerChoice(\n                this.context.dataReceiverHandler(this.state)\n              );\n            }\n          );\n        }\n        break;\n      case '8':\n        let syllabusListLength = Object.keys(this.state.syllabi).length;\n        alert(syllabusListLength);\n        // if (syllabusListLength != 0) {\n\n        // }else {\n\n        // }\n        break;\n    }\n  };\n\n  deleteLessonFromAssignedSyllabusHandler = taskIndex => {\n    let currentScheduledLessons = [...this.state.maxReact];\n    currentScheduledLessons.splice(taskIndex, 1);\n    this.setState({ maxReact: currentScheduledLessons }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  leftOverLessonChangeHandler = (lessonValue, taskChangeId) => {\n    const foundTaskId = this.state.maxReactWorkLeft.findIndex(currentId => {\n      return currentId.id === taskChangeId;\n    });\n\n    //createnew task item to put into array\n    const updatedLessons = { ...this.state.maxReactWorkLeft[foundTaskId] };\n\n    //using updated values to define the lesson of the particular pulled out lesson\n    updatedLessons.lesson = lessonValue;\n\n    //pull out of states maxReact array\n    const lessons = [...this.state.maxReactWorkLeft];\n\n    //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n    lessons[foundTaskId] = updatedLessons;\n\n    //final update of lessons\n    this.setState(\n      { maxReactWorkLeft: lessons, showLeftOverLessonsFromSyllabus: true },\n      () =>\n        this.lastLessonHeaderHandler(\n          this.context.dataReceiverHandler(this.state)\n        )\n    );\n  };\n\n  lessonChangeHandler = (lessonValue, taskChangeId) => {\n    //Find the index of the lessons that matches the id sent in\n    const foundTaskIndex = this.state.maxReact.findIndex(currentId => {\n      return currentId.id === taskChangeId;\n    });\n\n    //createnew task item to put into array\n    const updatedLessons = { ...this.state.maxReact[foundTaskIndex] };\n\n    //using updated values to define the lesson of the particular pulled out lesson\n    //updatedLessons.lesson = event.target.value;\n    updatedLessons.lesson = lessonValue;\n\n    //pull out of states maxReact array\n    const lessons = [...this.state.maxReact];\n\n    //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n    lessons[foundTaskIndex] = updatedLessons;\n\n    //final update of lessons\n    this.setState({ maxReact: lessons }, () =>\n      this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  showSyllabusListHandler = () => {\n    //alert('inside showSyllabusListHandler ');\n    //1st get all keys in an array\n    //2nd use keys of object to get values => name of these syllabus\n\n    let newShowSyllabistList = !this.state.currentShowSyllabusList;\n    this.setState(\n      {\n        currentShowSyllabusList: newShowSyllabistList\n      },\n      () => this.context.dataReceiverHandler(this.state)\n    );\n  };\n\n  render() {\n    //syllabusHandlerChoice\n    if (this.context.dataRequestDetails.typeOfData === 'syllabus') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          this.lastLessonHeaderHandler();\n\n          break;\n\n        case '2':\n          this.lastLessonHeaderHandler();\n          break;\n\n        case '3':\n          // alert(\n          //   `case 3 syllabusData for delete index:  ${this.context.dataRequestDetails['index']}`\n          // );\n          this.context.resetHandlerChoice(\n            this.deleteLessonFromAssignedSyllabusHandler(\n              this.context.dataRequestDetails.index\n            )\n          );\n          break;\n\n        case '4':\n          //this.props.resetSyllabusHandlerChoice(\n\n          this.context.resetHandlerChoice(\n            this.lessonChangeHandler(\n              this.context.dataRequestDetails['value'],\n              this.context.dataRequestDetails.id\n            )\n          );\n          break;\n\n        case '5':\n          this.context.resetHandlerChoice(\n            this.addLessonFromOriginalSyllabusHandler(\n              this.context.dataRequestDetails.index\n            )\n          );\n\n          break;\n\n        case '6':\n          // leftOverLessonChangeHandler;\n          //this.context.resetSyllabusHandlerChoice();\n\n          this.leftOverLessonChangeHandler(\n            this.context.dataRequestDetails.value,\n            this.context.dataRequestDetails.id\n          );\n\n          break;\n\n        case '7':\n          //let index = this.props.index;\n          //this.addLessonFromOriginalSyllabusHandler(index);\n          this.context.resetHandlerChoice(\n            this.addLessonFromOriginalSyllabusHandler(\n              this.context.dataRequestDetails.index\n            )\n          );\n\n          break;\n        case '8':\n          this.lastLessonHeaderHandler();\n\n          // this.context.resetHandlerChoice(this.showSyllabusListHandler());\n\n          break;\n      }\n    }\n\n    return null;\n  }\n}\n\nexport default Syllabus;\n// lessons: [\n//   {\n//     id: 'xvlwil',\n//     lesson: '90. (for props Changes)',\n//     completion: false,\n\n//   },\n//   {\n//     id: 'bbbskk',\n//     lesson: '91. (for state Changes)',\n//     completion: false\n//   },\n//   {\n//     id: 'kjhck2',\n//     lesson: '92. Using useEffect() in Functional Components ',\n//     completion: false\n//   }\n// ]\n"]},"metadata":{},"sourceType":"module"}
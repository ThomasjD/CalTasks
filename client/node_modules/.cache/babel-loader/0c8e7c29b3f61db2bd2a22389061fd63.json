{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Cockpit/displayContent.js\";\nimport React, { useContext } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from './Cockpit';\nimport Cockpit2 from './Cockpit2';\nimport Navbar2 from './Navbar/Navbar2';\nimport Tasks from '../ViewContent/Tasks/Tasks';\nimport TodayTasks from '../ViewContent/TodayTasks/TodayTasks';\nimport Lessons from '../ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContentOptions';\nimport NewTask from '../Creation/newTask';\nimport NewEvent from '../Creation/NewEvent';\nimport NewSyllabus from '../Creation/newSyllabus';\nimport SyllabusContext from '../../context/syllabusContext';\n\nconst displayContent = props => {\n  const syllabusContext = useContext(SyllabusContext);\n  let displayContent = null; //static contextType = SyllabusContext;\n\n  switch (props.everything.contentChoice) {\n    case '0':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Hello Thomas.... What would you like to see?\"), React.createElement(\"img\", {\n        className: classes.logoImage,\n        src: require('../../Assets/cockpitIcon.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n      break;\n\n    case '1':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"tasks\\xA0has\\xA0#\\xA0\", props.everything.tasks.length), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Tasks, {\n        reRenderTasks: props.everything.reRenderTasks,\n        tasks: props.everything.tasks,\n        clicked: props.deleteTaskhandler,\n        changed: props.taskChangeHandler,\n        lastHeader: props.everything.lastHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '2':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(TodayTasks, {\n        reRenderTodayTasks: props.everything.reRenderTodayTasks,\n        monday: props.everything.Monday //clicked={props.deleteTodayTaskhandler}\n        ,\n        clicked: props.deleteTaskhandler,\n        changed: props.todayTaskChangeHandler,\n        lastTodayTasksHeader: props.everything.lastTodayTasksHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '3':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, props.everythingSyllabus.syllabusData ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"tasks has #\", ' ', props.everythingSyllabus.syllabusData.maxReact.length), React.createElement(Lessons, {\n        everything: props.everything,\n        lessons: props.everythingSyllabus.syllabusData.maxReact,\n        changed: props.lessonChangeHandler,\n        lastLessonHeader: props.everythingSyllabus.syllabusData.lastLessonHeader,\n        lessonsLength: props.everythingSyllabus.maxReact.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })) : null);\n      /*\n      clicked={(event, index, handlerType) =>\n                  props.deleteLessonHandler(event, index, handlerType)\n                }\n      */\n\n      break;\n\n    case '4':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(NewTask, {\n        newestTask: props.newestTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n      break;\n\n    case '5':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(NewEvent, {\n        newestEvent: props.newestEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n      break;\n    //showLeftOverLessonsFromSyllabus: for Table Header (add/delete this lesson message)\n\n    case '6':\n      // while (!props.everythingSyllabus.syllabusData) {\n      //   console.log('still waiting');\n      //}\n      // function waitTillTrue() {\n      //   if (props.everythingSyllabus.syllabusData) {\n      //     console.log(props.everythingSyllabus.syllabusData.lastLessonHeader);\n      //   } else {\n      //     setTimeout(waitTillTrue, 900);\n      //   }\n      // }\n      if (props.everythingSyllabus.syllabusData) {\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(NewSyllabus, {\n          newestSyllabus: props.newestSyllabus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }), props.everythingSyllabus.syllabusData.showLeftOverLessonsFromSyllabus ? React.createElement(Lessons, {\n          everything: props.everything,\n          showLeftOverLessonsFromOrigSyllabus: props.everythingSyllabus.syllabusData.showLeftOverLessonsFromSyllabus,\n          lessons: props.everythingSyllabus.syllabusData.maxReactWorkLeft,\n          changed: (event, handlerType, id) => props.leftOverLessonChangeHandler(event, handlerType, id),\n          lastLessonHeader: props.everythingSyllabus.syllabusData.lastLessonHeader,\n          lessonsLength: props.everythingSyllabus.syllabusData.maxReactWorkLeft.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }) : null);\n      }\n      /*\n      clicked={(event, index) =>\n                  props.addLessonFromOriginalSyllabusHandler(event, index)\n                }\n       */\n\n\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, displayContent);\n};\n\nexport default displayContent;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Cockpit/displayContent.js"],"names":["React","useContext","classes","Cockpit","Cockpit2","Navbar2","Tasks","TodayTasks","Lessons","ViewContent","NewTask","NewEvent","NewSyllabus","SyllabusContext","displayContent","props","syllabusContext","everything","contentChoice","logoImage","require","tasks","length","reRenderTasks","deleteTaskhandler","taskChangeHandler","lastHeader","reRenderTodayTasks","Monday","todayTaskChangeHandler","lastTodayTasksHeader","everythingSyllabus","syllabusData","maxReact","lessonChangeHandler","lastLessonHeader","newestTask","newestEvent","newestSyllabus","showLeftOverLessonsFromSyllabus","maxReactWorkLeft","event","handlerType","id","leftOverLessonChangeHandler"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from './Cockpit';\nimport Cockpit2 from './Cockpit2';\nimport Navbar2 from './Navbar/Navbar2';\nimport Tasks from '../ViewContent/Tasks/Tasks';\nimport TodayTasks from '../ViewContent/TodayTasks/TodayTasks';\nimport Lessons from '../ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContentOptions';\nimport NewTask from '../Creation/newTask';\nimport NewEvent from '../Creation/NewEvent';\nimport NewSyllabus from '../Creation/newSyllabus';\nimport SyllabusContext from '../../context/syllabusContext';\n\nconst displayContent = props => {\n  const syllabusContext = useContext(SyllabusContext);\n  let displayContent = null;\n  //static contextType = SyllabusContext;\n  switch (props.everything.contentChoice) {\n    case '0':\n      displayContent = (\n        <React.Fragment>\n          <h3>Hello Thomas.... What would you like to see?</h3>\n          <img\n            className={classes.logoImage}\n            src={require('../../Assets/cockpitIcon.png')}\n          />\n        </React.Fragment>\n      );\n      break;\n\n    case '1':\n      displayContent = (\n        <React.Fragment>\n          <p>tasks has # {props.everything.tasks.length}</p>\n                      \n          <Tasks\n            reRenderTasks={props.everything.reRenderTasks}\n            tasks={props.everything.tasks}\n            clicked={props.deleteTaskhandler}\n            changed={props.taskChangeHandler}\n            lastHeader={props.everything.lastHeader}\n          />\n                    \n        </React.Fragment>\n      );\n      break;\n\n    case '2':\n      displayContent = (\n        <React.Fragment>\n                      \n          <TodayTasks\n            reRenderTodayTasks={props.everything.reRenderTodayTasks}\n            monday={props.everything.Monday}\n            //clicked={props.deleteTodayTaskhandler}\n            clicked={props.deleteTaskhandler}\n            changed={props.todayTaskChangeHandler}\n            lastTodayTasksHeader={props.everything.lastTodayTasksHeader}\n          />\n                    \n        </React.Fragment>\n      );\n      break;\n\n    case '3':\n      displayContent = (\n        <React.Fragment>\n          {props.everythingSyllabus.syllabusData ? (\n            <div>\n              <p>\n                tasks has #{' '}\n                {props.everythingSyllabus.syllabusData.maxReact.length}\n              </p>\n\n              <Lessons\n                everything={props.everything}\n                lessons={props.everythingSyllabus.syllabusData.maxReact}\n                changed={props.lessonChangeHandler}\n                lastLessonHeader={\n                  props.everythingSyllabus.syllabusData.lastLessonHeader\n                }\n                lessonsLength={props.everythingSyllabus.maxReact.length}\n              />\n            </div>\n          ) : null}\n        </React.Fragment>\n      );\n      /*\n      clicked={(event, index, handlerType) =>\n                  props.deleteLessonHandler(event, index, handlerType)\n                }\n      */\n\n      break;\n    case '4':\n      displayContent = (\n        <React.Fragment>\n          <NewTask newestTask={props.newestTask} />\n        </React.Fragment>\n      );\n      break;\n    case '5':\n      displayContent = (\n        <React.Fragment>\n          <NewEvent newestEvent={props.newestEvent} />\n        </React.Fragment>\n      );\n      break;\n    //showLeftOverLessonsFromSyllabus: for Table Header (add/delete this lesson message)\n\n    case '6':\n      // while (!props.everythingSyllabus.syllabusData) {\n      //   console.log('still waiting');\n      //}\n      // function waitTillTrue() {\n      //   if (props.everythingSyllabus.syllabusData) {\n      //     console.log(props.everythingSyllabus.syllabusData.lastLessonHeader);\n      //   } else {\n      //     setTimeout(waitTillTrue, 900);\n      //   }\n      // }\n\n      if (props.everythingSyllabus.syllabusData) {\n        displayContent = (\n          <React.Fragment>\n            <NewSyllabus newestSyllabus={props.newestSyllabus} />\n\n            {props.everythingSyllabus.syllabusData\n              .showLeftOverLessonsFromSyllabus ? (\n              <Lessons\n                everything={props.everything}\n                showLeftOverLessonsFromOrigSyllabus={\n                  props.everythingSyllabus.syllabusData\n                    .showLeftOverLessonsFromSyllabus\n                }\n                lessons={props.everythingSyllabus.syllabusData.maxReactWorkLeft}\n                changed={(event, handlerType, id) =>\n                  props.leftOverLessonChangeHandler(event, handlerType, id)\n                }\n                lastLessonHeader={\n                  props.everythingSyllabus.syllabusData.lastLessonHeader\n                }\n                lessonsLength={\n                  props.everythingSyllabus.syllabusData.maxReactWorkLeft.length\n                }\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      }\n      /*\n      clicked={(event, index) =>\n                  props.addLessonFromOriginalSyllabusHandler(event, index)\n                }\n\n      */\n      break;\n  }\n\n  return <div>{displayContent}</div>;\n};\n\nexport default displayContent;\n"]},"metadata":{},"sourceType":"module"}
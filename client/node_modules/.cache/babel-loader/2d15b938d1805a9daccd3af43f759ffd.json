{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Syllabus/Syllabi.js\";\nimport React, { Component } from 'react'; //import Task from './Task/Task';\n\nimport ErrorBoundary from './../../ErrorBoundary/ErrorBoundary';\nimport student from './../../../containers/Student.css';\nimport Syllabus from './Syllabus';\nimport SyllabusContext from './../../../context/syllabusContext';\n\nclass Syllabi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickToAddDelete: null\n    };\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n  //rendering current lessons headers\n  renderAllSyllabiTableHeaderHandler() {\n    //alert('inside syllabi renderAllSyllabiTableHeaderHandler()');\n    //this is part of First row of table\n    let clickToAddDelete = null; // if (this.props.showLeftOverLessonsFromOrigSyllabus) {\n    //   clickToAddDelete = 'Click to schedule this lesson';\n    // } else {\n    //   clickToAddDelete = 'Click to Delete Lesson';\n    // }\n\n    if (this.context.everythingSyllabus.syllabusData.currentShowSyllabusList === true) {\n      let header = this.context.everythingSyllabus.syllabusData.syllabusHeaders; //lastLessonHeader;\n\n      return header.map((key, index) => {\n        //console.log(`this is the key: (${key}) and the index: (${index})`);\n        switch (key) {\n          case 'syllabusId':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47\n              },\n              __self: this\n            }, \"Click To Delete\");\n            break;\n\n          case 'name':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n\n          case 'category':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n\n          case 'concentration':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n\n          case 'subject':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n\n          case 'source':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, key.toUpperCase());\n            break;\n\n          case 'syllabusCompletionTime':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, \"Required Hours\");\n            break;\n\n          case 'completionStatus':\n            return React.createElement(\"th\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68\n              },\n              __self: this\n            }, \"Completion Status\");\n            break;\n        }\n      });\n    }\n  } //rendering current lessons\n\n\n  allSyllabiHandler() {\n    let arraySyllabi = null;\n    let displaySyllabiInfo = null;\n\n    if (this.context.everythingSyllabus.syllabusData) {\n      //[ key1, key2, key3] //name of syllabus obj\n      let info = Object.keys(this.context.everythingSyllabus.syllabusData.syllabi).map(syllabusKey => {\n        //syllabus = keys => get value  =\n        //alert(this.context.everythingSyllabus.syllabusData.syllabi[syllabus]);\n        //for every key: value (obj of that syllabus)\n        // alert(\n        //   JSON.stringify(\n        //     this.context.everythingSyllabus.syllabusData.syllabi[syllabusKey]\n        //   )\n        // );\n        //array of syllabus object\n        return this.context.everythingSyllabus.syllabusData.syllabi[syllabusKey];\n      });\n      console.log(info); //For each syllabi obj\n\n      let insideSyllabus = info.map((key, index) => {//alert(`syllabus: ${key.name} index: ${key.syllabusCompletionTime}`);\n      });\n      console.log(insideSyllabus); //alert(JSON.stringify(insideSyllabus));\n    }\n  } // ].map((syllabus, index) => {\n  //   return <Syllabus syllabus={syllabus} index={index} />;\n  // });\n  // return (\n  //   <ErrorBoundary key={syllabus.id}>\n  //     <Syllabus></Syllabus>\n  //   </ErrorBoundary>\n  // );\n  // })}\n  //\n  // switch (this.props.everything.contentChoice) {\n  //   case '3':\n  //     break;\n  //   case '6':\n  //     this.props.showLeftOverLessonsFromOrigSyllabus\n  //       ? (handlerType = 'add')\n  //       : (handlerType = 'delete');\n  //     break;\n  // }\n  //lessons = maxREact = [ {}, {}, {}]\n  //syllabi = syllabi = { {}, {}, }\n  // return this.context.everythingSyllabus.syllabusData.syllabi.map(\n  //   (syllabus, index) => {\n  //   let functionChoiceDelete = null;\n  //   let functionChoiceChange = null;\n  //   if (this.props.everything.contentChoice === '3') {\n  //     functionChoiceDelete = '3';\n  //     functionChoiceChange = '4';\n  //   } else {\n  //     functionChoiceDelete = '5';\n  //     functionChoiceChange = '6';\n  //   }\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Tasks] getSnapshotBeforeUpdate');\n  //   return { message: 'Snapshot' };\n  // }\n  // // componentWillUpdate() {\n  // //     return\n  // // }\n  // componentDidUpdate(prevProps, prevState, message) {\n  //   console.log('[Tasks] componentDidUpdate');\n  //   console.log(message);\n  // }\n  // componentWillUnmount() {\n  //   console.log('[Tasks.js] componentWillUnmount');\n  // }\n\n\n  render() {\n    //alert('inside syllabi render()');\n    console.log('[allSyllabus] rendering...'); //<p> contentChoice: {this.props.everything.contentChoice}</p>\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \" Syllabi\"), React.createElement(\"table\", {\n      id: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.renderAllSyllabiTableHeaderHandler()), this.allSyllabiHandler())));\n  }\n\n}\n\nSyllabi.contextType = SyllabusContext;\nexport default Syllabi;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Syllabus/Syllabi.js"],"names":["React","Component","ErrorBoundary","student","Syllabus","SyllabusContext","Syllabi","constructor","props","state","clickToAddDelete","renderAllSyllabiTableHeaderHandler","context","everythingSyllabus","syllabusData","currentShowSyllabusList","header","syllabusHeaders","map","key","index","toUpperCase","allSyllabiHandler","arraySyllabi","displaySyllabiInfo","info","Object","keys","syllabi","syllabusKey","console","log","insideSyllabus","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Task from './Task/Task';\nimport ErrorBoundary from './../../ErrorBoundary/ErrorBoundary';\nimport student from './../../../containers/Student.css';\nimport Syllabus from './Syllabus';\nimport SyllabusContext from './../../../context/syllabusContext';\n\nclass Syllabi extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    clickToAddDelete: null\n  };\n  static contextType = SyllabusContext;\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n  //rendering current lessons headers\n  renderAllSyllabiTableHeaderHandler() {\n    //alert('inside syllabi renderAllSyllabiTableHeaderHandler()');\n    //this is part of First row of table\n    let clickToAddDelete = null;\n\n    // if (this.props.showLeftOverLessonsFromOrigSyllabus) {\n    //   clickToAddDelete = 'Click to schedule this lesson';\n    // } else {\n    //   clickToAddDelete = 'Click to Delete Lesson';\n    // }\n    if (\n      this.context.everythingSyllabus.syllabusData.currentShowSyllabusList ===\n      true\n    ) {\n      let header = this.context.everythingSyllabus.syllabusData.syllabusHeaders;\n      //lastLessonHeader;\n      return header.map((key, index) => {\n        //console.log(`this is the key: (${key}) and the index: (${index})`);\n\n        switch (key) {\n          case 'syllabusId':\n            return <th key={index}>Click To Delete</th>;\n            break;\n          case 'name':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n          case 'category':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n          case 'concentration':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n          case 'subject':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n          case 'source':\n            return <th key={index}>{key.toUpperCase()}</th>;\n            break;\n          case 'syllabusCompletionTime':\n            return <th key={index}>Required Hours</th>;\n            break;\n          case 'completionStatus':\n            return <th key={index}>Completion Status</th>;\n            break;\n        }\n      });\n    }\n  }\n\n  //rendering current lessons\n  allSyllabiHandler() {\n    let arraySyllabi = null;\n    let displaySyllabiInfo = null;\n    if (this.context.everythingSyllabus.syllabusData) {\n      //[ key1, key2, key3] //name of syllabus obj\n      let info = Object.keys(\n        this.context.everythingSyllabus.syllabusData.syllabi\n      ).map(syllabusKey => {\n        //syllabus = keys => get value  =\n        //alert(this.context.everythingSyllabus.syllabusData.syllabi[syllabus]);\n\n        //for every key: value (obj of that syllabus)\n        // alert(\n        //   JSON.stringify(\n        //     this.context.everythingSyllabus.syllabusData.syllabi[syllabusKey]\n        //   )\n        // );\n        //array of syllabus object\n        return this.context.everythingSyllabus.syllabusData.syllabi[\n          syllabusKey\n        ];\n      });\n\n      console.log(info);\n      //For each syllabi obj\n      let insideSyllabus = info.map((key, index) => {\n        //alert(`syllabus: ${key.name} index: ${key.syllabusCompletionTime}`);\n      });\n      console.log(insideSyllabus);\n      //alert(JSON.stringify(insideSyllabus));\n    }\n  }\n  // ].map((syllabus, index) => {\n  //   return <Syllabus syllabus={syllabus} index={index} />;\n  // });\n  // return (\n  //   <ErrorBoundary key={syllabus.id}>\n  //     <Syllabus></Syllabus>\n  //   </ErrorBoundary>\n  // );\n  // })}\n\n  //\n\n  // switch (this.props.everything.contentChoice) {\n  //   case '3':\n  //     break;\n  //   case '6':\n  //     this.props.showLeftOverLessonsFromOrigSyllabus\n  //       ? (handlerType = 'add')\n  //       : (handlerType = 'delete');\n\n  //     break;\n  // }\n\n  //lessons = maxREact = [ {}, {}, {}]\n  //syllabi = syllabi = { {}, {}, }\n  // return this.context.everythingSyllabus.syllabusData.syllabi.map(\n  //   (syllabus, index) => {\n  //   let functionChoiceDelete = null;\n  //   let functionChoiceChange = null;\n\n  //   if (this.props.everything.contentChoice === '3') {\n  //     functionChoiceDelete = '3';\n  //     functionChoiceChange = '4';\n  //   } else {\n  //     functionChoiceDelete = '5';\n  //     functionChoiceChange = '6';\n  //   }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Tasks] getSnapshotBeforeUpdate');\n  //   return { message: 'Snapshot' };\n  // }\n\n  // // componentWillUpdate() {\n  // //     return\n  // // }\n\n  // componentDidUpdate(prevProps, prevState, message) {\n  //   console.log('[Tasks] componentDidUpdate');\n  //   console.log(message);\n  // }\n\n  // componentWillUnmount() {\n  //   console.log('[Tasks.js] componentWillUnmount');\n  // }\n\n  render() {\n    //alert('inside syllabi render()');\n    console.log('[allSyllabus] rendering...');\n    //<p> contentChoice: {this.props.everything.contentChoice}</p>\n    return (\n      <div>\n        <h3 id=\"title\"> Syllabi</h3>\n\n        <table id=\"students\">\n          <tbody>\n            <tr>{this.renderAllSyllabiTableHeaderHandler()}</tr>\n            {this.allSyllabiHandler()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Syllabi;\n"]},"metadata":{},"sourceType":"module"}
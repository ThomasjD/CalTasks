{"ast":null,"code":"import _slicedToArray from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/Navbar/Navbar.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport SyllabusContext from '../../../context/syllabusContext';\nimport TasksContext from '../../../context/tasksContext'; //import App from '../../containers/App';\n\nimport App from '../../../containers/App';\nimport classes from '../Cockpit.module.css';\nimport classNames from 'classnames';\nimport NewTask from '../../Creation/newTask';\nimport NewSyllabus from '../../Creation/newSyllabus';\nimport SyllabiList from '../../ViewContent/Syllabus/SyllabiList';\n\nconst Navbar = props => {\n  const _useState = useState({\n    showNewTaskForm: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        newTaskState = _useState2[0],\n        setTaskState = _useState2[1];\n\n  const syllabusContext = useContext(SyllabusContext);\n  const tasksContext = useContext(TasksContext);\n\n  const requestDataHandler = event => {\n    contentchoice = event.target.value;\n\n    switch (contentchoice) {\n      case '1':\n        contentViewObject = {\n          target: {\n            value: '1'\n          }\n        };\n        break;\n\n      case '':\n        break;\n    }\n\n    let contentViewObject = {\n      target: {\n        value: '1'\n      }\n    }; // dataRequestMessage = {\n    //   typeOfData: 'syllabus',\n    //   handlerChoice: '11',\n    //   dataLocation: event.target.value,\n    //   infoType: 'triggerShowSyllabus',\n    //   info: ''\n    // };\n    // syllabusContext.dataRequestHandler(event, dataRequestMessage);\n    // let newContentChoice = event.target.value;\n\n    props.contentViewHandler(contentViewObject);\n  };\n\n  const pickedSyllabusRequestHandler = event => {\n    //let dayPicked = event.target.value;\n    //event\n    let dataRequestMessage = null;\n\n    if (event.target.value === 'showSyllabiList') {\n      dataRequestMessage = {\n        typeOfData: 'syllabus',\n        handlerChoice: '18',\n        dataLocation: null,\n        infoType: 'triggerShowSyllabus',\n        info: ''\n      };\n      tasksContext.dataRequestHandler(event, dataRequestMessage);\n    } else {\n      // alert(\n      //   `inside pickedSyllabusRequestHandler value from onClick: ${event.target.value}`\n      // );\n      dataRequestMessage = {\n        typeOfData: 'syllabus',\n        handlerChoice: '11',\n        dataLocation: event.target.value,\n        infoType: 'triggerShowSyllabus',\n        info: ''\n      };\n      syllabusContext.dataRequestHandler(event, dataRequestMessage); // let newContentChoice = event.target.value;\n\n      let contentViewObject = {\n        target: {\n          value: '10'\n        }\n      };\n      props.contentViewHandler(contentViewObject);\n    } //tasksContext.contentViewHandler(3)\n\n  };\n\n  const processSyllabiList = () => {\n    return Object.keys(syllabusContext.everythingSyllabus.syllabusData.syllabi).map((syllabus, index) => {\n      //alert(`inside const ViewContentOptions\n      //  props.syllabusName ${syllabusContext.everythingSyllabus.syllabusData.syllabi[syllabus].syllabusId}`);\n      return React.createElement(React.Fragment, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(SyllabiList, {\n        click: event => pickedSyllabusRequestHandler(event),\n        syllabusId: syllabusContext.everythingSyllabus.syllabusData.syllabi[syllabus].syllabusId,\n        value: syllabusContext.everythingSyllabus.syllabusData.syllabi[syllabus].syllabusId,\n        index: index,\n        syllabusName: syllabusContext.everythingSyllabus.syllabusData.syllabi[syllabus].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    });\n  };\n\n  useEffect(() => {\n    console.log('[Cockpit.js] useffect'); //getting rid of timer\n    // const timer = setTimeout(() => {\n    //   alert('Delete Cockpit timer alert');\n    // }, 100);\n\n    return () => {\n      //clearTimeout(timer);\n      console.log('[Cockpit.js] cleanup work in useEffect');\n    };\n  }, []);\n\n  const newTaskHandler = () => {\n    let currentShowNewTaskForm = newTaskState.showNewTaskForm;\n    console.log('inside newTaskHandler()');\n    setTaskState({\n      showNewTaskForm: !currentShowNewTaskForm\n    });\n  };\n\n  const _useState3 = useState({\n    newTaskTitle: '',\n    newTaskCategory: '' // newTaskDescription: '',\n    // newTaskTime: '',\n    // newTaskestimatedDuration: '' //estimation\n\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newTaskInfoState = _useState4[0],\n        setTaskInfoState = _useState4[1]; //notify new title changed - set up new state\n\n\n  const newSetTaskInfoState = event => {\n    console.log('inside newTaskFormHandler()');\n    setTaskInfoState({\n      newTaskTitle: event.target.value,\n      newTaskCategory: newTaskInfoState.newTaskCategory\n    });\n  }; //notify new category changed - set up new state\n\n\n  const newSetTaskCategoryState = event => {\n    console.log('inside newSetTaskCategoryState()');\n    setTaskInfoState({\n      newTaskTitle: newTaskInfoState.newTaskTitle,\n      newTaskCategory: event.target.value\n    });\n  }; // const newSetTaskCategoryState = event => {\n  //   console.log('inside newSetTaskCategoryState()');\n  //   setTaskInfoState({\n  //     newTaskTitle: newTaskInfoState.newTaskTitle,\n  //     newTaskCategory: newTaskInfoState.newTaskCategory\n  //   });\n  // };\n  //const newTaskDisplay = <NewTask />;\n\n\n  const navbarDisplay = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"navbar navbar-expand-sm navbar-light bg-light mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: props.deleteCockpit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, ' ', \"Delete Cockpit\"), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.specialbtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn dropdown-toggle\",\n    type: \"button\",\n    \"data-toggle\": \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-toggler-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), \"Tasks\"), React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.specialbtnAllTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"dropdown-item\",\n    onClick: props.contentViewHandler,\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"All Tasks\")), React.createElement(\"div\", {\n    className: classes.specialbtnTodayTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"dropdown-item\",\n    onClick: props.clicked,\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Today\"))))), React.createElement(\"div\", {\n    className: \"collapse navbar-collapse\",\n    id: \"navbarNav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"nav-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"nav-link\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Calendar\")), React.createElement(\"li\", {\n    className: \"nav-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"nav-link\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Plans\")), React.createElement(\"li\", {\n    className: \"nav-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"nav-link\",\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"Objetivos\")), React.createElement(\"li\", {\n    className: \"nav-item dropdown active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn dropdown-toggle\",\n    type: \"button\",\n    id: \"dropdownMenu2\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    onClick: event => pickedSyllabusRequestHandler(event),\n    value: \"showSyllabiList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, ' ', \"View Syllabi\"), React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    \"aria-labelledby\": \"dropdownMenu2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, syllabusContext.everythingSyllabus.syllabusData ? processSyllabiList() : null))), React.createElement(\"form\", {\n    className: \"form-inline ml-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mr-2\",\n    placeholder: \"Search Task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-outline-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"div\", {\n    className: \"nav-item dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    className: \"nav-link dropdown-toggle\",\n    \"data-toggle\": \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, \"Creation\"), React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: props.clickedNewTask,\n    value: \"4\",\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, ' ', \"Task\"), React.createElement(\"button\", {\n    onClick: props.contentViewHandler,\n    value: \"5\",\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, \"Event\"), React.createElement(\"button\", {\n    onClick: props.clickedSyllabus,\n    value: \"6\",\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, \"Syllabus\"), React.createElement(\"a\", {\n    href: \"#\",\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, \"Objetivo\"), React.createElement(\"a\", {\n    href: \"#\",\n    className: \"dropdown-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  })))))));\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, navbarDisplay);\n};\n\nexport default Navbar; // {newTaskState.showNewTaskForm ? (\n//   <NewTask\n//\n//     newTaskTitle={props.newTaskInfoComing}\n//     changed={event => newSetTaskInfoState(event)}\n//     category={newTaskInfoState.newTaskCategory}\n//     categoryChange={event => newSetTaskCategoryState(event)}\n//     showTasksAfterNewTask={props.clicked}\n//   />","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/Navbar/Navbar.js"],"names":["React","useState","useEffect","useContext","SyllabusContext","TasksContext","App","classes","classNames","NewTask","NewSyllabus","SyllabiList","Navbar","props","showNewTaskForm","newTaskState","setTaskState","syllabusContext","tasksContext","requestDataHandler","event","contentchoice","target","value","contentViewObject","contentViewHandler","pickedSyllabusRequestHandler","dataRequestMessage","typeOfData","handlerChoice","dataLocation","infoType","info","dataRequestHandler","processSyllabiList","Object","keys","everythingSyllabus","syllabusData","syllabi","map","syllabus","index","syllabusId","name","console","log","newTaskHandler","currentShowNewTaskForm","newTaskTitle","newTaskCategory","newTaskInfoState","setTaskInfoState","newSetTaskInfoState","newSetTaskCategoryState","navbarDisplay","deleteCockpit","specialbtn","specialbtnAllTasks","specialbtnTodayTasks","clicked","clickedNewTask","clickedSyllabus"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport SyllabusContext from '../../../context/syllabusContext';\nimport TasksContext from '../../../context/tasksContext';\n//import App from '../../containers/App';\nimport App from '../../../containers/App';\nimport classes from '../Cockpit.module.css';\nimport classNames from 'classnames';\nimport NewTask from '../../Creation/newTask';\nimport NewSyllabus from '../../Creation/newSyllabus';\nimport SyllabiList from '../../ViewContent/Syllabus/SyllabiList';\nconst Navbar = props => {\n  const [newTaskState, setTaskState] = useState({\n    showNewTaskForm: false\n  });\n  const syllabusContext = useContext(SyllabusContext);\n  const tasksContext = useContext(TasksContext);\n\n  const requestDataHandler = event => {\n    contentchoice = event.target.value;\n\n    switch (contentchoice) {\n      case '1':\n        contentViewObject = {\n          target: {\n            value: '1'\n          }\n        };\n\n        break;\n\n      case '':\n        break;\n    }\n\n    let contentViewObject = {\n      target: {\n        value: '1'\n      }\n    };\n    // dataRequestMessage = {\n    //   typeOfData: 'syllabus',\n    //   handlerChoice: '11',\n    //   dataLocation: event.target.value,\n    //   infoType: 'triggerShowSyllabus',\n    //   info: ''\n    // };\n    // syllabusContext.dataRequestHandler(event, dataRequestMessage);\n    // let newContentChoice = event.target.value;\n\n    props.contentViewHandler(contentViewObject);\n  };\n\n  const pickedSyllabusRequestHandler = event => {\n    //let dayPicked = event.target.value;\n    //event\n    let dataRequestMessage = null;\n    if (event.target.value === 'showSyllabiList') {\n      dataRequestMessage = {\n        typeOfData: 'syllabus',\n        handlerChoice: '18',\n        dataLocation: null,\n        infoType: 'triggerShowSyllabus',\n        info: ''\n      };\n      tasksContext.dataRequestHandler(event, dataRequestMessage);\n    } else {\n      // alert(\n      //   `inside pickedSyllabusRequestHandler value from onClick: ${event.target.value}`\n      // );\n      dataRequestMessage = {\n        typeOfData: 'syllabus',\n        handlerChoice: '11',\n        dataLocation: event.target.value,\n        infoType: 'triggerShowSyllabus',\n        info: ''\n      };\n      syllabusContext.dataRequestHandler(event, dataRequestMessage);\n      // let newContentChoice = event.target.value;\n\n      let contentViewObject = {\n        target: {\n          value: '10'\n        }\n      };\n      props.contentViewHandler(contentViewObject);\n    }\n\n    //tasksContext.contentViewHandler(3)\n  };\n\n  const processSyllabiList = () => {\n    return Object.keys(\n      syllabusContext.everythingSyllabus.syllabusData.syllabi\n    ).map((syllabus, index) => {\n      //alert(`inside const ViewContentOptions\n      //  props.syllabusName ${syllabusContext.everythingSyllabus.syllabusData.syllabi[syllabus].syllabusId}`);\n      return (\n        <React.Fragment key={index}>\n          <SyllabiList\n            click={event => pickedSyllabusRequestHandler(event)}\n            syllabusId={\n              syllabusContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n                .syllabusId\n            }\n            value={\n              syllabusContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n                .syllabusId\n            }\n            index={index}\n            syllabusName={\n              syllabusContext.everythingSyllabus.syllabusData.syllabi[syllabus]\n                .name\n            }\n          />\n        </React.Fragment>\n      );\n    });\n  };\n\n  useEffect(() => {\n    console.log('[Cockpit.js] useffect');\n\n    //getting rid of timer\n    // const timer = setTimeout(() => {\n    //   alert('Delete Cockpit timer alert');\n    // }, 100);\n\n    return () => {\n      //clearTimeout(timer);\n      console.log('[Cockpit.js] cleanup work in useEffect');\n    };\n  }, []);\n\n  const newTaskHandler = () => {\n    let currentShowNewTaskForm = newTaskState.showNewTaskForm;\n    console.log('inside newTaskHandler()');\n    setTaskState({\n      showNewTaskForm: !currentShowNewTaskForm\n    });\n  };\n\n  const [newTaskInfoState, setTaskInfoState] = useState({\n    newTaskTitle: '',\n    newTaskCategory: ''\n\n    // newTaskDescription: '',\n    // newTaskTime: '',\n    // newTaskestimatedDuration: '' //estimation\n  });\n\n  //notify new title changed - set up new state\n  const newSetTaskInfoState = event => {\n    console.log('inside newTaskFormHandler()');\n    setTaskInfoState({\n      newTaskTitle: event.target.value,\n      newTaskCategory: newTaskInfoState.newTaskCategory\n    });\n  };\n\n  //notify new category changed - set up new state\n  const newSetTaskCategoryState = event => {\n    console.log('inside newSetTaskCategoryState()');\n    setTaskInfoState({\n      newTaskTitle: newTaskInfoState.newTaskTitle,\n      newTaskCategory: event.target.value\n    });\n  };\n\n  // const newSetTaskCategoryState = event => {\n  //   console.log('inside newSetTaskCategoryState()');\n  //   setTaskInfoState({\n  //     newTaskTitle: newTaskInfoState.newTaskTitle,\n  //     newTaskCategory: newTaskInfoState.newTaskCategory\n  //   });\n  // };\n\n  //const newTaskDisplay = <NewTask />;\n\n  const navbarDisplay = (\n    <div>\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light mb-3\">\n        <button className=\"btn btn-primary\" onClick={props.deleteCockpit}>\n          {' '}\n          Delete Cockpit\n        </button>\n        <div className=\"container\">\n          <div className={classes.specialbtn}>\n            <div className=\"dropdown\">\n              <button\n                className=\"btn dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n              >\n                <span className=\"navbar-toggler-icon\"></span>\n                Tasks\n              </button>\n\n              <div className=\"dropdown-menu\">\n                <div className={classes.specialbtnAllTasks}>\n                  <button\n                    className=\"dropdown-item\"\n                    onClick={props.contentViewHandler}\n                    value=\"1\"\n                  >\n                    All Tasks\n                  </button>\n                </div>\n\n                <div className={classes.specialbtnTodayTasks}>\n                  <button\n                    className=\"dropdown-item\"\n                    onClick={props.clicked}\n                    value=\"2\"\n                  >\n                    Today\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Calendar\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Plans\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Objetivos\n                </a>\n              </li>\n              <li className=\"nav-item dropdown active\">\n                {/* <label className=\"btn dropdown active\"> */}\n                <button\n                  className=\"btn dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenu2\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                  onClick={event => pickedSyllabusRequestHandler(event)}\n                  value=\"showSyllabiList\"\n                >\n                  {' '}\n                  View Syllabi\n                </button>\n\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n                  {syllabusContext.everythingSyllabus.syllabusData\n                    ? processSyllabiList()\n                    : null}\n                </div>\n                {/* </label> */}\n                {/* <div className=\"dropdown\">\n                  <button\n                    className=\"btn dropdown-toggle\"\n                    type=\"button\"\n                    data-toggle=\"dropdown\"\n                  >\n                    <span className=\"navbar-toggler-icon\"></span>\n                    Syllabus\n                  </button>\n\n                  \n                  <button\n                    className=\"dropdown-item\"\n                    onClick={event => pickedSyllabusRequestHandler(event)}\n                    value=\"showSyllabiList\"\n                  >\n                    Syllabus List\n                  </button>\n\n                  <div\n                    className=\"dropdown-item\"\n                    aria-labelledby=\"dropdownMenu2\"\n                  >\n                    {syllabusContext.everythingSyllabus.syllabusData\n                      ? processSyllabiList()\n                      : null}\n                  </div>\n                </div> */}\n              </li>\n            </ul>\n\n            <form className=\"form-inline ml-auto\">\n              <input\n                type=\"text\"\n                className=\"form-control mr-2\"\n                placeholder=\"Search Task\"\n              />\n              <button className=\"btn btn-outline-success\">Search</button>\n            </form>\n            <div className=\"nav-item dropdown\">\n              <a\n                href=\"#\"\n                className=\"nav-link dropdown-toggle\"\n                data-toggle=\"dropdown\"\n              >\n                Creation\n              </a>\n              <div className=\"dropdown-menu\">\n                <button\n                  onClick={props.clickedNewTask}\n                  value=\"4\"\n                  className=\"dropdown-item\"\n                >\n                  {' '}\n                  Task\n                </button>\n\n                <button\n                  onClick={props.contentViewHandler}\n                  value=\"5\"\n                  className=\"dropdown-item\"\n                >\n                  Event\n                </button>\n\n                <button\n                  onClick={props.clickedSyllabus}\n                  value=\"6\"\n                  className=\"dropdown-item\"\n                >\n                  Syllabus\n                </button>\n\n                <a href=\"#\" className=\"dropdown-item\">\n                  Objetivo\n                </a>\n                <a href=\"#\" className=\"dropdown-item\"></a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n  return <React.Fragment>{navbarDisplay}</React.Fragment>;\n};\n\nexport default Navbar;\n// {newTaskState.showNewTaskForm ? (\n//   <NewTask\n//\n//     newTaskTitle={props.newTaskInfoComing}\n//     changed={event => newSetTaskInfoState(event)}\n//     category={newTaskInfoState.newTaskCategory}\n//     categoryChange={event => newSetTaskCategoryState(event)}\n//     showTasksAfterNewTask={props.clicked}\n//   />\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Template/dynamic charts/Dynamic Column Chart.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar updateInterval = 500;\n\nclass DynamicColumnChart extends Component {\n  constructor() {\n    super();\n    this.updateChart = this.updateChart.bind(this);\n  }\n\n  componentDidMount() {\n    setInterval(this.updateChart, updateInterval);\n  }\n\n  updateChart() {\n    var dpsColor,\n        dpsTotal = 0,\n        deltaY,\n        yVal;\n    var dps = this.chart.options.data[0].dataPoints;\n\n    for (var i = 0; i < dps.length; i++) {\n      deltaY = Math.round(2 + Math.random() * (-2 - 2));\n      yVal = deltaY + dps[i].y > 0 ? deltaY + dps[i].y < 100 ? dps[i].y + deltaY : 100 : 0;\n      dpsColor = yVal >= 90 ? \"#e40000\" : yVal >= 70 ? \"#ec7426\" : yVal >= 50 ? \"#81c2ea\" : \"#88df86 \";\n      dps[i] = {\n        label: \"Core \" + (i + 1),\n        y: yVal,\n        color: dpsColor\n      };\n      dpsTotal += yVal;\n    }\n\n    this.chart.options.data[0].dataPoints = dps;\n    this.chart.options.title.text = \"CPU Usage \" + Math.round(dpsTotal / 6) + \"%\";\n    this.chart.render();\n  }\n\n  render() {\n    const options = {\n      theme: \"dark2\",\n      title: {\n        text: \"CPU Usage\"\n      },\n      subtitles: [{\n        text: \"Intel Core i7 980X @ 3.33GHz\"\n      }],\n      axisY: {\n        title: \"CPU Usage (%)\",\n        suffix: \"%\",\n        maximum: 100\n      },\n      data: [{\n        type: \"column\",\n        yValueFormatString: \"#,###'%'\",\n        indexLabel: \"{y}\",\n        dataPoints: [{\n          label: \"Core 1\",\n          y: 68\n        }, {\n          label: \"Core 2\",\n          y: 3\n        }, {\n          label: \"Core 3\",\n          y: 8\n        }, {\n          label: \"Core 4\",\n          y: 87\n        }, {\n          label: \"Core 5\",\n          y: 2\n        }, {\n          label: \"Core 6\",\n          y: 6\n        }]\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"React Dynamic Line Chart\"), React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DynamicColumnChart;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/components/Cockpit/Template/dynamic charts/Dynamic Column Chart.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","updateInterval","DynamicColumnChart","constructor","updateChart","bind","componentDidMount","setInterval","dpsColor","dpsTotal","deltaY","yVal","dps","chart","options","data","dataPoints","i","length","Math","round","random","y","label","color","title","text","render","theme","subtitles","axisY","suffix","maximum","type","yValueFormatString","indexLabel","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport CanvasJSReact from '../../assets/canvasjs.react';\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nvar updateInterval = 500;\r\nclass DynamicColumnChart extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.updateChart = this.updateChart.bind(this);\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tsetInterval(this.updateChart, updateInterval);\r\n\t}\r\n\tupdateChart() {\r\n\t\tvar dpsColor, dpsTotal = 0, deltaY, yVal;\r\n\t\tvar dps = this.chart.options.data[0].dataPoints;\r\n\t\t\r\n\t\tfor (var i = 0; i < dps.length; i++) {\r\n\t\t\tdeltaY = Math.round(2 + Math.random() *(-2-2));\r\n\t\t\tyVal = deltaY + dps[i].y > 0 ? (deltaY + dps[i].y < 100 ? dps[i].y + deltaY : 100) : 0;\r\n\t\t\tdpsColor = yVal >= 90 ? \"#e40000\" : yVal >= 70 ? \"#ec7426\" : yVal >= 50 ? \"#81c2ea\" : \"#88df86 \";\r\n\t\t\tdps[i] = {label: \"Core \"+(i+1) , y: yVal, color: dpsColor};\r\n\t\t\tdpsTotal += yVal;\r\n\t\t}\r\n\t\tthis.chart.options.data[0].dataPoints = dps;\r\n\t\tthis.chart.options.title.text = \"CPU Usage \" + Math.round(dpsTotal / 6) + \"%\";\r\n\t\tthis.chart.render();\r\n\t}\r\n\trender() {\r\n\t\tconst options = {\r\n\t\t\ttheme: \"dark2\",\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: \"CPU Usage\"\r\n\t\t\t},\r\n\t\t\tsubtitles: [{\r\n\t\t\t\ttext: \"Intel Core i7 980X @ 3.33GHz\"\r\n\t\t\t}],\r\n\t\t\taxisY: {\r\n\t\t\t\ttitle: \"CPU Usage (%)\",\r\n\t\t\t\tsuffix: \"%\",\r\n\t\t\tmaximum: 100\r\n\t\t\t},\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"column\",\r\n\t\t\t\tyValueFormatString: \"#,###'%'\",\r\n\t\t\t\tindexLabel: \"{y}\",\r\n\t\t\t\tdataPoints: [\r\n\t\t\t\t\t{ label: \"Core 1\", y: 68 },\r\n\t\t\t\t\t{ label: \"Core 2\", y: 3 },\r\n\t\t\t\t\t{ label: \"Core 3\", y: 8 },\r\n\t\t\t\t\t{ label: \"Core 4\", y: 87 },\r\n\t\t\t\t\t{ label: \"Core 5\", y: 2 },\r\n\t\t\t\t\t{ label: \"Core 6\", y: 6 }\r\n\t\t\t\t]\r\n\t\t\t}]\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>React Dynamic Line Chart</h1>\r\n\t\t\t<CanvasJSChart options = {options} \r\n\t\t\t\tonRef={ref => this.chart = ref}\r\n\t\t\t/>\r\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DynamicColumnChart;"]},"metadata":{},"sourceType":"module"}
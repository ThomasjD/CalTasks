{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Syllabus/Syllabi.js\";\nimport React, { Component } from 'react'; //import Task from './Task/Task';\n\nimport ErrorBoundary from './../../ErrorBoundary/ErrorBoundary';\nimport student from './../../../containers/Student.css';\nimport Syllabus from './Syllabus';\nimport SyllabusContext from './../../../context/syllabusContext';\n\nclass Syllabi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickToAddDelete: null\n    };\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n  //rendering current lessons headers\n  renderAllSyllabiTableHeaderHandler() {\n    alert('inside syllabi renderAllSyllabiTableHeaderHandler()'); //this is part of First row of table\n\n    let clickToAddDelete = null; // if (this.props.showLeftOverLessonsFromOrigSyllabus) {\n    //   clickToAddDelete = 'Click to schedule this lesson';\n    // } else {\n    //   clickToAddDelete = 'Click to Delete Lesson';\n    // }\n\n    if (this.context.everythingSyllabus.syllabusData.syllabusHeaders == true) {\n      let header = this.context.everythingSyllabus.syllabusData.syllabusHeaders; //lastLessonHeader;\n\n      return header.map((key, index) => {\n        //console.log(`this is the key: (${key}) and the index: (${index})`);\n        // switch (key) {\n        //   case 'syllabusId':\n        //     return <th key={index}>Click To Delete</th>;\n        //     break;\n        //   case 'name':\n        //     break;\n        //   case 'category':\n        //     break;\n        //   case 'concentration':\n        //     break;\n        // }\n        if (key === 'syllabusId') {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \"Click To Delete\");\n        } else {\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, key.toUpperCase());\n        }\n      });\n    }\n  } //rendering current lessons\n\n\n  allSyllabiHandler() {\n    let handlerType = null;\n    let info = Object.keys(this.context.everythingSyllabus.syllabusData.syllabi).map((syllabus, index) => {\n      //[ key1, key2, key3] //name of syllabus obj\n      //syllabus = keys => get value  =\n      alert(this.context.everythingSyllabus.syllabusData.syllabi[syllabus]);\n      return this.context.everythingSyllabus.syllabusData.syllabi[syllabus]; // return (\n      //   <ErrorBoundary key={syllabus.id}>\n      //     <Syllabus></Syllabus>\n      //   </ErrorBoundary>\n      // );\n    });\n    alert(info); // switch (this.props.everything.contentChoice) {\n    //   case '3':\n    //     break;\n    //   case '6':\n    //     this.props.showLeftOverLessonsFromOrigSyllabus\n    //       ? (handlerType = 'add')\n    //       : (handlerType = 'delete');\n    //     break;\n    // }\n    //lessons = maxREact = [ {}, {}, {}]\n    //syllabi = syllabi = { {}, {}, }\n    // return this.context.everythingSyllabus.syllabusData.syllabi.map(\n    //   (syllabus, index) => {\n    //   let functionChoiceDelete = null;\n    //   let functionChoiceChange = null;\n    //   if (this.props.everything.contentChoice === '3') {\n    //     functionChoiceDelete = '3';\n    //     functionChoiceChange = '4';\n    //   } else {\n    //     functionChoiceDelete = '5';\n    //     functionChoiceChange = '6';\n    //   }\n  } // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Tasks] getSnapshotBeforeUpdate');\n  //   return { message: 'Snapshot' };\n  // }\n  // // componentWillUpdate() {\n  // //     return\n  // // }\n  // componentDidUpdate(prevProps, prevState, message) {\n  //   console.log('[Tasks] componentDidUpdate');\n  //   console.log(message);\n  // }\n  // componentWillUnmount() {\n  //   console.log('[Tasks.js] componentWillUnmount');\n  // }\n\n\n  render() {\n    alert('inside syllabi render()');\n    console.log('[allSyllabus] rendering...'); //<p> contentChoice: {this.props.everything.contentChoice}</p>\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \" Syllabi\"), React.createElement(\"table\", {\n      id: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.renderAllSyllabiTableHeaderHandler()), this.allSyllabiHandler())));\n  }\n\n}\n\nSyllabi.contextType = SyllabusContext;\nexport default Syllabi;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Syllabus/Syllabi.js"],"names":["React","Component","ErrorBoundary","student","Syllabus","SyllabusContext","Syllabi","constructor","props","state","clickToAddDelete","renderAllSyllabiTableHeaderHandler","alert","context","everythingSyllabus","syllabusData","syllabusHeaders","header","map","key","index","toUpperCase","allSyllabiHandler","handlerType","info","Object","keys","syllabi","syllabus","render","console","log","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Task from './Task/Task';\nimport ErrorBoundary from './../../ErrorBoundary/ErrorBoundary';\nimport student from './../../../containers/Student.css';\nimport Syllabus from './Syllabus';\nimport SyllabusContext from './../../../context/syllabusContext';\n\nclass Syllabi extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    clickToAddDelete: null\n  };\n  static contextType = SyllabusContext;\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n  //rendering current lessons headers\n  renderAllSyllabiTableHeaderHandler() {\n    alert('inside syllabi renderAllSyllabiTableHeaderHandler()');\n    //this is part of First row of table\n    let clickToAddDelete = null;\n\n    // if (this.props.showLeftOverLessonsFromOrigSyllabus) {\n    //   clickToAddDelete = 'Click to schedule this lesson';\n    // } else {\n    //   clickToAddDelete = 'Click to Delete Lesson';\n    // }\n    if (this.context.everythingSyllabus.syllabusData.syllabusHeaders == true) {\n      let header = this.context.everythingSyllabus.syllabusData.syllabusHeaders;\n      //lastLessonHeader;\n      return header.map((key, index) => {\n        //console.log(`this is the key: (${key}) and the index: (${index})`);\n\n        // switch (key) {\n        //   case 'syllabusId':\n        //     return <th key={index}>Click To Delete</th>;\n        //     break;\n        //   case 'name':\n        //     break;\n        //   case 'category':\n        //     break;\n        //   case 'concentration':\n        //     break;\n        // }\n        if (key === 'syllabusId') {\n          return <th key={index}>Click To Delete</th>;\n        } else {\n          return <th key={index}>{key.toUpperCase()}</th>;\n        }\n      });\n    }\n  }\n\n  //rendering current lessons\n  allSyllabiHandler() {\n    let handlerType = null;\n    let info = Object.keys(\n      this.context.everythingSyllabus.syllabusData.syllabi\n    ).map((syllabus, index) => {\n      //[ key1, key2, key3] //name of syllabus obj\n      //syllabus = keys => get value  =\n      alert(this.context.everythingSyllabus.syllabusData.syllabi[syllabus]);\n      return this.context.everythingSyllabus.syllabusData.syllabi[syllabus];\n\n      // return (\n      //   <ErrorBoundary key={syllabus.id}>\n      //     <Syllabus></Syllabus>\n      //   </ErrorBoundary>\n      // );\n    });\n    alert(info);\n\n    // switch (this.props.everything.contentChoice) {\n    //   case '3':\n    //     break;\n    //   case '6':\n    //     this.props.showLeftOverLessonsFromOrigSyllabus\n    //       ? (handlerType = 'add')\n    //       : (handlerType = 'delete');\n\n    //     break;\n    // }\n\n    //lessons = maxREact = [ {}, {}, {}]\n    //syllabi = syllabi = { {}, {}, }\n    // return this.context.everythingSyllabus.syllabusData.syllabi.map(\n    //   (syllabus, index) => {\n    //   let functionChoiceDelete = null;\n    //   let functionChoiceChange = null;\n\n    //   if (this.props.everything.contentChoice === '3') {\n    //     functionChoiceDelete = '3';\n    //     functionChoiceChange = '4';\n    //   } else {\n    //     functionChoiceDelete = '5';\n    //     functionChoiceChange = '6';\n    //   }\n  }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('[Tasks] getSnapshotBeforeUpdate');\n  //   return { message: 'Snapshot' };\n  // }\n\n  // // componentWillUpdate() {\n  // //     return\n  // // }\n\n  // componentDidUpdate(prevProps, prevState, message) {\n  //   console.log('[Tasks] componentDidUpdate');\n  //   console.log(message);\n  // }\n\n  // componentWillUnmount() {\n  //   console.log('[Tasks.js] componentWillUnmount');\n  // }\n\n  render() {\n    alert('inside syllabi render()');\n    console.log('[allSyllabus] rendering...');\n    //<p> contentChoice: {this.props.everything.contentChoice}</p>\n    return (\n      <div>\n        <h3 id=\"title\"> Syllabi</h3>\n\n        <table id=\"students\">\n          <tbody>\n            <tr>{this.renderAllSyllabiTableHeaderHandler()}</tr>\n            {this.allSyllabiHandler()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Syllabi;\n"]},"metadata":{},"sourceType":"module"}
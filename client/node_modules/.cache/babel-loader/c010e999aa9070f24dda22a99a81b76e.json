{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/RightCockpit/RightCockpit.js\";\nimport React, { Component } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport rightcockpitClasses from './RightCockpit.module.css';\nimport Cockpit from '../../components/Cockpit/Cockpit';\nimport Navbar from '../../components/Cockpit/Navbar/Navbar';\nimport Lessons from '../../components/ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContentOptions from '../../components/Cockpit/ViewContentOptions';\nimport NewTask from '../../components/Creation/newTask';\nimport DisplayContent from '../../components/Cockpit/displayContent';\nimport DatePickerPicker from './DatePicker.js'; //import Layout from '../../hoc/Layout';\n\nimport NewEvent from '../../components/Creation/NewEvent';\nimport RightCockpitContext from '../../context/RightCockpitContext';\nimport WeeklyTimeBudget from '../../components/Creation/WeeklyTimeBudget/WeeklyTimeBudget';\nimport StoreDataContext from '../../context/StoreDataContext';\n\nclass RightCockpit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [],\n      showEvents: false,\n      showDatePicker: false,\n      newTask: [],\n      newTaskTitle: '',\n      newTaskLocation: '',\n      numberOfGuests: 2,\n      contentChoice: '0',\n      showCockpit: true,\n      lastHeader: [],\n      lastTodayTasksHeader: [],\n      lastLessonHeader: [],\n      reRenderTasks: false,\n      syllabi: [],\n      contentChoiceHandlerTestNum: 7,\n      showLeftOverLessonsFromSyllabus: false\n    };\n\n    this.newTaskInfo2 = event => {\n      let newSyllabus = event.target.value;\n      const syllabi = this.state.syllabi;\n      syllabi.push(newSyllabus);\n      this.setState({\n        syllabi: syllabi\n      });\n      console.log(`this is this.state.syllabi after maxReact push ${JSON.stringify(this.state.syllabi, null, 2)}`);\n    };\n\n    this.contentViewHandler = event => {\n      let newViewChoice = event.target.value; //alert(`inside contentViewHandler ${newViewChoice}`);\n\n      this.setState({\n        contentChoice: newViewChoice\n      }); //Comparing new contentChoice with previous contentChoice\n      //if newContentChoice === oldContentChoice\n      //turn off the view\n      //alert(`contentChoice: ${this.state.contentChoice}`);\n\n      if (newViewChoice === this.state.contentChoice) {\n        return this.setState({\n          contentChoice: '0'\n        });\n      } else {\n        switch (newViewChoice) {\n          case '1':\n            //All tasks\n            //this.context.dataRequestHandler(event, 'tasks', '1', null, null);\n            break;\n\n          case '2':\n            //TodaysTasks\n            //this.context.dataRequestHandler(event, 'tasks', '2', null, null);\n            break;\n\n          case '3':\n            //Syllabus (for viewing List of syllabus\n            //reaching out to SyllabusData\n            break;\n\n          case '4':\n            //view tasks for picked day\n            //this.context.dataRequestHandler(event, 'tasks', '', null, null);\n            break;\n\n          case '6':\n            //Adding Lessons from Syllabus\n            break;\n\n          case '7':\n            //View MaxReact\n            //this.context.dataRequestHandler(event, 'syllabus', '8', null, null);\n            break;\n\n          case '8':\n            //newEvent submitForm, later change the typeOfData to event\n            break;\n\n          case '9':\n            //view tasks for picked day\n            // this.context.dataRequestHandler(event, 'tasks', '9', null, null);\n            break;\n\n          case '11':\n            break;\n        }\n      }\n    };\n  }\n\n  render() {\n    let leftCockpit = null;\n\n    if (this.state.showCockpit == true) {\n      leftCockpit = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Cockpit, {\n        contentViewHandler: () => this.contentViewHandler(),\n        title: this.props.appTitle,\n        deleteCockpit: () => {\n          this.setState({\n            showCockpit: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    }\n\n    let displayCockpit = React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-8 order-0 float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card bg-light m-3 p-3 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(DisplayContent, {\n      dataLocation: this.state.dataLocation,\n      contentViewHandler: event => this.contentViewHandler(event),\n      newestSyllabus: event => this.newestSyllabusHandler(event),\n      everything: this.state,\n      newestTaskHandler: event => this.newestTaskHandler(event),\n      newestEvent: event => this.newestEventHandler(event),\n      syllabusData: this.context.syllabusData,\n      contentChoice: this.state.contentChoice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row d-flex d-lg-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-4 order-1 float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card text-white bg-info m-3 p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, leftCockpit))));\n    let navbar = React.createElement(Navbar, {\n      newTaskInfoComing: event => this.newTaskHandler(event),\n      newTaskInfo2: event => this.newTaskHandler(event),\n      title: this.props.appTitle,\n      contentViewHandler: event => this.contentViewHandler(event),\n      deleteCockpit: () => {\n        this.setState({\n          showCockpit: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.props.newTaskInfoComing);\n    let viewContentOptions = React.createElement(ViewContentOptions //viewRequestHandler={event => this.viewRequestHandler(event)}\n    , {\n      contentViewHandler: event => this.contentViewHandler(event),\n      contentChoice: this.state.contentChoice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, navbar, React.createElement(\"div\", {\n      className: \"rightcockpitClasses.deskTop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, viewContentOptions, displayCockpit));\n  }\n\n}\n\nRightCockpit.contextType = StoreDataContext;\nexport default RightCockpit;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/RightCockpit/RightCockpit.js"],"names":["React","Component","classes","rightcockpitClasses","Cockpit","Navbar","Lessons","ViewContentOptions","NewTask","DisplayContent","DatePickerPicker","NewEvent","RightCockpitContext","WeeklyTimeBudget","StoreDataContext","RightCockpit","constructor","props","state","events","showEvents","showDatePicker","newTask","newTaskTitle","newTaskLocation","numberOfGuests","contentChoice","showCockpit","lastHeader","lastTodayTasksHeader","lastLessonHeader","reRenderTasks","syllabi","contentChoiceHandlerTestNum","showLeftOverLessonsFromSyllabus","newTaskInfo2","event","newSyllabus","target","value","push","setState","console","log","JSON","stringify","contentViewHandler","newViewChoice","render","leftCockpit","appTitle","displayCockpit","dataLocation","newestSyllabusHandler","newestTaskHandler","newestEventHandler","context","syllabusData","navbar","newTaskHandler","newTaskInfoComing","viewContentOptions","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport rightcockpitClasses from './RightCockpit.module.css';\nimport Cockpit from '../../components/Cockpit/Cockpit';\nimport Navbar from '../../components/Cockpit/Navbar/Navbar';\nimport Lessons from '../../components/ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContentOptions from '../../components/Cockpit/ViewContentOptions';\nimport NewTask from '../../components/Creation/newTask';\nimport DisplayContent from '../../components/Cockpit/displayContent';\nimport DatePickerPicker from './DatePicker.js';\n\n//import Layout from '../../hoc/Layout';\nimport NewEvent from '../../components/Creation/NewEvent';\nimport RightCockpitContext from '../../context/RightCockpitContext';\nimport WeeklyTimeBudget from '../../components/Creation/WeeklyTimeBudget/WeeklyTimeBudget';\nimport StoreDataContext from '../../context/StoreDataContext';\n\nclass RightCockpit extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    events: [],\n    showEvents: false,\n    showDatePicker: false,\n    newTask: [],\n    newTaskTitle: '',\n    newTaskLocation: '',\n    numberOfGuests: 2,\n    contentChoice: '0',\n    showCockpit: true,\n    lastHeader: [],\n    lastTodayTasksHeader: [],\n    lastLessonHeader: [],\n    reRenderTasks: false,\n    syllabi: [],\n    contentChoiceHandlerTestNum: 7,\n\n    showLeftOverLessonsFromSyllabus: false\n  };\n\n  newTaskInfo2 = event => {\n    let newSyllabus = event.target.value;\n\n    const syllabi = this.state.syllabi;\n    syllabi.push(newSyllabus);\n    this.setState({ syllabi: syllabi });\n    console.log(\n      `this is this.state.syllabi after maxReact push ${JSON.stringify(\n        this.state.syllabi,\n        null,\n        2\n      )}`\n    );\n  };\n\n  contentViewHandler = event => {\n    let newViewChoice = event.target.value;\n    //alert(`inside contentViewHandler ${newViewChoice}`);\n    this.setState({ contentChoice: newViewChoice });\n\n    //Comparing new contentChoice with previous contentChoice\n    //if newContentChoice === oldContentChoice\n    //turn off the view\n    //alert(`contentChoice: ${this.state.contentChoice}`);\n    if (newViewChoice === this.state.contentChoice) {\n      return this.setState({ contentChoice: '0' });\n    } else {\n      switch (newViewChoice) {\n        case '1': //All tasks\n          //this.context.dataRequestHandler(event, 'tasks', '1', null, null);\n\n          break;\n\n        case '2': //TodaysTasks\n          //this.context.dataRequestHandler(event, 'tasks', '2', null, null);\n\n          break;\n\n        case '3': //Syllabus (for viewing List of syllabus\n          //reaching out to SyllabusData\n\n          break;\n        case '4': //view tasks for picked day\n          //this.context.dataRequestHandler(event, 'tasks', '', null, null);\n          break;\n\n        case '6': //Adding Lessons from Syllabus\n          break;\n        case '7': //View MaxReact\n          //this.context.dataRequestHandler(event, 'syllabus', '8', null, null);\n\n          break;\n        case '8': //newEvent submitForm, later change the typeOfData to event\n          break;\n        case '9': //view tasks for picked day\n          // this.context.dataRequestHandler(event, 'tasks', '9', null, null);\n\n          break;\n        case '11':\n          break;\n      }\n    }\n  };\n\n  static contextType = StoreDataContext;\n\n  render() {\n    let leftCockpit = null;\n    if (this.state.showCockpit == true) {\n      leftCockpit = (\n        <React.Fragment>\n          <Cockpit\n            contentViewHandler={() => this.contentViewHandler()}\n            title={this.props.appTitle}\n            deleteCockpit={() => {\n              this.setState({ showCockpit: false });\n            }}\n          />\n        </React.Fragment>\n      );\n    }\n\n    let displayCockpit = (\n      <div className=\"container\">\n        <div className=\"col-lg-8 order-0 float-left\">\n          <div className=\"card bg-light m-3 p-3 \">\n            <DisplayContent\n              dataLocation={this.state.dataLocation}\n              contentViewHandler={event => this.contentViewHandler(event)}\n              newestSyllabus={event => this.newestSyllabusHandler(event)}\n              everything={this.state}\n              newestTaskHandler={event => this.newestTaskHandler(event)}\n              newestEvent={event => this.newestEventHandler(event)}\n              syllabusData={this.context.syllabusData}\n              contentChoice={this.state.contentChoice}\n            />\n          </div>\n        </div>\n\n        <div className=\"row d-flex d-lg-block\">\n          <div className=\"col-lg-4 order-1 float-left\">\n            <div className=\"card text-white bg-info m-3 p-3\">{leftCockpit}</div>\n          </div>\n        </div>\n      </div>\n    );\n\n    let navbar = (\n      <Navbar\n        newTaskInfoComing={event => this.newTaskHandler(event)}\n        newTaskInfo2={event => this.newTaskHandler(event)}\n        title={this.props.appTitle}\n        contentViewHandler={event => this.contentViewHandler(event)}\n        deleteCockpit={() => {\n          this.setState({ showCockpit: false });\n        }}\n      >\n        {this.props.newTaskInfoComing}\n      </Navbar>\n    );\n\n    let viewContentOptions = (\n      <ViewContentOptions\n        //viewRequestHandler={event => this.viewRequestHandler(event)}\n        contentViewHandler={event => this.contentViewHandler(event)}\n        contentChoice={this.state.contentChoice}\n      />\n    );\n\n    return (\n      <React.Fragment>\n        {/* <RightCockpitContext.Provider\n          value={{\n            contentViewHandler: this.contentViewHandler,\n            newContentViewHandler: (contentChoice, info) =>\n              this.newContentViewHandler(contentChoice, info),\n            rightCockpitState: this.state\n          }}\n        > */}\n        {navbar}\n        <div className=\"rightcockpitClasses.deskTop\">\n          {viewContentOptions}\n\n          {/* <WeeklyTimeBudget /> */}\n          {displayCockpit}\n        </div>\n        {/* </RightCockpitContext.Provider> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RightCockpit;\n"]},"metadata":{},"sourceType":"module"}
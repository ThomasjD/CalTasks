{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/EventsData.js\";\nimport React, { Component } from 'react';\nimport StoreContext from '../../context/StoreDataContext';\n\nclass EventsData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentMonthEvents: ['hello', 'there']\n    };\n\n    this.newEventHandler = () => {\n      console.log(this.state.currentMonthEvents[1]);\n      console.log(typeof this.state.currentMonthEvents);\n      let newEvent = this.context.dataRequestDetails.value;\n      console.dir(newEvent);\n\n      if (newEvent.eventStartTimeDate.numDaysFromCurrentDay < 31) {\n        let currentMonthEvents = this.state.currentMonthEvents;\n        console.log(currentMonthEvents);\n        currentMonthEvents.push(newEvent);\n        console.log(currentMonthEvents);\n        this.setState({\n          currentMonthEvents: currentMonthEvents\n        }, () => {\n          let eventTitleObj = _objectSpread({}, this.state.currentMonthEvents);\n\n          console.dir(JSON.stringify(eventTitleObj));\n        });\n      }\n    };\n  }\n\n  render() {\n    if (this.context.dataRequestDetails.typeOfData === 'EventsData') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          //newEvent\n          this.context.resetHandlerChoice(this.newEventHandler());\n          break;\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n}\n\nEventsData.contextType = StoreContext;\nexport default EventsData; // eventId: '',\n// eventTitle: '',\n// eventNote: '',\n// eventCategory: '',\n// eventStartTimeDate: '',\n// eventFinishTimeDate: '',\n// //later: If one-day event\n// eventDuration: '',\n// //Later:\n// //T -> schedule it on calendarData\n// //F--> put into unScheduledEventsList for that day\n// blockOffTimeSlot: false,\n// showStartTimeDate: false,\n// showFinishTimeDate: false,\n// eventDeadline: '',\n// //later: show multiday non-continous event\n// showMultidayNonContinousDate: false","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/EventsData.js"],"names":["React","Component","StoreContext","EventsData","constructor","props","state","currentMonthEvents","newEventHandler","console","log","newEvent","context","dataRequestDetails","value","dir","eventStartTimeDate","numDaysFromCurrentDay","push","setState","eventTitleObj","JSON","stringify","render","typeOfData","handlerChoice","resetHandlerChoice","contextType"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAInBC,KAJmB,GAIX;AACNC,MAAAA,kBAAkB,EAAE,CAAC,OAAD,EAAU,OAAV;AADd,KAJW;;AAAA,SASnBC,eATmB,GASD,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,kBAAX,CAA8B,CAA9B,CAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKJ,KAAL,CAAWC,kBAA9B;AACA,UAAII,QAAQ,GAAG,KAAKC,OAAL,CAAaC,kBAAb,CAAgCC,KAA/C;AACAL,MAAAA,OAAO,CAACM,GAAR,CAAYJ,QAAZ;;AACA,UAAIA,QAAQ,CAACK,kBAAT,CAA4BC,qBAA5B,GAAoD,EAAxD,EAA4D;AAC1D,YAAIV,kBAAkB,GAAG,KAAKD,KAAL,CAAWC,kBAApC;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,kBAAZ;AACAA,QAAAA,kBAAkB,CAACW,IAAnB,CAAwBP,QAAxB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,kBAAZ;AACA,aAAKY,QAAL,CACE;AACEZ,UAAAA,kBAAkB,EAAEA;AADtB,SADF,EAIE,MAAM;AACJ,cAAIa,aAAa,qBAAQ,KAAKd,KAAL,CAAWC,kBAAnB,CAAjB;;AACAE,UAAAA,OAAO,CAACM,GAAR,CAAYM,IAAI,CAACC,SAAL,CAAeF,aAAf,CAAZ;AACD,SAPH;AASD;AACF,KA7BkB;AAElB;;AA4BDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKX,OAAL,CAAaC,kBAAb,CAAgCW,UAAhC,KAA+C,YAAnD,EAAiE;AAC/D,cAAQ,KAAKZ,OAAL,CAAaC,kBAAb,CAAgCY,aAAxC;AACE,aAAK,GAAL;AAAU;AACR,eAAKb,OAAL,CAAac,kBAAb,CAAgC,KAAKlB,eAAL,EAAhC;AACA;AAHJ;AAKD;;AACD,WAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAxCgC;;AAA7BL,U,CASGwB,W,GAAczB,Y;AAkCvB,eAAeC,UAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport StoreContext from '../../context/StoreDataContext';\n\nclass EventsData extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    currentMonthEvents: ['hello', 'there']\n  };\n\n  static contextType = StoreContext;\n  newEventHandler = () => {\n    console.log(this.state.currentMonthEvents[1]);\n    console.log(typeof this.state.currentMonthEvents);\n    let newEvent = this.context.dataRequestDetails.value;\n    console.dir(newEvent);\n    if (newEvent.eventStartTimeDate.numDaysFromCurrentDay < 31) {\n      let currentMonthEvents = this.state.currentMonthEvents;\n      console.log(currentMonthEvents);\n      currentMonthEvents.push(newEvent);\n      console.log(currentMonthEvents);\n      this.setState(\n        {\n          currentMonthEvents: currentMonthEvents\n        },\n        () => {\n          let eventTitleObj = { ...this.state.currentMonthEvents };\n          console.dir(JSON.stringify(eventTitleObj));\n        }\n      );\n    }\n  };\n  render() {\n    if (this.context.dataRequestDetails.typeOfData === 'EventsData') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1': //newEvent\n          this.context.resetHandlerChoice(this.newEventHandler());\n          break;\n      }\n    }\n    return <React.Fragment></React.Fragment>;\n  }\n}\n\nexport default EventsData;\n\n// eventId: '',\n// eventTitle: '',\n// eventNote: '',\n// eventCategory: '',\n// eventStartTimeDate: '',\n// eventFinishTimeDate: '',\n// //later: If one-day event\n// eventDuration: '',\n// //Later:\n// //T -> schedule it on calendarData\n// //F--> put into unScheduledEventsList for that day\n// blockOffTimeSlot: false,\n// showStartTimeDate: false,\n// showFinishTimeDate: false,\n// eventDeadline: '',\n// //later: show multiday non-continous event\n// showMultidayNonContinousDate: false\n"]},"metadata":{},"sourceType":"module"}
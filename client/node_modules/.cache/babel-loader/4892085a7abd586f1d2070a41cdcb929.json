{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/containers/Store/UiData.js\";\nimport React, { Component } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css'; //import rightcockpitClasses from './RightCockpit.module.css';\n\nimport Cockpit from '../../components/Cockpit/Cockpit';\nimport Navbar from '../../components/Cockpit/Navbar/Navbar';\nimport Lessons from '../../components/ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContentOptions from '../../components/Cockpit/ViewContentOptions';\nimport NewTask from '../../components/Creation/newTask';\nimport DisplayContent from '../../components/Cockpit/displayContent'; // import DatePickerPicker from './DatePicker.js';\n//import Layout from '../../hoc/Layout';\n\nimport NewEvent from '../../components/Creation/NewEvent';\nimport RightCockpitContext from '../../context/RightCockpitContext';\nimport WeeklyTimeBudget from '../../components/Creation/WeeklyTimeBudget/WeeklyTimeBudget';\nimport StoreDataContext from '../../context/StoreDataContext';\n\nclass RightCockpit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [],\n      showEvents: false,\n      showDatePicker: false,\n      newTask: [],\n      newTaskTitle: '',\n      newTaskLocation: '',\n      numberOfGuests: 2,\n      contentChoice: '0',\n      showCockpit: true,\n      lastHeader: [],\n      lastTodayTasksHeader: [],\n      lastLessonHeader: [],\n      reRenderTasks: false,\n      syllabi: [],\n      contentChoiceHandlerTestNum: 7,\n      showLeftOverLessonsFromSyllabus: false\n    };\n\n    this.newTaskInfo2 = event => {\n      let newSyllabus = event.target.value;\n      const syllabi = this.state.syllabi;\n      syllabi.push(newSyllabus);\n      this.setState({\n        syllabi: syllabi\n      });\n      console.log(`this is this.state.syllabi after maxReact push ${JSON.stringify(this.state.syllabi, null, 2)}`);\n    };\n\n    this.contentViewHandler = event => {\n      let newViewChoice = event.target.value; //alert(`inside contentViewHandler ${newViewChoice}`);\n\n      this.setState({\n        contentChoice: newViewChoice\n      }); //Comparing new contentChoice with previous contentChoice\n      //if newContentChoice === oldContentChoice\n      //turn off the view\n      //alert(`contentChoice: ${this.state.contentChoice}`);\n\n      if (newViewChoice === this.state.contentChoice) {\n        return this.setState({\n          contentChoice: '0'\n        });\n      } else {\n        switch (newViewChoice) {\n          case '1':\n            //All tasks\n            //this.context.dataRequestHandler(event, 'tasks', '1', null, null);\n            break;\n\n          case '2':\n            //TodaysTasks\n            //this.context.dataRequestHandler(event, 'tasks', '2', null, null);\n            break;\n\n          case '3':\n            //Syllabus (for viewing List of syllabus\n            //reaching out to SyllabusData\n            //this.context.dataRequestHandler(event, 'syllabus', '1', null, null);\n            break;\n\n          case '4':\n            //view tasks for picked day\n            //this.context.dataRequestHandler(event, 'tasks', '', null, null);\n            break;\n\n          case '6':\n            //Adding Lessons from Syllabus\n            //this.context.dataRequestHandler(event, 'syllabus', '6', null, null);\n            //this.props.showLeftOverLessonsFromSyllabus();\n            break;\n\n          case '7':\n            //View MaxReact\n            //this.context.dataRequestHandler(event, 'syllabus', '8', null, null);\n            break;\n\n          case '8':\n            //newEvent submitForm, later change the typeOfData to event\n            // this.context.dataRequestHandler(\n            //   event,\n            //   'tasks',\n            //   '8',\n            //   'unAssignedTasksForWeek',\n            //   info\n            // );\n            break;\n\n          case '9':\n            //view tasks for picked day\n            // this.context.dataRequestHandler(event, 'tasks', '9', null, null);\n            // console.log('Inside case 9');\n            break;\n\n          case '11':\n            break;\n        }\n      }\n    };\n  }\n\n  render() {\n    if (this.context.dataRequestDetails.typeOfData === 'UiData') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '0':\n          this.context.resetHandlerChoice(event => this.contentViewHandler(event));\n          break;\n\n        case '1':\n          this.context.resetHandlerChoice(event => this.contentViewHandler(event));\n          break;\n\n        case '2':\n          break;\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"UiData Component\"));\n  }\n\n}\n\nRightCockpit.contextType = StoreDataContext;\nexport default RightCockpit;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/containers/Store/UiData.js"],"names":["React","Component","classes","Cockpit","Navbar","Lessons","ViewContentOptions","NewTask","DisplayContent","NewEvent","RightCockpitContext","WeeklyTimeBudget","StoreDataContext","RightCockpit","constructor","props","state","events","showEvents","showDatePicker","newTask","newTaskTitle","newTaskLocation","numberOfGuests","contentChoice","showCockpit","lastHeader","lastTodayTasksHeader","lastLessonHeader","reRenderTasks","syllabi","contentChoiceHandlerTestNum","showLeftOverLessonsFromSyllabus","newTaskInfo2","event","newSyllabus","target","value","push","setState","console","log","JSON","stringify","contentViewHandler","newViewChoice","render","context","dataRequestDetails","typeOfData","handlerChoice","resetHandlerChoice","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\n//import rightcockpitClasses from './RightCockpit.module.css';\nimport Cockpit from '../../components/Cockpit/Cockpit';\nimport Navbar from '../../components/Cockpit/Navbar/Navbar';\nimport Lessons from '../../components/ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContentOptions from '../../components/Cockpit/ViewContentOptions';\nimport NewTask from '../../components/Creation/newTask';\nimport DisplayContent from '../../components/Cockpit/displayContent';\n// import DatePickerPicker from './DatePicker.js';\n\n//import Layout from '../../hoc/Layout';\nimport NewEvent from '../../components/Creation/NewEvent';\nimport RightCockpitContext from '../../context/RightCockpitContext';\nimport WeeklyTimeBudget from '../../components/Creation/WeeklyTimeBudget/WeeklyTimeBudget';\nimport StoreDataContext from '../../context/StoreDataContext';\n\nclass RightCockpit extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    events: [],\n    showEvents: false,\n    showDatePicker: false,\n    newTask: [],\n    newTaskTitle: '',\n    newTaskLocation: '',\n    numberOfGuests: 2,\n    contentChoice: '0',\n    showCockpit: true,\n    lastHeader: [],\n    lastTodayTasksHeader: [],\n    lastLessonHeader: [],\n    reRenderTasks: false,\n    syllabi: [],\n    contentChoiceHandlerTestNum: 7,\n\n    showLeftOverLessonsFromSyllabus: false\n  };\n\n  newTaskInfo2 = event => {\n    let newSyllabus = event.target.value;\n\n    const syllabi = this.state.syllabi;\n    syllabi.push(newSyllabus);\n    this.setState({ syllabi: syllabi });\n    console.log(\n      `this is this.state.syllabi after maxReact push ${JSON.stringify(\n        this.state.syllabi,\n        null,\n        2\n      )}`\n    );\n  };\n\n  contentViewHandler = event => {\n    let newViewChoice = event.target.value;\n    //alert(`inside contentViewHandler ${newViewChoice}`);\n    this.setState({ contentChoice: newViewChoice });\n\n    //Comparing new contentChoice with previous contentChoice\n    //if newContentChoice === oldContentChoice\n    //turn off the view\n    //alert(`contentChoice: ${this.state.contentChoice}`);\n    if (newViewChoice === this.state.contentChoice) {\n      return this.setState({ contentChoice: '0' });\n    } else {\n      switch (newViewChoice) {\n        case '1': //All tasks\n          //this.context.dataRequestHandler(event, 'tasks', '1', null, null);\n\n          break;\n\n        case '2': //TodaysTasks\n          //this.context.dataRequestHandler(event, 'tasks', '2', null, null);\n\n          break;\n\n        case '3': //Syllabus (for viewing List of syllabus\n          //reaching out to SyllabusData\n\n          //this.context.dataRequestHandler(event, 'syllabus', '1', null, null);\n\n          break;\n        case '4': //view tasks for picked day\n          //this.context.dataRequestHandler(event, 'tasks', '', null, null);\n          break;\n\n        case '6': //Adding Lessons from Syllabus\n          //this.context.dataRequestHandler(event, 'syllabus', '6', null, null);\n          //this.props.showLeftOverLessonsFromSyllabus();\n          break;\n        case '7': //View MaxReact\n          //this.context.dataRequestHandler(event, 'syllabus', '8', null, null);\n\n          break;\n        case '8': //newEvent submitForm, later change the typeOfData to event\n          // this.context.dataRequestHandler(\n          //   event,\n          //   'tasks',\n          //   '8',\n          //   'unAssignedTasksForWeek',\n          //   info\n          // );\n          break;\n        case '9': //view tasks for picked day\n          // this.context.dataRequestHandler(event, 'tasks', '9', null, null);\n          // console.log('Inside case 9');\n\n          break;\n        case '11':\n          break;\n      }\n    }\n  };\n\n  static contextType = StoreDataContext;\n\n  render() {\n    if (this.context.dataRequestDetails.typeOfData === 'UiData') {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '0':\n          this.context.resetHandlerChoice(event =>\n            this.contentViewHandler(event)\n          );\n          break;\n        case '1':\n          this.context.resetHandlerChoice(event =>\n            this.contentViewHandler(event)\n          );\n          break;\n        case '2':\n          break;\n      }\n    }\n\n    return (\n      <React.Fragment>\n        <div>UiData Component</div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RightCockpit;\n"]},"metadata":{},"sourceType":"module"}
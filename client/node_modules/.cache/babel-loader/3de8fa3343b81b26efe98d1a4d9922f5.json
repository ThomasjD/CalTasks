{"ast":null,"code":"import _defineProperty from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/RightCockpit.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from '../../components/Cockpit/Cockpit';\nimport Cockpit2 from '../../components/Cockpit/Cockpit2';\nimport Navbar2 from '../../components/Cockpit/Navbar/Navbar2';\nimport Tasks from '../../components/Tasks/Tasks';\nimport TodayTasks from '../../components/TodayTasks/TodayTasks';\nimport Lessons from '../../components/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContent';\nimport NewTask from '../../components/Creation/newTask'; //import Syllabus from './Syllabus';\n\nclass RightCockpit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        id: 'qrwrwq',\n        todo: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      }, {\n        id: 'egewhw',\n        todo: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      }, {\n        id: 'asfasv',\n        todo: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }],\n      Monday: [{\n        id: 'morning',\n        timeOfDay: '',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon',\n        timeOfDay: '',\n        task: 'eat lunch'\n      }, {\n        id: 'evening',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      maxReact: [{\n        id: 'xvlwil',\n        lesson: '90. (for props Changes)',\n        completion: false\n      }, {\n        id: 'bbbskk',\n        lesson: '91. (for state Changes)',\n        completion: false\n      }, {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }],\n      contentChoice: '0',\n      showCockpit: true,\n      lastHeader: [],\n      lastTodayTasksHeader: [],\n      lastLessonHeader: [],\n      reRenderTasks: false\n    };\n\n    this.contentViewHandler = event => {\n      let newViewChoice = event.target.value;\n      console.log(newViewChoice); //Comparing new contentChoice with previous contentChoice\n      //if newContentChoice === oldContentChoice\n      //turn off the view\n\n      if (newViewChoice === this.state.contentChoice) {\n        return this.setState({\n          contentChoice: '0'\n        });\n      } else {\n        //Setting which Content view to show\n        //there will be only 1 contentChoice stored in state\n        switch (newViewChoice) {\n          case '0':\n            //only cockpit\n            this.setState({\n              contentChoice: '0'\n            });\n            break;\n\n          case '1':\n            //All tasks\n            this.setState({\n              contentChoice: '1'\n            });\n\n            if (this.state.tasks != 0) {\n              this.setState({\n                lastHeader: this.state.tasks[0]\n              });\n            } else {\n              this.setState({\n                lastHeader: this.state.lastHeader\n              });\n            }\n\n            break;\n\n          case '2':\n            //TodaysTasks\n            this.setState({\n              contentChoice: '2'\n            });\n\n            if (this.state.Monday != 0) {\n              this.setState({\n                lastTodayTasksHeader: this.state.Monday[0]\n              });\n            } else {\n              this.setState({\n                lastTodayTasksHeader: this.state.lastTodayTasksHeader\n              });\n            }\n\n            break;\n\n          case '3':\n            //Syllabus\n            this.setState({\n              contentChoice: '3'\n            });\n            console.log(\"this is lastLessonHeader \".concat(this.state.lastLessonHeader));\n\n            if (this.state.maxReact.length != 0) {\n              this.setState({\n                lastLessonHeader: this.state.maxReact[0]\n              });\n            } else {\n              this.setState({\n                lastLessonHeader: this.state.lastLessonHeader\n              });\n            }\n\n            console.log(\"this is lastLessonHeader \".concat(this.state.lastLessonHeader));\n            break;\n\n          case '4':\n            //New Task\n            this.setState({\n              contentChoice: '4'\n            });\n            break;\n        }\n      }\n    };\n\n    this.deleteTaskhandler = taskIndex => {\n      alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTasks: true\n      }); //get tasks array\n\n      const tasks = [...this.state.tasks]; //splice task of interst\n\n      tasks.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        tasks: tasks\n      }); //this.setState({ showTasksCounter: false });\n    };\n\n    this.deleteTodayTaskhandler = taskIndex => {\n      alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTodayTasks: true\n      }); //get tasks array\n\n      const Monday = [...this.state.Monday]; //splice task of interst\n\n      Monday.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        Monday: Monday\n      }); //this.setState({ showTasksCounter: false });\n    };\n\n    this.taskChangeHandler = (event, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      const foundTaskId = this.state.tasks.findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state.tasks[foundTaskId]);\n\n      updatedTask.todo = event.target.value; //pull out the states tasks array\n\n      const tasks = [...this.state.tasks]; //update the task with id of interest w/ new task description\n\n      tasks[foundTaskId] = updatedTask; //update the state\n\n      this.setState({\n        tasks: tasks\n      });\n    };\n\n    this.newTaskHandler = event => {\n      let deadline = event.target.newTask;\n      let deadlineValue = event.target.value;\n      console.log(deadlineValue); // let oldTasks = [...this.state.tasks];\n      // oldTasks.push({\n      //   id: 'qrwrwq',\n      //   todo: 'Find work',\n      //   deadline: 'Lunes',\n      //   location: 'Poplado'\n      // });\n      // let newTitle = event.target.value.newTaskTitle;\n      // console.log(`this is inside of app.js newTaskHandler ${newTitle}`);\n    };\n\n    this.todayTaskChangeHandler = (event, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      const foundTaskId = this.state.Monday.findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state.Monday[foundTaskId]);\n\n      updatedTask.task = event.target.value; //pull out the states tasks array\n\n      const Monday = [...this.state.Monday]; //update the task with id of interest w/ new task description\n\n      Monday[foundTaskId] = updatedTask; //update the state\n\n      this.setState({\n        Monday: Monday\n      });\n    };\n\n    this.deleteLessonhandler = taskIndex => {\n      alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTasks: true\n      }); //get tasks array\n\n      const lessons = [...this.state.maxReact]; //splice task of interst\n\n      lessons.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        maxReact: lessons\n      });\n    };\n\n    this.lessonChangeHandler = (event, taskChangeId) => {\n      const foundTaskId = this.state.maxReact.findIndex(currentId => {\n        return currentId.id === taskChangeId;\n      }); //createnew task item to put into array\n\n      const updatedLessons = _objectSpread({}, this.state.maxReact[foundTaskId]); //using updated values to define the lesson of the particular pulled out lesson\n\n\n      updatedLessons.lesson = event.target.value; //pull out of states maxReact array\n\n      const lessons = [...this.state.maxReact]; //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n\n      lessons[foundTaskId] = updatedLessons; //final update of lessons\n\n      this.setState({\n        maxReact: lessons\n      });\n    };\n  }\n\n  render() {\n    let viewOptions = null;\n\n    if (this.state.showCockpit == true) {\n      viewOptions = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Cockpit, {\n        title: this.props.appTitle,\n        allTasksClicked: this.toggleShowTasksHandler,\n        tasksLength: this.state.tasks.length,\n        todayTasksClicked: this.displayTodayScheduleHandler,\n        deleteCockpit: () => {\n          this.setState({\n            showCockpit: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }));\n    }\n\n    let displayContent = null;\n\n    switch (this.state.contentChoice) {\n      case '0':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \"Hello Thomas.... What would you like to see?\"), React.createElement(\"img\", {\n          className: classes.logoImage,\n          src: require('../../Assets/cockpitIcon.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }));\n        break;\n\n      case '1':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, \"tasks\\xA0has\\xA0#\\xA0\", this.state.tasks.length), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Tasks, {\n          reRenderTasks: this.state.reRenderTasks,\n          tasks: this.state.tasks,\n          clicked: this.deleteTaskhandler,\n          changed: this.taskChangeHandler,\n          lastHeader: this.state.lastHeader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n        break;\n\n      case '2':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(TodayTasks, {\n          reRenderTodayTasks: this.state.reRenderTodayTasks,\n          monday: this.state.Monday,\n          clicked: this.deleteTodayTaskhandler,\n          changed: this.todayTaskChangeHandler,\n          lastTodayTasksHeader: this.state.lastTodayTasksHeader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n        break;\n\n      case '3':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, \"tasks has # \", this.state.maxReact.length), React.createElement(Lessons, {\n          reRender: this.state.showLessons,\n          lessons: this.state.maxReact,\n          clicked: this.deleteLessonhandler,\n          changed: this.lessonChangeHandler,\n          lastLessonHeader: this.state.lastLessonHeader,\n          lessonsLength: this.state.maxReact.length,\n          deleteCockpit2: () => {\n            this.setState({\n              showCockpit2: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }));\n        break;\n\n      case '4':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, React.createElement(NewTask // newTaskTitle = {}\n        // category = {}\n        // location = {}\n        , {\n          newTaskInfo: event => {\n            this.newTaskHandler(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }));\n        break;\n    } // <React.Fragment>\n\n\n    {\n      /* <Cockpit2\n      showSyllabusFromNav={this.state.showSyllabusFromNav}\n      showSyllabus={this.state.showSyllabus}\n      tasks={this.state.tasks}\n      lastHeader={this.state.lastLessonHeader}\n      deleteCockpit2={() => {\n        this.setState({ showCockpit2: false });\n      }}\n      /> */\n    }\n    let displayCockpit = React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex flex-row \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card text-white bg-info m-1 p-1 col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, viewOptions)), React.createElement(\"div\", {\n      className: \"card bg-light m-1 p-1 col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, displayContent))));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(Navbar2, {\n      newTaskInfoComing: event => this.newTaskHandler(event),\n      title: this.props.appTitle,\n      tasksLength: this.state.tasks.length,\n      clickedSyllabus: event => this.contentViewHandler(event),\n      clickedNewTask: event => this.contentViewHandler(event),\n      deleteCockpit: () => {\n        this.setState({\n          showCockpit: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, this.props.newTaskInfoComing), React.createElement(ViewContent, {\n      viewContent: event => this.contentViewHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), displayCockpit);\n  }\n\n}\n\nexport default RightCockpit; //{displayOptions}\n//<Syllabus syllabus={this.setState} />\n//","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/RightCockpit/RightCockpit.js"],"names":["React","Component","classes","Cockpit","Cockpit2","Navbar2","Tasks","TodayTasks","Lessons","ViewContent","NewTask","RightCockpit","state","tasks","id","todo","deadline","location","Monday","timeOfDay","task","maxReact","lesson","completion","contentChoice","showCockpit","lastHeader","lastTodayTasksHeader","lastLessonHeader","reRenderTasks","contentViewHandler","event","newViewChoice","target","value","console","log","setState","length","deleteTaskhandler","taskIndex","alert","splice","deleteTodayTaskhandler","reRenderTodayTasks","taskChangeHandler","taskChangedId","foundTaskId","findIndex","currentId","updatedTask","newTaskHandler","newTask","deadlineValue","todayTaskChangeHandler","deleteLessonhandler","lessons","lessonChangeHandler","taskChangeId","updatedLessons","render","viewOptions","props","appTitle","toggleShowTasksHandler","displayTodayScheduleHandler","displayContent","logoImage","require","showLessons","showCockpit2","displayCockpit","newTaskInfoComing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from '../../components/Cockpit/Cockpit';\nimport Cockpit2 from '../../components/Cockpit/Cockpit2';\nimport Navbar2 from '../../components/Cockpit/Navbar/Navbar2';\nimport Tasks from '../../components/Tasks/Tasks';\nimport TodayTasks from '../../components/TodayTasks/TodayTasks';\nimport Lessons from '../../components/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContent';\nimport NewTask from '../../components/Creation/newTask';\n//import Syllabus from './Syllabus';\n\nclass RightCockpit extends Component {\n  state = {\n    tasks: [\n      {\n        id: 'qrwrwq',\n        todo: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      },\n      {\n        id: 'egewhw',\n        todo: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      },\n      {\n        id: 'asfasv',\n        todo: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }\n    ],\n    Monday: [\n      { id: 'morning', timeOfDay: '', task: 'comprar comida' },\n      { id: 'afternoon', timeOfDay: '', task: 'eat lunch' },\n      { id: 'evening', timeOfDay: '', task: 'play ball' }\n    ],\n\n    maxReact: [\n      { id: 'xvlwil', lesson: '90. (for props Changes)', completion: false },\n      { id: 'bbbskk', lesson: '91. (for state Changes)', completion: false },\n      {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }\n    ],\n    contentChoice: '0',\n    showCockpit: true,\n    lastHeader: [],\n    lastTodayTasksHeader: [],\n    lastLessonHeader: [],\n    reRenderTasks: false\n  };\n\n  contentViewHandler = event => {\n    let newViewChoice = event.target.value;\n    console.log(newViewChoice);\n    //Comparing new contentChoice with previous contentChoice\n    //if newContentChoice === oldContentChoice\n    //turn off the view\n    if (newViewChoice === this.state.contentChoice) {\n      return this.setState({ contentChoice: '0' });\n    } else {\n      //Setting which Content view to show\n      //there will be only 1 contentChoice stored in state\n      switch (newViewChoice) {\n        case '0': //only cockpit\n          this.setState({ contentChoice: '0' });\n          break;\n\n        case '1': //All tasks\n          this.setState({ contentChoice: '1' });\n          if (this.state.tasks != 0) {\n            this.setState({ lastHeader: this.state.tasks[0] });\n          } else {\n            this.setState({ lastHeader: this.state.lastHeader });\n          }\n          break;\n\n        case '2': //TodaysTasks\n          this.setState({ contentChoice: '2' });\n          if (this.state.Monday != 0) {\n            this.setState({ lastTodayTasksHeader: this.state.Monday[0] });\n          } else {\n            this.setState({\n              lastTodayTasksHeader: this.state.lastTodayTasksHeader\n            });\n          }\n          break;\n\n        case '3': //Syllabus\n          this.setState({ contentChoice: '3' });\n          console.log(\n            `this is lastLessonHeader ${this.state.lastLessonHeader}`\n          );\n          if (this.state.maxReact.length != 0) {\n            this.setState({ lastLessonHeader: this.state.maxReact[0] });\n          } else {\n            this.setState({ lastLessonHeader: this.state.lastLessonHeader });\n          }\n          console.log(\n            `this is lastLessonHeader ${this.state.lastLessonHeader}`\n          );\n          break;\n        case '4': //New Task\n          this.setState({ contentChoice: '4' });\n          break;\n      }\n    }\n  };\n\n  //delete a task\n  deleteTaskhandler = taskIndex => {\n    alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTasks: true });\n\n    //get tasks array\n    const tasks = [...this.state.tasks];\n\n    //splice task of interst\n    tasks.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ tasks: tasks });\n\n    //this.setState({ showTasksCounter: false });\n  };\n\n  deleteTodayTaskhandler = taskIndex => {\n    alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTodayTasks: true });\n\n    //get tasks array\n    const Monday = [...this.state.Monday];\n\n    //splice task of interst\n    Monday.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ Monday: Monday });\n\n    //this.setState({ showTasksCounter: false });\n  };\n\n  //dynamic edit task\n  taskChangeHandler = (event, taskChangedId) => {\n    //find the task that matches the taskChangedId\n    const foundTaskId = this.state.tasks.findIndex(currentId => {\n      return currentId.id === taskChangedId;\n    });\n\n    //create new task item that we will put into array\n    const updatedTask = { ...this.state.tasks[foundTaskId] };\n    updatedTask.todo = event.target.value;\n\n    //pull out the states tasks array\n    const tasks = [...this.state.tasks];\n\n    //update the task with id of interest w/ new task description\n    tasks[foundTaskId] = updatedTask;\n\n    //update the state\n    this.setState({ tasks: tasks });\n  };\n\n  //dynamic edit task for Today (Monday)\n  newTaskHandler = event => {\n    let deadline = event.target.newTask;\n    let deadlineValue = event.target.value;\n    console.log(deadlineValue);\n\n    // let oldTasks = [...this.state.tasks];\n    // oldTasks.push({\n    //   id: 'qrwrwq',\n    //   todo: 'Find work',\n    //   deadline: 'Lunes',\n    //   location: 'Poplado'\n    // });\n\n    // let newTitle = event.target.value.newTaskTitle;\n    // console.log(`this is inside of app.js newTaskHandler ${newTitle}`);\n  };\n\n  todayTaskChangeHandler = (event, taskChangedId) => {\n    //find the task that matches the taskChangedId\n    const foundTaskId = this.state.Monday.findIndex(currentId => {\n      return currentId.id === taskChangedId;\n    });\n\n    //create new task item that we will put into array\n    const updatedTask = { ...this.state.Monday[foundTaskId] };\n\n    updatedTask.task = event.target.value;\n\n    //pull out the states tasks array\n    const Monday = [...this.state.Monday];\n\n    //update the task with id of interest w/ new task description\n    Monday[foundTaskId] = updatedTask;\n\n    //update the state\n    this.setState({ Monday: Monday });\n  };\n\n  deleteLessonhandler = taskIndex => {\n    alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTasks: true });\n\n    //get tasks array\n    const lessons = [...this.state.maxReact];\n\n    //splice task of interst\n    lessons.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ maxReact: lessons });\n  };\n\n  lessonChangeHandler = (event, taskChangeId) => {\n    const foundTaskId = this.state.maxReact.findIndex(currentId => {\n      return currentId.id === taskChangeId;\n    });\n\n    //createnew task item to put into array\n    const updatedLessons = { ...this.state.maxReact[foundTaskId] };\n\n    //using updated values to define the lesson of the particular pulled out lesson\n    updatedLessons.lesson = event.target.value;\n\n    //pull out of states maxReact array\n    const lessons = [...this.state.maxReact];\n\n    //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n    lessons[foundTaskId] = updatedLessons;\n\n    //final update of lessons\n    this.setState({ maxReact: lessons });\n  };\n\n  render() {\n    let viewOptions = null;\n    if (this.state.showCockpit == true) {\n      viewOptions = (\n        <React.Fragment>\n          <Cockpit\n            title={this.props.appTitle}\n            allTasksClicked={this.toggleShowTasksHandler}\n            tasksLength={this.state.tasks.length}\n            todayTasksClicked={this.displayTodayScheduleHandler}\n            deleteCockpit={() => {\n              this.setState({ showCockpit: false });\n            }}\n          />\n        </React.Fragment>\n      );\n    }\n\n    let displayContent = null;\n\n    switch (this.state.contentChoice) {\n      case '0':\n        displayContent = (\n          <React.Fragment>\n            <h3>Hello Thomas.... What would you like to see?</h3>\n            <img\n              className={classes.logoImage}\n              src={require('../../Assets/cockpitIcon.png')}\n            />\n          </React.Fragment>\n        );\n        break;\n\n      case '1':\n        displayContent = (\n          <React.Fragment>\n            <p>tasks has # {this.state.tasks.length}</p>\n                        \n            <Tasks\n              reRenderTasks={this.state.reRenderTasks}\n              tasks={this.state.tasks}\n              clicked={this.deleteTaskhandler}\n              changed={this.taskChangeHandler}\n              lastHeader={this.state.lastHeader}\n            />\n                      \n          </React.Fragment>\n        );\n        break;\n\n      case '2':\n        displayContent = (\n          <React.Fragment>\n                        \n            <TodayTasks\n              reRenderTodayTasks={this.state.reRenderTodayTasks}\n              monday={this.state.Monday}\n              clicked={this.deleteTodayTaskhandler}\n              changed={this.todayTaskChangeHandler}\n              lastTodayTasksHeader={this.state.lastTodayTasksHeader}\n            />\n                      \n          </React.Fragment>\n        );\n        break;\n\n      case '3':\n        displayContent = (\n          <React.Fragment>\n            <p>tasks has # {this.state.maxReact.length}</p>\n            <Lessons\n              reRender={this.state.showLessons}\n              lessons={this.state.maxReact}\n              clicked={this.deleteLessonhandler}\n              changed={this.lessonChangeHandler}\n              lastLessonHeader={this.state.lastLessonHeader}\n              lessonsLength={this.state.maxReact.length}\n              deleteCockpit2={() => {\n                this.setState({ showCockpit2: false });\n              }}\n            />\n          </React.Fragment>\n        );\n        break;\n      case '4':\n        displayContent = (\n          <React.Fragment>\n            <NewTask\n              // newTaskTitle = {}\n              // category = {}\n              // location = {}\n              newTaskInfo={event => {\n                this.newTaskHandler(event);\n              }}\n            />\n          </React.Fragment>\n        );\n        break;\n    }\n\n    // <React.Fragment>\n    {\n      /* <Cockpit2\n      showSyllabusFromNav={this.state.showSyllabusFromNav}\n      showSyllabus={this.state.showSyllabus}\n      tasks={this.state.tasks}\n      lastHeader={this.state.lastLessonHeader}\n      deleteCockpit2={() => {\n        this.setState({ showCockpit2: false });\n      }}\n    /> */\n    }\n\n    let displayCockpit = (\n      <div className=\"container\">\n        <div className=\"d-flex flex-row \">\n          <div className=\"card text-white bg-info m-1 p-1 col-3\">\n            <div className=\"p-1\">{viewOptions}</div>\n          </div>\n          <div className=\"card bg-light m-1 p-1 col-9\">\n            <div className=\"p-1 \">{displayContent}</div>\n          </div>\n        </div>\n      </div>\n    );\n    return (\n      <React.Fragment>\n        <Navbar2\n          newTaskInfoComing={event => this.newTaskHandler(event)}\n          title={this.props.appTitle}\n          tasksLength={this.state.tasks.length}\n          clickedSyllabus={event => this.contentViewHandler(event)}\n          clickedNewTask={event => this.contentViewHandler(event)}\n          deleteCockpit={() => {\n            this.setState({ showCockpit: false });\n          }}\n        >\n          {this.props.newTaskInfoComing}\n        </Navbar2>\n\n        <ViewContent viewContent={event => this.contentViewHandler(event)} />\n        {displayCockpit}\n      </React.Fragment>\n    );\n  }\n}\nexport default RightCockpit;\n//{displayOptions}\n//<Syllabus syllabus={this.setState} />\n\n//\n"]},"metadata":{},"sourceType":"module"}
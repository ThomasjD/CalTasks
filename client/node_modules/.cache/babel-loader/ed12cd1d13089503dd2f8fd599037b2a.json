{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/displayContent.js\";\nimport React, { Component, useContext } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from './Cockpit';\nimport Tasks from '../ViewContent/Tasks/Tasks';\nimport TodayTasks from '../ViewContent/TodayTasks/TodayTasks';\nimport Lessons from '../ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContentOptions';\nimport NewTask from '../Creation/newTask';\nimport NewEvent from '../Creation/NewEvent';\nimport NewSyllabus from '../Creation/newSyllabus';\nimport StoreDataContext from '../../context/StoreDataContext';\nimport statusClass from '../../components/ViewContent/Tasks/Tasks.module.css';\nimport Syllabi from '../ViewContent/Syllabus/Syllabi';\nimport PickedDayTasks from '../ViewContent/PickedDayTasks/PickedDayTasks';\nimport SyllabiList from '../ViewContent/Syllabus/SyllabiList';\nimport DisplayPickedSyllabus from '../ViewContent/Syllabus/displayPickedSyllabus'; //import TimeBudgetForWeek from '../';\n\nconst DisplayContent = props => {\n  const storeDataContext = useContext(StoreDataContext); // const requestDataHandler = event => {\n  //   let contentChoice = event.target.value; //'' number used in displayContent component\n  //   let newContentChoice = '';\n  //   let typeOfData = ''; //string: syllabus,tasks,events,objectives\n  //   let handlerChoice = ''; //string: '#' handler inside of database\n  //   let dataLocation = ''; // string: where obj found inside database\n  //   let infoType = ''; //string: index/id/\n  //   let info = ''; //string: actual info\n  //   //let today = calendarObj();\n  //   let dataRequestMessage = {\n  //     typeOfData: typeOfData,\n  //     handlerChoice: handlerChoice,\n  //     dataLocation: dataLocation,\n  //     infoType: infoType,\n  //     info: info\n  //   };\n  //   let contentViewObject = {\n  //     target: {\n  //       value: newContentChoice\n  //     }\n  //   };\n  //   storeDataContext.dataRequestHandler(event, dataRequestMessage);\n  //   props.contentViewHandler(contentViewObject);\n  // };\n\n  let displayContent = null;\n\n  switch (storeDataContext.contentChoice) {\n    case '0':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Hello Thomas.... What would you like to see?\"), React.createElement(\"img\", {\n        className: classes.logoImage,\n        src: require('../../Assets/cockpitIcon.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n      break;\n\n    case '1':\n      if (storeDataContext.tasksData.tasksData) {}\n\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, storeDataContext.tasksData.tasksData ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        everything: props.everything,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })) : null, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '2':\n      //Today's Tasks\n      console.log(props.everything);\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(TodayTasks, {\n        everything: props.everything,\n        reRenderTodayTasks: props.everything.reRenderTodayTasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '3':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, storeDataContext.everythingSyllabus.syllabusData ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(SyllabiList, {\n        everything: props.everything,\n        lessons: storeDataContext.everythingSyllabus.syllabusData.maxReact,\n        lessonsLength: storeDataContext.everythingSyllabus.syllabusData.maxReact.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })) : null);\n      /*\n        clicked={(event, index, handlerType) =>\n                    props.deleteLessonHandler(event, index, handlerType)\n                  }\n        */\n\n      break;\n\n    case '4':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(NewTask, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n      break;\n\n    case '5':\n      //coming from NavBar\n      //after submition will show calendar and where that will placed\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(NewEvent, {\n        contentViewHandler: storeDataContext.contentViewHandler,\n        contentChoice: storeDataContext.contentChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n      break;\n    //showLeftOverLessonsFromSyllabus: for Table Header (add/delete this lesson message)\n\n    case '6':\n      //Adding syllabus lesson from maxreact to nonscheduled\n      if (storeDataContext.everythingSyllabus.syllabusData) {\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(NewSyllabus, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }), storeDataContext.everythingSyllabus.syllabusData.showLeftOverLessonsFromSyllabus ? React.createElement(Lessons, {\n          showLeftOverLessonsFromSyllabus: storeDataContext.everythingSyllabus.syllabusData.showLeftOverLessonsFromSyllabus,\n          contentChoice: storeDataContext.contentChoice,\n          everything: props.everything // showLeftOverLessonsFromOrigSyllabus={\n          //   this.props.everythingSyllabus.syllabusData\n          //     .showLeftOverLessonsFromSyllabus\n          // }\n          ,\n          lessons: storeDataContext.everythingSyllabus.syllabusData.maxReactWorkLeft // changed={(event, handlerType, id) =>\n          //   this.props.leftOverLessonChangeHandler(event, handlerType, id)\n          // }\n          ,\n          lastLessonHeader: storeDataContext.everythingSyllabus.syllabusData.lastLessonHeader,\n          lessonsLength: storeDataContext.everythingSyllabus.syllabusData.maxReactWorkLeft.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }) : null);\n      }\n\n      break;\n\n    case '7':\n      //display a list of syllabi\n      if (storeDataContext.everythingSyllabus.syllabusData) {\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(Syllabi, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }));\n      }\n\n      break;\n\n    case '8':\n      break;\n\n    case '9':\n      //View tasks according to chosen day\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"\\xA0\", storeDataContext.tasksData.tasksData ? React.createElement(PickedDayTasks, {\n        everything: props.everything,\n        contentChoice: storeDataContext.contentChoice //dataLocation={tasksContext.dataRequestDetails.value}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }) : null, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '10':\n      //View syllabus according to chosen day\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, storeDataContext.everythingSyllabus.syllabusData ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(DisplayPickedSyllabus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })) : null);\n      break;\n\n    case '11':\n      //View tasks according to chosen day\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"\\xA0\", storeDataContext.tasksData.tasksData ? React.createElement(PickedDayTasks, {\n        everything: props.everything,\n        contentChoice: storeDataContext.contentChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }) : null, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '12':\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, displayContent);\n};\n\nexport default DisplayContent;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/displayContent.js"],"names":["React","Component","useContext","classes","Cockpit","Tasks","TodayTasks","Lessons","ViewContent","NewTask","NewEvent","NewSyllabus","StoreDataContext","statusClass","Syllabi","PickedDayTasks","SyllabiList","DisplayPickedSyllabus","DisplayContent","props","storeDataContext","displayContent","contentChoice","logoImage","require","tasksData","everything","console","log","reRenderTodayTasks","everythingSyllabus","syllabusData","maxReact","length","contentViewHandler","showLeftOverLessonsFromSyllabus","maxReactWorkLeft","lastLessonHeader"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from './Cockpit';\nimport Tasks from '../ViewContent/Tasks/Tasks';\nimport TodayTasks from '../ViewContent/TodayTasks/TodayTasks';\nimport Lessons from '../ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContentOptions';\nimport NewTask from '../Creation/newTask';\nimport NewEvent from '../Creation/NewEvent';\nimport NewSyllabus from '../Creation/newSyllabus';\nimport StoreDataContext from '../../context/StoreDataContext';\nimport statusClass from '../../components/ViewContent/Tasks/Tasks.module.css';\nimport Syllabi from '../ViewContent/Syllabus/Syllabi';\nimport PickedDayTasks from '../ViewContent/PickedDayTasks/PickedDayTasks';\nimport SyllabiList from '../ViewContent/Syllabus/SyllabiList';\nimport DisplayPickedSyllabus from '../ViewContent/Syllabus/displayPickedSyllabus';\n//import TimeBudgetForWeek from '../';\n\nconst DisplayContent = props => {\n  const storeDataContext = useContext(StoreDataContext);\n\n  // const requestDataHandler = event => {\n  //   let contentChoice = event.target.value; //'' number used in displayContent component\n  //   let newContentChoice = '';\n  //   let typeOfData = ''; //string: syllabus,tasks,events,objectives\n  //   let handlerChoice = ''; //string: '#' handler inside of database\n  //   let dataLocation = ''; // string: where obj found inside database\n  //   let infoType = ''; //string: index/id/\n  //   let info = ''; //string: actual info\n  //   //let today = calendarObj();\n\n  //   let dataRequestMessage = {\n  //     typeOfData: typeOfData,\n  //     handlerChoice: handlerChoice,\n  //     dataLocation: dataLocation,\n  //     infoType: infoType,\n  //     info: info\n  //   };\n\n  //   let contentViewObject = {\n  //     target: {\n  //       value: newContentChoice\n  //     }\n  //   };\n\n  //   storeDataContext.dataRequestHandler(event, dataRequestMessage);\n\n  //   props.contentViewHandler(contentViewObject);\n  // };\n\n  let displayContent = null;\n\n  switch (storeDataContext.contentChoice) {\n    case '0':\n      displayContent = (\n        <React.Fragment>\n          <h3>Hello Thomas.... What would you like to see?</h3>\n          <img\n            className={classes.logoImage}\n            src={require('../../Assets/cockpitIcon.png')}\n          />\n        </React.Fragment>\n      );\n      break;\n\n    case '1':\n      if (storeDataContext.tasksData.tasksData) {\n      }\n\n      displayContent = (\n        <React.Fragment>\n          {storeDataContext.tasksData.tasksData ? (\n            <div>\n              <Tasks everything={props.everything} />\n            </div>\n          ) : null}\n                                 \n        </React.Fragment>\n      );\n      break;\n\n    case '2': //Today's Tasks\n      console.log(props.everything);\n      displayContent = (\n        <React.Fragment>\n                      \n          <TodayTasks\n            everything={props.everything}\n            reRenderTodayTasks={props.everything.reRenderTodayTasks}\n          />\n                    \n        </React.Fragment>\n      );\n      break;\n\n    case '3':\n      displayContent = (\n        <React.Fragment>\n          {storeDataContext.everythingSyllabus.syllabusData ? (\n            <div>\n              <SyllabiList\n                everything={props.everything}\n                lessons={\n                  storeDataContext.everythingSyllabus.syllabusData.maxReact\n                }\n                lessonsLength={\n                  storeDataContext.everythingSyllabus.syllabusData.maxReact\n                    .length\n                }\n              />\n            </div>\n          ) : null}\n        </React.Fragment>\n      );\n      /*\n        clicked={(event, index, handlerType) =>\n                    props.deleteLessonHandler(event, index, handlerType)\n                  }\n        */\n\n      break;\n    case '4':\n      displayContent = (\n        <React.Fragment>\n          <NewTask />\n        </React.Fragment>\n      );\n      break;\n    case '5': //coming from NavBar\n      //after submition will show calendar and where that will placed\n      displayContent = (\n        <React.Fragment>\n          <NewEvent\n            contentViewHandler={storeDataContext.contentViewHandler}\n            contentChoice={storeDataContext.contentChoice}\n          />\n        </React.Fragment>\n      );\n      break;\n    //showLeftOverLessonsFromSyllabus: for Table Header (add/delete this lesson message)\n\n    case '6': //Adding syllabus lesson from maxreact to nonscheduled\n      if (storeDataContext.everythingSyllabus.syllabusData) {\n        displayContent = (\n          <React.Fragment>\n            <NewSyllabus />\n\n            {storeDataContext.everythingSyllabus.syllabusData\n              .showLeftOverLessonsFromSyllabus ? (\n              <Lessons\n                showLeftOverLessonsFromSyllabus={\n                  storeDataContext.everythingSyllabus.syllabusData\n                    .showLeftOverLessonsFromSyllabus\n                }\n                contentChoice={storeDataContext.contentChoice}\n                everything={props.everything}\n                // showLeftOverLessonsFromOrigSyllabus={\n                //   this.props.everythingSyllabus.syllabusData\n                //     .showLeftOverLessonsFromSyllabus\n                // }\n                lessons={\n                  storeDataContext.everythingSyllabus.syllabusData\n                    .maxReactWorkLeft\n                }\n                // changed={(event, handlerType, id) =>\n                //   this.props.leftOverLessonChangeHandler(event, handlerType, id)\n                // }\n                lastLessonHeader={\n                  storeDataContext.everythingSyllabus.syllabusData\n                    .lastLessonHeader\n                }\n                lessonsLength={\n                  storeDataContext.everythingSyllabus.syllabusData\n                    .maxReactWorkLeft.length\n                }\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      }\n\n      break;\n    case '7': //display a list of syllabi\n      if (storeDataContext.everythingSyllabus.syllabusData) {\n        displayContent = (\n          <React.Fragment>\n            <Syllabi />\n          </React.Fragment>\n        );\n      }\n\n      break;\n    case '8':\n      break;\n    case '9': //View tasks according to chosen day\n      displayContent = (\n        <React.Fragment>\n           \n          {storeDataContext.tasksData.tasksData ? (\n            <PickedDayTasks\n              everything={props.everything}\n              contentChoice={storeDataContext.contentChoice}\n              //dataLocation={tasksContext.dataRequestDetails.value}\n            />\n          ) : null}\n                    \n        </React.Fragment>\n      );\n\n      break;\n    case '10': //View syllabus according to chosen day\n      displayContent = (\n        <React.Fragment>\n          {storeDataContext.everythingSyllabus.syllabusData ? (\n            <div>\n              <DisplayPickedSyllabus />\n            </div>\n          ) : null}\n        </React.Fragment>\n      );\n      break;\n    case '11': //View tasks according to chosen day\n      displayContent = (\n        <React.Fragment>\n           \n          {storeDataContext.tasksData.tasksData ? (\n            <PickedDayTasks\n              everything={props.everything}\n              contentChoice={storeDataContext.contentChoice}\n            />\n          ) : null}\n                    \n        </React.Fragment>\n      );\n\n      break;\n\n    case '12':\n      break;\n  }\n\n  return <div>{displayContent}</div>;\n};\n\nexport default DisplayContent;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/Store/TasksData.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react'; //import classes from '../../components/Cockpit/Cockpit.module.css';\n\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\n\nclass TasksData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataBaseName: 'tasks',\n      unAssignedTasksForWeek: [{\n        id: 'qrwrwq',\n        todo: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      }, {\n        id: 'egewhw',\n        todo: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      }, {\n        id: 'asfasv',\n        todo: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }],\n      Monday: [{\n        id: 'morning1',\n        timeOfDay: '',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon1',\n        timeOfDay: '',\n        task: 'eat lunch'\n      }, {\n        id: 'evening1',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      Tuesday: [{\n        id: 'morning2',\n        timeOfDay: '',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon2',\n        timeOfDay: '',\n        task: 'eat lunch'\n      }, {\n        id: 'evening2',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      Wednesday: [{\n        id: 'morning3',\n        timeOfDay: '',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon3',\n        timeOfDay: '',\n        task: 'eat lunch'\n      }, {\n        id: 'evening3',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      Thursday: [{\n        id: 'morning4',\n        timeOfDay: '',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon4',\n        timeOfDay: '',\n        task: 'eat lunch'\n      }, {\n        id: 'evening4',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      Friday: [{\n        id: 'morning5',\n        timeOfDay: '',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon5',\n        timeOfDay: '',\n        task: 'eat lunch'\n      }, {\n        id: 'evening5',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      Saturday: [{\n        id: 'morning6',\n        timeOfDay: '',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon6',\n        timeOfDay: '',\n        task: 'eat lunch'\n      }, {\n        id: 'evening6',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      Sunday: [{\n        id: 'morning7',\n        timeOfDay: '',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon7',\n        timeOfDay: '',\n        task: 'eat lunch'\n      }, {\n        id: 'evening7',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      word: 'red',\n      reRenderTasks: false\n    };\n\n    this.lastTaskHeaderHandler = () => {\n      switch (this.context.dataRequestDetails.handlerChoice) {\n        case '1':\n          if (this.state.unAssignedTasksForWeek.length != 0) {\n            this.setState({\n              lastTaskHeader: this.state.unAssignedTasksForWeek[0]\n            }, () => {\n              this.props.dataReceiverHandler(this.state);\n            });\n          } else {\n            this.setState({\n              lastTaskHeader: this.state.lastTaskHeader\n            }, () => {\n              this.props.dataReceiverHandler(this.state);\n            });\n          }\n\n          break;\n\n        case '6':\n          // if (this.state.maxReactWorkLeft.length != 0) {\n          //   this.setState(\n          //     {\n          //       lastLessonHeader: this.state.maxReactWorkLeft[0]\n          //     },\n          //     () => {\n          //       this.props.receiveSyllabusDataHandler(this.state);\n          //     }\n          //   );\n          // } else {\n          //   this.setState(\n          //     { lastLessonHeader: this.state.lastLessonHeader },\n          //     () => {\n          //       this.props.receiveSyllabusDataHandler(this.state);\n          //     }\n          //   );\n          // }\n          break;\n      }\n    };\n\n    this.addTaskHandler = e => {\n      console.log('hey I am in addTaskHandler');\n      console.log(e.task); //need to fix this in newTask so that it automaticly picks up the default value of the radio button\n\n      let location = !e.task.location ? e.task.location = 'Popblado' : null;\n      console.log(\"target location is \".concat(location));\n      let newestEvent = [...this.state.tasks, e.task]; //console.log(newestEvent[0].todo);\n\n      this.setState({\n        tasks: newestEvent\n      }); //this.setState({ showEvents: true });\n    };\n\n    this.deleteTaskFromUnAssignedTasksForWeekHandler = taskIndex => {\n      alert('Are you sure you want to delete this Task? Mate');\n      let currentUnassignedTasksForWeek = [...this.state.unAssignedTasksForWeek]; //alert('Are you sure you want to delete this Task? Mate2');\n\n      currentUnassignedTasksForWeek.splice(taskIndex, 1); //alert(currentUnassignedTasksForWeek);\n\n      console.log(currentUnassignedTasksForWeek);\n      this.setState({\n        unAssignedTasksForWeek: currentUnassignedTasksForWeek,\n        receivedData: 'YES'\n      }, () => {\n        console.log(this.state.unAssignedTasksForWeek);\n      }, () => this.context.receiveSyllabusDataHandler(this.state));\n    };\n\n    this.changeTaskFromUnAssignedTasksForWeekHandler = (lessonValue, taskChangeId) => {\n      console.log('what');\n      console.log(\"Inside of lessonChangeHandler id: \".concat(taskChangeId)); //Find the index of the lessons that matches the id sent in\n\n      const foundTaskIndex = this.state.unAssignedTasksForWeek.findIndex(currentId => {\n        return currentId.id === taskChangeId;\n      }); //createnew task item to put into array\n\n      const updatedLessons = _objectSpread({}, this.state.unAssignedTasksForWeek[foundTaskIndex]); //using updated values to define the lesson of the particular pulled out lesson\n      //updatedLessons.lesson = event.target.value;\n\n\n      updatedLessons.lesson = lessonValue; //pull out of states maxReact array\n\n      const lessons = [...this.state.unAssignedTasksForWeek]; //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n\n      lessons[foundTaskIndex] = updatedLessons; //final update of lessons\n\n      this.setState({\n        unAssignedTasksForWeek: lessons\n      }, () => this.props.receiveSyllabusDataHandler(this.state));\n    };\n  }\n\n  render() {\n    //this.props.data(this.state.word);\n    let displayTasksContext = null; // if (this.context.dataRequestDetails == true) {\n    //   console.log('Inside TasksData dataRequestDetails: ');\n    // }\n    // this.context.dataRequestDetails\n    //   ? (displayTasksContext = <div> hello tasksData</div>)\n    //   : null;\n\n    if (this.context.dataRequestDetails.handlerChoice == true) {\n      displayTasksContext = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \" hello tasksData\");\n    }\n\n    switch (this.context.dataRequestDetails.handlerChoice) {\n      case '1':\n        console.log('Inside TasksData dataRequestDetails: ');\n        this.lastTaskHeaderHandler();\n        break;\n\n      case '2':\n        console.log('case 2 tasksdata');\n        break;\n\n      case '3':\n        //delete from contentChoice = #1\n        this.props.resetHandlerChoice(this.deleteTaskFromUnAssignedTasksForWeekHandler(this.props.dataRequestDetails.index));\n\n      case '4':\n        //change from contentChoice = #1\n        this.props.resetHandlerChoice(this.changeTaskFromUnAssignedTasksForWeekHandler(this.props.dataRequestDetails.value, this.props.dataRequestDetails.id));\n        break;\n    } //   case '4':\n    //     let id = this.props.id;\n    //     let newValue = this.props.value;\n    //     this.props.resetTasksHandlerChoice(\n    //       this.taskChangeHandler(newValue, id)\n    //     );\n    //     break;\n    //   case '5':\n    //     this.props.resetTasksHandlerChoice(\n    //       this.assignTaskToDayHandler(this.props.index)\n    //     );\n    //     break;\n    //   case '6':\n    //     // leftOverLessonChangeHandler;\n    //     this.lastTaskHeaderHandler()();\n    //     this.setState(\n    //       {\n    //         showLeftOverTasksFromTotalTasks: true\n    //       },\n    //       this.props.resetTasksHandlerChoice(\n    //         this.leftOverTasksChangeHandler(this.props.value, this.props.id)\n    //       )\n    //     );\n    //     break;\n    //   case '7':\n    //     //let index = this.props.index;\n    //     //this.addLessonFromOriginalSyllabusHandler(index);\n    //     this.props.resetTasksHandlerChoice(\n    //       this.addTaskFromTotalTasksSHandler(this.props.index)\n    //     );\n    //     break;\n    //   case '8':\n    // }\n\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \" inside of tasksdata component\"), this.context.dataRequestDetails.handlerChoice ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, this.context.dataRequestDetails.handlerChoice, \" \") : null);\n  }\n\n}\n\nTasksData.contextType = TasksContext;\nexport default TasksData; // <button onClick={event => this.props.data(event, this.state)}>\n//   Click Me{' '}\n// </button>\n\n{\n  /* <button onClick={e => this.dataHandler(e)}>\n  pussh me for the word\n  </button> */\n}","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/Store/TasksData.js"],"names":["React","Component","RightCockpit","TasksContext","TasksData","state","dataBaseName","unAssignedTasksForWeek","id","todo","deadline","location","Monday","timeOfDay","task","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","word","reRenderTasks","lastTaskHeaderHandler","context","dataRequestDetails","handlerChoice","length","setState","lastTaskHeader","props","dataReceiverHandler","addTaskHandler","e","console","log","newestEvent","tasks","deleteTaskFromUnAssignedTasksForWeekHandler","taskIndex","alert","currentUnassignedTasksForWeek","splice","receivedData","receiveSyllabusDataHandler","changeTaskFromUnAssignedTasksForWeekHandler","lessonValue","taskChangeId","foundTaskIndex","findIndex","currentId","updatedLessons","lesson","lessons","render","displayTasksContext","resetHandlerChoice","index","value","contextType"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AACA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACxB;AACNC,MAAAA,YAAY,EAAE,OADR;AAENC,MAAAA,sBAAsB,EAAE,CACtB;AACEC,QAAAA,EAAE,EAAE,QADN;AAEEC,QAAAA,IAAI,EAAE,WAFR;AAGEC,QAAAA,QAAQ,EAAE,OAHZ;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OADsB,EAOtB;AACEH,QAAAA,EAAE,EAAE,QADN;AAEEC,QAAAA,IAAI,EAAE,WAFR;AAGEC,QAAAA,QAAQ,EAAE,QAHZ;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OAPsB,EAatB;AACEH,QAAAA,EAAE,EAAE,QADN;AAEEC,QAAAA,IAAI,EAAE,cAFR;AAGEC,QAAAA,QAAQ,EAAE,QAHZ;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OAbsB,CAFlB;AAsBNC,MAAAA,MAAM,EAAE,CACN;AAAEJ,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OADM,EAEN;AAAEN,QAAAA,EAAE,EAAE,YAAN;AAAoBK,QAAAA,SAAS,EAAE,EAA/B;AAAmCC,QAAAA,IAAI,EAAE;AAAzC,OAFM,EAGN;AAAEN,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAHM,CAtBF;AA2BNC,MAAAA,OAAO,EAAE,CACP;AAAEP,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OADO,EAEP;AAAEN,QAAAA,EAAE,EAAE,YAAN;AAAoBK,QAAAA,SAAS,EAAE,EAA/B;AAAmCC,QAAAA,IAAI,EAAE;AAAzC,OAFO,EAGP;AAAEN,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAHO,CA3BH;AAgCNE,MAAAA,SAAS,EAAE,CACT;AAAER,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OADS,EAET;AAAEN,QAAAA,EAAE,EAAE,YAAN;AAAoBK,QAAAA,SAAS,EAAE,EAA/B;AAAmCC,QAAAA,IAAI,EAAE;AAAzC,OAFS,EAGT;AAAEN,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAHS,CAhCL;AAqCNG,MAAAA,QAAQ,EAAE,CACR;AAAET,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OADQ,EAER;AAAEN,QAAAA,EAAE,EAAE,YAAN;AAAoBK,QAAAA,SAAS,EAAE,EAA/B;AAAmCC,QAAAA,IAAI,EAAE;AAAzC,OAFQ,EAGR;AAAEN,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAHQ,CArCJ;AA0CNI,MAAAA,MAAM,EAAE,CACN;AAAEV,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OADM,EAEN;AAAEN,QAAAA,EAAE,EAAE,YAAN;AAAoBK,QAAAA,SAAS,EAAE,EAA/B;AAAmCC,QAAAA,IAAI,EAAE;AAAzC,OAFM,EAGN;AAAEN,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAHM,CA1CF;AA+CNK,MAAAA,QAAQ,EAAE,CACR;AAAEX,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OADQ,EAER;AAAEN,QAAAA,EAAE,EAAE,YAAN;AAAoBK,QAAAA,SAAS,EAAE,EAA/B;AAAmCC,QAAAA,IAAI,EAAE;AAAzC,OAFQ,EAGR;AAAEN,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAHQ,CA/CJ;AAoDNM,MAAAA,MAAM,EAAE,CACN;AAAEZ,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OADM,EAEN;AAAEN,QAAAA,EAAE,EAAE,YAAN;AAAoBK,QAAAA,SAAS,EAAE,EAA/B;AAAmCC,QAAAA,IAAI,EAAE;AAAzC,OAFM,EAGN;AAAEN,QAAAA,EAAE,EAAE,UAAN;AAAkBK,QAAAA,SAAS,EAAE,EAA7B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAHM,CApDF;AAyDNO,MAAAA,IAAI,EAAE,KAzDA;AA0DNC,MAAAA,aAAa,EAAE;AA1DT,KADwB;;AAAA,SA8DhCC,qBA9DgC,GA8DR,MAAM;AAC5B,cAAQ,KAAKC,OAAL,CAAaC,kBAAb,CAAgCC,aAAxC;AACE,aAAK,GAAL;AACE,cAAI,KAAKrB,KAAL,CAAWE,sBAAX,CAAkCoB,MAAlC,IAA4C,CAAhD,EAAmD;AACjD,iBAAKC,QAAL,CACE;AAAEC,cAAAA,cAAc,EAAE,KAAKxB,KAAL,CAAWE,sBAAX,CAAkC,CAAlC;AAAlB,aADF,EAGE,MAAM;AACJ,mBAAKuB,KAAL,CAAWC,mBAAX,CAA+B,KAAK1B,KAApC;AACD,aALH;AAOD,WARD,MAQO;AACL,iBAAKuB,QAAL,CACE;AAAEC,cAAAA,cAAc,EAAE,KAAKxB,KAAL,CAAWwB;AAA7B,aADF,EAGE,MAAM;AACJ,mBAAKC,KAAL,CAAWC,mBAAX,CAA+B,KAAK1B,KAApC;AACD,aALH;AAOD;;AAED;;AACF,aAAK,GAAL;AACE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAzCJ;AA2CD,KA1G+B;;AAAA,SA4GhC2B,cA5GgC,GA4GfC,CAAC,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACnB,IAAd,EAFoB,CAGpB;;AACA,UAAIH,QAAQ,GAAG,CAACsB,CAAC,CAACnB,IAAF,CAAOH,QAAR,GAAoBsB,CAAC,CAACnB,IAAF,CAAOH,QAAP,GAAkB,UAAtC,GAAoD,IAAnE;AACAuB,MAAAA,OAAO,CAACC,GAAR,8BAAkCxB,QAAlC;AAEA,UAAIyB,WAAW,GAAG,CAAC,GAAG,KAAK/B,KAAL,CAAWgC,KAAf,EAAsBJ,CAAC,CAACnB,IAAxB,CAAlB,CAPoB,CAQpB;;AAEA,WAAKc,QAAL,CAAc;AAAES,QAAAA,KAAK,EAAED;AAAT,OAAd,EAVoB,CAWpB;AACD,KAxH+B;;AAAA,SA0HhCE,2CA1HgC,GA0HcC,SAAS,IAAI;AACzDC,MAAAA,KAAK,CAAC,iDAAD,CAAL;AAEA,UAAIC,6BAA6B,GAAG,CAAC,GAAG,KAAKpC,KAAL,CAAWE,sBAAf,CAApC,CAHyD,CAIzD;;AACAkC,MAAAA,6BAA6B,CAACC,MAA9B,CAAqCH,SAArC,EAAgD,CAAhD,EALyD,CAMzD;;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYM,6BAAZ;AACA,WAAKb,QAAL,CACE;AACErB,QAAAA,sBAAsB,EAAEkC,6BAD1B;AAEEE,QAAAA,YAAY,EAAE;AAFhB,OADF,EAKE,MAAM;AACJT,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAK9B,KAAL,CAAWE,sBAAvB;AACD,OAPH,EAQE,MAAM,KAAKiB,OAAL,CAAaoB,0BAAb,CAAwC,KAAKvC,KAA7C,CARR;AAUD,KA5I+B;;AAAA,SA6IhCwC,2CA7IgC,GA6Ic,CAACC,WAAD,EAAcC,YAAd,KAA+B;AAC3Eb,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,6CAAiDY,YAAjD,GAF2E,CAI3E;;AACA,YAAMC,cAAc,GAAG,KAAK3C,KAAL,CAAWE,sBAAX,CAAkC0C,SAAlC,CACrBC,SAAS,IAAI;AACX,eAAOA,SAAS,CAAC1C,EAAV,KAAiBuC,YAAxB;AACD,OAHoB,CAAvB,CAL2E,CAW3E;;AACA,YAAMI,cAAc,qBACf,KAAK9C,KAAL,CAAWE,sBAAX,CAAkCyC,cAAlC,CADe,CAApB,CAZ2E,CAgB3E;AACA;;;AACAG,MAAAA,cAAc,CAACC,MAAf,GAAwBN,WAAxB,CAlB2E,CAoB3E;;AACA,YAAMO,OAAO,GAAG,CAAC,GAAG,KAAKhD,KAAL,CAAWE,sBAAf,CAAhB,CArB2E,CAuB3E;;AACA8C,MAAAA,OAAO,CAACL,cAAD,CAAP,GAA0BG,cAA1B,CAxB2E,CA0B3E;;AACA,WAAKvB,QAAL,CAAc;AAAErB,QAAAA,sBAAsB,EAAE8C;AAA1B,OAAd,EAAmD,MACjD,KAAKvB,KAAL,CAAWc,0BAAX,CAAsC,KAAKvC,KAA3C,CADF;AAGD,KA3K+B;AAAA;;AA8KhCiD,EAAAA,MAAM,GAAG;AACP;AACA,QAAIC,mBAAmB,GAAG,IAA1B,CAFO,CAGP;AACA;AACA;AACA;AACA;AACA;;AACA,QAAI,KAAK/B,OAAL,CAAaC,kBAAb,CAAgCC,aAAhC,IAAiD,IAArD,EAA2D;AACzD6B,MAAAA,mBAAmB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAtB;AACD;;AACD,YAAQ,KAAK/B,OAAL,CAAaC,kBAAb,CAAgCC,aAAxC;AACE,WAAK,GAAL;AACEQ,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA,aAAKZ,qBAAL;AACA;;AAEF,WAAK,GAAL;AACEW,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;;AAEF,WAAK,GAAL;AAAU;AACR,aAAKL,KAAL,CAAW0B,kBAAX,CACE,KAAKlB,2CAAL,CACE,KAAKR,KAAL,CAAWL,kBAAX,CAA8BgC,KADhC,CADF;;AAKF,WAAK,GAAL;AAAU;AACR,aAAK3B,KAAL,CAAW0B,kBAAX,CACE,KAAKX,2CAAL,CACE,KAAKf,KAAL,CAAWL,kBAAX,CAA8BiC,KADhC,EAEE,KAAK5B,KAAL,CAAWL,kBAAX,CAA8BjB,EAFhC,CADF;AAMA;AAvBJ,KAZO,CAsCP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAGG,KAAKgB,OAAL,CAAaC,kBAAb,CAAgCC,aAAhC,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKF,OAAL,CAAaC,kBAAb,CAAgCC,aAAtC,MADD,GAEG,IALN,CADF;AASD;;AArQ+B;;AAA5BtB,S,CA6KGuD,W,GAAcxD,Y;AA2FvB,eAAeC,SAAf,C,CAEA;AACA;AACA;;AAEA;AACE;;;AAGD","sourcesContent":["import React, { Component } from 'react';\n//import classes from '../../components/Cockpit/Cockpit.module.css';\nimport RightCockpit from '../RightCockpit/RightCockpit';\nimport TasksContext from '../../context/tasksContext';\nclass TasksData extends Component {\n  state = {\n    dataBaseName: 'tasks',\n    unAssignedTasksForWeek: [\n      {\n        id: 'qrwrwq',\n        todo: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      },\n      {\n        id: 'egewhw',\n        todo: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      },\n      {\n        id: 'asfasv',\n        todo: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }\n    ],\n    Monday: [\n      { id: 'morning1', timeOfDay: '', task: 'comprar comida' },\n      { id: 'afternoon1', timeOfDay: '', task: 'eat lunch' },\n      { id: 'evening1', timeOfDay: '', task: 'play ball' }\n    ],\n    Tuesday: [\n      { id: 'morning2', timeOfDay: '', task: 'comprar comida' },\n      { id: 'afternoon2', timeOfDay: '', task: 'eat lunch' },\n      { id: 'evening2', timeOfDay: '', task: 'play ball' }\n    ],\n    Wednesday: [\n      { id: 'morning3', timeOfDay: '', task: 'comprar comida' },\n      { id: 'afternoon3', timeOfDay: '', task: 'eat lunch' },\n      { id: 'evening3', timeOfDay: '', task: 'play ball' }\n    ],\n    Thursday: [\n      { id: 'morning4', timeOfDay: '', task: 'comprar comida' },\n      { id: 'afternoon4', timeOfDay: '', task: 'eat lunch' },\n      { id: 'evening4', timeOfDay: '', task: 'play ball' }\n    ],\n    Friday: [\n      { id: 'morning5', timeOfDay: '', task: 'comprar comida' },\n      { id: 'afternoon5', timeOfDay: '', task: 'eat lunch' },\n      { id: 'evening5', timeOfDay: '', task: 'play ball' }\n    ],\n    Saturday: [\n      { id: 'morning6', timeOfDay: '', task: 'comprar comida' },\n      { id: 'afternoon6', timeOfDay: '', task: 'eat lunch' },\n      { id: 'evening6', timeOfDay: '', task: 'play ball' }\n    ],\n    Sunday: [\n      { id: 'morning7', timeOfDay: '', task: 'comprar comida' },\n      { id: 'afternoon7', timeOfDay: '', task: 'eat lunch' },\n      { id: 'evening7', timeOfDay: '', task: 'play ball' }\n    ],\n    word: 'red',\n    reRenderTasks: false\n  };\n\n  lastTaskHeaderHandler = () => {\n    switch (this.context.dataRequestDetails.handlerChoice) {\n      case '1':\n        if (this.state.unAssignedTasksForWeek.length != 0) {\n          this.setState(\n            { lastTaskHeader: this.state.unAssignedTasksForWeek[0] },\n\n            () => {\n              this.props.dataReceiverHandler(this.state);\n            }\n          );\n        } else {\n          this.setState(\n            { lastTaskHeader: this.state.lastTaskHeader },\n\n            () => {\n              this.props.dataReceiverHandler(this.state);\n            }\n          );\n        }\n\n        break;\n      case '6':\n        // if (this.state.maxReactWorkLeft.length != 0) {\n        //   this.setState(\n        //     {\n        //       lastLessonHeader: this.state.maxReactWorkLeft[0]\n        //     },\n\n        //     () => {\n        //       this.props.receiveSyllabusDataHandler(this.state);\n        //     }\n        //   );\n        // } else {\n        //   this.setState(\n        //     { lastLessonHeader: this.state.lastLessonHeader },\n\n        //     () => {\n        //       this.props.receiveSyllabusDataHandler(this.state);\n        //     }\n        //   );\n        // }\n        break;\n    }\n  };\n  //dynamic edit task for Today (Monday)\n  addTaskHandler = e => {\n    console.log('hey I am in addTaskHandler');\n    console.log(e.task);\n    //need to fix this in newTask so that it automaticly picks up the default value of the radio button\n    let location = !e.task.location ? (e.task.location = 'Popblado') : null;\n    console.log(`target location is ${location}`);\n\n    let newestEvent = [...this.state.tasks, e.task];\n    //console.log(newestEvent[0].todo);\n\n    this.setState({ tasks: newestEvent });\n    //this.setState({ showEvents: true });\n  };\n\n  deleteTaskFromUnAssignedTasksForWeekHandler = taskIndex => {\n    alert('Are you sure you want to delete this Task? Mate');\n\n    let currentUnassignedTasksForWeek = [...this.state.unAssignedTasksForWeek];\n    //alert('Are you sure you want to delete this Task? Mate2');\n    currentUnassignedTasksForWeek.splice(taskIndex, 1);\n    //alert(currentUnassignedTasksForWeek);\n    console.log(currentUnassignedTasksForWeek);\n    this.setState(\n      {\n        unAssignedTasksForWeek: currentUnassignedTasksForWeek,\n        receivedData: 'YES'\n      },\n      () => {\n        console.log(this.state.unAssignedTasksForWeek);\n      },\n      () => this.context.receiveSyllabusDataHandler(this.state)\n    );\n  };\n  changeTaskFromUnAssignedTasksForWeekHandler = (lessonValue, taskChangeId) => {\n    console.log('what');\n    console.log(`Inside of lessonChangeHandler id: ${taskChangeId}`);\n\n    //Find the index of the lessons that matches the id sent in\n    const foundTaskIndex = this.state.unAssignedTasksForWeek.findIndex(\n      currentId => {\n        return currentId.id === taskChangeId;\n      }\n    );\n\n    //createnew task item to put into array\n    const updatedLessons = {\n      ...this.state.unAssignedTasksForWeek[foundTaskIndex]\n    };\n\n    //using updated values to define the lesson of the particular pulled out lesson\n    //updatedLessons.lesson = event.target.value;\n    updatedLessons.lesson = lessonValue;\n\n    //pull out of states maxReact array\n    const lessons = [...this.state.unAssignedTasksForWeek];\n\n    //update the new lesson w/ ID of interest from the copy of MaxReact (lessons)\n    lessons[foundTaskIndex] = updatedLessons;\n\n    //final update of lessons\n    this.setState({ unAssignedTasksForWeek: lessons }, () =>\n      this.props.receiveSyllabusDataHandler(this.state)\n    );\n  };\n\n  static contextType = TasksContext;\n  render() {\n    //this.props.data(this.state.word);\n    let displayTasksContext = null;\n    // if (this.context.dataRequestDetails == true) {\n    //   console.log('Inside TasksData dataRequestDetails: ');\n    // }\n    // this.context.dataRequestDetails\n    //   ? (displayTasksContext = <div> hello tasksData</div>)\n    //   : null;\n    if (this.context.dataRequestDetails.handlerChoice == true) {\n      displayTasksContext = <div> hello tasksData</div>;\n    }\n    switch (this.context.dataRequestDetails.handlerChoice) {\n      case '1':\n        console.log('Inside TasksData dataRequestDetails: ');\n        this.lastTaskHeaderHandler();\n        break;\n\n      case '2':\n        console.log('case 2 tasksdata');\n        break;\n\n      case '3': //delete from contentChoice = #1\n        this.props.resetHandlerChoice(\n          this.deleteTaskFromUnAssignedTasksForWeekHandler(\n            this.props.dataRequestDetails.index\n          )\n        );\n      case '4': //change from contentChoice = #1\n        this.props.resetHandlerChoice(\n          this.changeTaskFromUnAssignedTasksForWeekHandler(\n            this.props.dataRequestDetails.value,\n            this.props.dataRequestDetails.id\n          )\n        );\n        break;\n    }\n\n    //   case '4':\n    //     let id = this.props.id;\n    //     let newValue = this.props.value;\n    //     this.props.resetTasksHandlerChoice(\n    //       this.taskChangeHandler(newValue, id)\n    //     );\n    //     break;\n\n    //   case '5':\n    //     this.props.resetTasksHandlerChoice(\n    //       this.assignTaskToDayHandler(this.props.index)\n    //     );\n\n    //     break;\n\n    //   case '6':\n    //     // leftOverLessonChangeHandler;\n    //     this.lastTaskHeaderHandler()();\n    //     this.setState(\n    //       {\n    //         showLeftOverTasksFromTotalTasks: true\n    //       },\n    //       this.props.resetTasksHandlerChoice(\n    //         this.leftOverTasksChangeHandler(this.props.value, this.props.id)\n    //       )\n    //     );\n\n    //     break;\n\n    //   case '7':\n    //     //let index = this.props.index;\n    //     //this.addLessonFromOriginalSyllabusHandler(index);\n    //     this.props.resetTasksHandlerChoice(\n    //       this.addTaskFromTotalTasksSHandler(this.props.index)\n    //     );\n\n    //     break;\n    //   case '8':\n    // }\n\n    return (\n      <React.Fragment>\n        <p> inside of tasksdata component</p>\n\n        {this.context.dataRequestDetails.handlerChoice ? (\n          <div>{this.context.dataRequestDetails.handlerChoice} </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TasksData;\n\n// <button onClick={event => this.props.data(event, this.state)}>\n//   Click Me{' '}\n// </button>\n\n{\n  /* <button onClick={e => this.dataHandler(e)}>\npussh me for the word\n</button> */\n}\n"]},"metadata":{},"sourceType":"module"}
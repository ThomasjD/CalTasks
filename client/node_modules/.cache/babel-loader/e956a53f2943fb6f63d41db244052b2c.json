{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/displayContent.js\";\nimport React, { Component, useContext } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from './Cockpit';\nimport Tasks from '../ViewContent/Tasks/Tasks';\nimport TodayTasks from '../ViewContent/TodayTasks/TodayTasks';\nimport Lessons from '../ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContentOptions';\nimport NewTask from '../Creation/newTask';\nimport NewEvent from '../Creation/NewEvent';\nimport NewSyllabus from '../Creation/newSyllabus';\nimport SyllabusContext from '../../context/syllabusContext';\nimport TasksContext from '../../context/tasksContext';\nimport StoreDataContext from '../../context/StoreDataContext';\nimport statusClass from '../../components/ViewContent/Tasks/Tasks.module.css';\nimport Syllabi from '../ViewContent/Syllabus/Syllabi';\nimport PickedDayTasks from '../ViewContent/PickedDayTasks/PickedDayTasks';\nimport SyllabiList from '../ViewContent/Syllabus/SyllabiList';\nimport DisplayPickedSyllabus from '../ViewContent/Syllabus/displayPickedSyllabus'; //import TimeBudgetForWeek from '../';\n\nconst DisplayContent = props => {\n  const syllabusContext = useContext(SyllabusContext); //const tasksContext = useContext(TasksContext);\n\n  const storeDataContext = useContext(StoreDataContext);\n  let displayContent = null;\n\n  switch (props.everything.contentChoice) {\n    case '0':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Hello Thomas.... What would you like to see?\"), React.createElement(\"img\", {\n        className: classes.logoImage,\n        src: require('../../Assets/cockpitIcon.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n      break;\n\n    case '1':\n      if (storeDataContext.tasksData.tasksData) {//console.log(storeDataContext.tasksData.tasksData);\n      }\n\n      console.log(props.everything.contentChoice);\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, storeDataContext.tasksData.tasksData ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Tasks, {\n        everything: props.everything,\n        contentChoice: props.everything.contentChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })) : null, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '2':\n      //Today's Tasks\n      console.log(props.everything);\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(TodayTasks, {\n        everything: props.everything,\n        reRenderTodayTasks: props.everything.reRenderTodayTasks,\n        contentChoice: props.everything.contentChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '3':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, syllabusContext.everythingSyllabus.syllabusData ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(SyllabiList, {\n        everything: props.everything,\n        lessons: syllabusContext.everythingSyllabus.syllabusData.maxReact,\n        lessonsLength: syllabusContext.everythingSyllabus.syllabusData.maxReact.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })) : null);\n      /*\n        clicked={(event, index, handlerType) =>\n                    props.deleteLessonHandler(event, index, handlerType)\n                  }\n        */\n\n      break;\n\n    case '4':\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(NewTask, {\n        newestTaskHandler: props.newestTaskHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n      break;\n\n    case '5':\n      //coming from NavBar\n      //after submition will show calendar and where that will placed\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(NewEvent, {\n        contentViewHandler: props.contentViewHandler,\n        contentChoice: props.contentChoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }));\n      break;\n    //showLeftOverLessonsFromSyllabus: for Table Header (add/delete this lesson message)\n\n    case '6':\n      //Adding syllabus lesson from maxreact to nonscheduled\n      if (syllabusContext.everythingSyllabus.syllabusData) {\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(NewSyllabus, {\n          newestSyllabus: props.newestSyllabus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }), syllabusContext.everythingSyllabus.syllabusData.showLeftOverLessonsFromSyllabus ? React.createElement(Lessons, {\n          showLeftOverLessonsFromSyllabus: syllabusContext.everythingSyllabus.syllabusData.showLeftOverLessonsFromSyllabus,\n          contentChoice: props.contentChoice,\n          everything: props.everything // showLeftOverLessonsFromOrigSyllabus={\n          //   this.props.everythingSyllabus.syllabusData\n          //     .showLeftOverLessonsFromSyllabus\n          // }\n          ,\n          lessons: syllabusContext.everythingSyllabus.syllabusData.maxReactWorkLeft // changed={(event, handlerType, id) =>\n          //   this.props.leftOverLessonChangeHandler(event, handlerType, id)\n          // }\n          ,\n          lastLessonHeader: syllabusContext.everythingSyllabus.syllabusData.lastLessonHeader,\n          lessonsLength: syllabusContext.everythingSyllabus.syllabusData.maxReactWorkLeft.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }) : null);\n      }\n\n      break;\n\n    case '7':\n      //display a list of syllabi\n      if (syllabusContext.everythingSyllabus.syllabusData) {\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(Syllabi, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }));\n      }\n\n      break;\n\n    case '8':\n      //View tasks according to chosen day\n      // displayContent = (\n      //   <React.Fragment>\n      //\n      //     <PickedDayTasks\n      //       everything={props.everything}\n      //       dataLocation={props.dataLocation}\n      //       //reRenderTodayTasks={props.everything.reRenderTodayTasks}\n      //     />\n      //\n      //   </React.Fragment>\n      // );\n      break;\n\n    case '9':\n      //View tasks according to chosen day\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"\\xA0\", storeDataContext.tasksData.tasksData ? React.createElement(PickedDayTasks, {\n        everything: props.everything,\n        contentChoice: props.contentChoice //dataLocation={tasksContext.dataRequestDetails.value}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }) : null, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '10':\n      //View syllabus according to chosen day\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, syllabusContext.everythingSyllabus.syllabusData ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(DisplayPickedSyllabus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })) : null);\n      break;\n\n    case '11':\n      //View tasks according to chosen day\n      displayContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"\\xA0\", storeDataContext.tasksData.tasksData ? React.createElement(PickedDayTasks, {\n        everything: props.everything,\n        contentChoice: props.contentChoice //dataLocation={tasksContext.dataRequestDetails.value}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }) : null, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n      break;\n\n    case '12':\n      // displayContent = (\n      //   <React.Fragment>\n      //     {StoreDataContext.ObjData ? <TimeBudgetForWeek /> : null}\n      //   </React.Fragment>\n      // );\n      break;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, displayContent);\n};\n\nexport default DisplayContent; //HabitualData\n//ObjectiveData\n//cockpit (states)-> WeeklyTimeBudget\n//-> displayContent -> timeBudgetForWeek","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/displayContent.js"],"names":["React","Component","useContext","classes","Cockpit","Tasks","TodayTasks","Lessons","ViewContent","NewTask","NewEvent","NewSyllabus","SyllabusContext","TasksContext","StoreDataContext","statusClass","Syllabi","PickedDayTasks","SyllabiList","DisplayPickedSyllabus","DisplayContent","props","syllabusContext","storeDataContext","displayContent","everything","contentChoice","logoImage","require","tasksData","console","log","reRenderTodayTasks","everythingSyllabus","syllabusData","maxReact","length","newestTaskHandler","contentViewHandler","newestSyllabus","showLeftOverLessonsFromSyllabus","maxReactWorkLeft","lastLessonHeader"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from 'react';\nimport classes from '../../components/Cockpit/Cockpit.module.css';\nimport Cockpit from './Cockpit';\nimport Tasks from '../ViewContent/Tasks/Tasks';\nimport TodayTasks from '../ViewContent/TodayTasks/TodayTasks';\nimport Lessons from '../ViewContent/Syllabus/MaxReact/Lessons';\nimport ViewContent from './ViewContentOptions';\nimport NewTask from '../Creation/newTask';\nimport NewEvent from '../Creation/NewEvent';\nimport NewSyllabus from '../Creation/newSyllabus';\nimport SyllabusContext from '../../context/syllabusContext';\nimport TasksContext from '../../context/tasksContext';\nimport StoreDataContext from '../../context/StoreDataContext';\n\nimport statusClass from '../../components/ViewContent/Tasks/Tasks.module.css';\nimport Syllabi from '../ViewContent/Syllabus/Syllabi';\nimport PickedDayTasks from '../ViewContent/PickedDayTasks/PickedDayTasks';\nimport SyllabiList from '../ViewContent/Syllabus/SyllabiList';\nimport DisplayPickedSyllabus from '../ViewContent/Syllabus/displayPickedSyllabus';\n//import TimeBudgetForWeek from '../';\n\nconst DisplayContent = props => {\n  const syllabusContext = useContext(SyllabusContext);\n  //const tasksContext = useContext(TasksContext);\n  const storeDataContext = useContext(StoreDataContext);\n\n  let displayContent = null;\n\n  switch (props.everything.contentChoice) {\n    case '0':\n      displayContent = (\n        <React.Fragment>\n          <h3>Hello Thomas.... What would you like to see?</h3>\n          <img\n            className={classes.logoImage}\n            src={require('../../Assets/cockpitIcon.png')}\n          />\n        </React.Fragment>\n      );\n      break;\n\n    case '1':\n      if (storeDataContext.tasksData.tasksData) {\n        //console.log(storeDataContext.tasksData.tasksData);\n      }\n      console.log(props.everything.contentChoice);\n\n      displayContent = (\n        <React.Fragment>\n          {storeDataContext.tasksData.tasksData ? (\n            <div>\n              <Tasks\n                everything={props.everything}\n                contentChoice={props.everything.contentChoice}\n              />\n            </div>\n          ) : null}\n                                 \n        </React.Fragment>\n      );\n      break;\n\n    case '2': //Today's Tasks\n      console.log(props.everything);\n      displayContent = (\n        <React.Fragment>\n                      \n          <TodayTasks\n            everything={props.everything}\n            reRenderTodayTasks={props.everything.reRenderTodayTasks}\n            contentChoice={props.everything.contentChoice}\n          />\n                    \n        </React.Fragment>\n      );\n      break;\n\n    case '3':\n      displayContent = (\n        <React.Fragment>\n          {syllabusContext.everythingSyllabus.syllabusData ? (\n            <div>\n              <SyllabiList\n                everything={props.everything}\n                lessons={\n                  syllabusContext.everythingSyllabus.syllabusData.maxReact\n                }\n                lessonsLength={\n                  syllabusContext.everythingSyllabus.syllabusData.maxReact\n                    .length\n                }\n              />\n            </div>\n          ) : null}\n        </React.Fragment>\n      );\n      /*\n        clicked={(event, index, handlerType) =>\n                    props.deleteLessonHandler(event, index, handlerType)\n                  }\n        */\n\n      break;\n    case '4':\n      displayContent = (\n        <React.Fragment>\n          <NewTask newestTaskHandler={props.newestTaskHandler} />\n        </React.Fragment>\n      );\n      break;\n    case '5': //coming from NavBar\n      //after submition will show calendar and where that will placed\n      displayContent = (\n        <React.Fragment>\n          <NewEvent\n            contentViewHandler={props.contentViewHandler}\n            contentChoice={props.contentChoice}\n          />\n        </React.Fragment>\n      );\n      break;\n    //showLeftOverLessonsFromSyllabus: for Table Header (add/delete this lesson message)\n\n    case '6': //Adding syllabus lesson from maxreact to nonscheduled\n      if (syllabusContext.everythingSyllabus.syllabusData) {\n        displayContent = (\n          <React.Fragment>\n            <NewSyllabus newestSyllabus={props.newestSyllabus} />\n\n            {syllabusContext.everythingSyllabus.syllabusData\n              .showLeftOverLessonsFromSyllabus ? (\n              <Lessons\n                showLeftOverLessonsFromSyllabus={\n                  syllabusContext.everythingSyllabus.syllabusData\n                    .showLeftOverLessonsFromSyllabus\n                }\n                contentChoice={props.contentChoice}\n                everything={props.everything}\n                // showLeftOverLessonsFromOrigSyllabus={\n                //   this.props.everythingSyllabus.syllabusData\n                //     .showLeftOverLessonsFromSyllabus\n                // }\n                lessons={\n                  syllabusContext.everythingSyllabus.syllabusData\n                    .maxReactWorkLeft\n                }\n                // changed={(event, handlerType, id) =>\n                //   this.props.leftOverLessonChangeHandler(event, handlerType, id)\n                // }\n                lastLessonHeader={\n                  syllabusContext.everythingSyllabus.syllabusData\n                    .lastLessonHeader\n                }\n                lessonsLength={\n                  syllabusContext.everythingSyllabus.syllabusData\n                    .maxReactWorkLeft.length\n                }\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      }\n\n      break;\n    case '7': //display a list of syllabi\n      if (syllabusContext.everythingSyllabus.syllabusData) {\n        displayContent = (\n          <React.Fragment>\n            <Syllabi />\n          </React.Fragment>\n        );\n      }\n\n      break;\n    case '8': //View tasks according to chosen day\n      // displayContent = (\n      //   <React.Fragment>\n      //\n      //     <PickedDayTasks\n      //       everything={props.everything}\n      //       dataLocation={props.dataLocation}\n      //       //reRenderTodayTasks={props.everything.reRenderTodayTasks}\n      //     />\n      //\n      //   </React.Fragment>\n      // );\n\n      break;\n    case '9': //View tasks according to chosen day\n      displayContent = (\n        <React.Fragment>\n           \n          {storeDataContext.tasksData.tasksData ? (\n            <PickedDayTasks\n              everything={props.everything}\n              contentChoice={props.contentChoice}\n              //dataLocation={tasksContext.dataRequestDetails.value}\n            />\n          ) : null}\n                    \n        </React.Fragment>\n      );\n\n      break;\n    case '10': //View syllabus according to chosen day\n      displayContent = (\n        <React.Fragment>\n          {syllabusContext.everythingSyllabus.syllabusData ? (\n            <div>\n              <DisplayPickedSyllabus />\n            </div>\n          ) : null}\n        </React.Fragment>\n      );\n      break;\n    case '11': //View tasks according to chosen day\n      displayContent = (\n        <React.Fragment>\n           \n          {storeDataContext.tasksData.tasksData ? (\n            <PickedDayTasks\n              everything={props.everything}\n              contentChoice={props.contentChoice}\n              //dataLocation={tasksContext.dataRequestDetails.value}\n            />\n          ) : null}\n                    \n        </React.Fragment>\n      );\n\n      break;\n\n    case '12':\n      // displayContent = (\n      //   <React.Fragment>\n      //     {StoreDataContext.ObjData ? <TimeBudgetForWeek /> : null}\n      //   </React.Fragment>\n      // );\n      break;\n  }\n\n  return <div>{displayContent}</div>;\n};\n\nexport default DisplayContent;\n\n//HabitualData\n//ObjectiveData\n//cockpit (states)-> WeeklyTimeBudget\n//-> displayContent -> timeBudgetForWeek\n"]},"metadata":{},"sourceType":"module"}
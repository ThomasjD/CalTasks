{"ast":null,"code":"import _defineProperty from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport rocky from './App.module.css';\nimport Tasks from '../components/Tasks/Tasks'; //import Task from '../components/Tasks/Task/Task'\n\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport '../components/Tasks/Task/Task';\nimport '../components/TodayTasks/TodayTasks'; //import classNames from 'classnames';\n//import Radium, {StyleRoot} from 'radium';\n//import wtf from './SpecialBtn.module.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        id: 'qrwrwq',\n        todo: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      }, {\n        id: 'egewhw',\n        todo: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      }, {\n        id: 'asfasv',\n        todo: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }],\n      maxReact: [{\n        id: 'xvlwil',\n        lesson: '90. (for props Changes)',\n        completion: false\n      }, {\n        id: 'bbbskk',\n        lesson: '91. (for state Changes)',\n        completion: false\n      }, {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }],\n      Monday: [{\n        id: 'morning',\n        task: \"\"\n      }, {\n        id: 'afternoon',\n        task: \"\"\n      }, {\n        id: 'evening',\n        task: \"\"\n      }],\n      Tuesday: [{\n        id: 'morning',\n        task: \"\"\n      }, {\n        id: 'afternoon',\n        task: \"\"\n      }, {\n        id: 'evening',\n        task: \"\"\n      }],\n      showTasks: false,\n      showTasksToday: false\n    };\n\n    this.toggleShowTasksHandler = () => {\n      const doesShow = this.state.showTasks;\n      this.setState({\n        showTasks: !doesShow\n      }); //tryout\n\n      const Monday = [...this.state.Monday];\n      Monday[0].task = 'higher love';\n      this.setState({\n        Monday: Monday\n      });\n    };\n\n    this.deleteTaskhandler = taskIndex => {\n      //get tasks array\n      const tasks = [...this.state.tasks]; //splice task of interst\n\n      tasks.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        tasks: tasks\n      });\n    };\n\n    this.taskChangeHandler = (event, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      const foundTaskId = this.state.tasks.findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state.tasks[foundTaskId]);\n\n      updatedTask.todo = event.target.value; //pull out the states tasks array\n\n      const tasks = [...this.state.tasks]; //update the task with id of interest w/ new task description\n\n      tasks[foundTaskId] = updatedTask; //update the state\n\n      this.setState({\n        tasks: tasks\n      });\n    };\n\n    this.addTaskTodayHandler = (event, taskChangedId) => {\n      //pull out the states tasks array\n      const Monday = [...this.state.Monday]; //update the task with id of interest w/ new task description\n\n      Monday[0].task = 'higher love';\n    };\n\n    this.displayTodayScheduleHandler = () => {\n      const doesShowToday = this.state.showTasksToday;\n      this.setState({\n        showTasksToday: !doesShowToday\n      });\n    };\n  }\n\n  render() {\n    //console.log(this.state.Monday[0])\n    console.log(this.state.Monday[0]); //let newShit = \n    //this.setState (Monday: this.state.Monday[0].taskTime.afternoon) = thisData\n    //console.log(this.state.Monday[0].taskTime.afternoon)\n\n    let displayTasks = null; //clicking on the show Tasks button to show available tasks\n    //tasks, clicked, changed will be sent to <Tasks>\n\n    if (this.state.showTasks) {\n      displayTasks = React.createElement(Tasks, {\n        tasks: this.state.tasks,\n        clicked: this.deleteTaskhandler,\n        changed: this.taskChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    }\n\n    let displayTasksToday = null;\n\n    if (this.state.showTasksToday) {\n      displayTasksToday = React.createElement(TodayTasks, {\n        Monday: this.state.Monday,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      });\n    }\n\n    let tasklength = this.state.tasks.length;\n    console.log(tasklength);\n    return React.createElement(\"div\", {\n      className: rocky.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Cockpit, {\n      clicked: this.toggleShowTasksHandler,\n      tasks: this.state.tasks,\n      todayClicked: this.displayTodayScheduleHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), displayTasks, displayTasksToday);\n  }\n\n} //<p>this class is {classes}</p>\n//export default Radium(App);\n\n\nexport default App; //<p className={rocky[classes]}>Things to Do!</p>\n//using css modules on multiple classNames \n//{classNames({[styles.foo]: true, [styles.bar]: true})}\n//<p className={classNames({[rocky[classes]]: true, [rocky.red]: true})}>Things to Do!</p>","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/App.js"],"names":["React","Component","rocky","Tasks","Cockpit","App","state","tasks","id","todo","deadline","location","maxReact","lesson","completion","Monday","task","Tuesday","showTasks","showTasksToday","toggleShowTasksHandler","doesShow","setState","deleteTaskhandler","taskIndex","splice","taskChangeHandler","event","taskChangedId","foundTaskId","findIndex","currentId","updatedTask","target","value","addTaskTodayHandler","displayTodayScheduleHandler","doesShowToday","render","console","log","displayTasks","displayTasksToday","tasklength","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport rocky from './App.module.css';\nimport Tasks from '../components/Tasks/Tasks'\n//import Task from '../components/Tasks/Task/Task'\nimport Cockpit from '../components/Cockpit/Cockpit'\nimport '../components/Tasks/Task/Task'\nimport '../components/TodayTasks/TodayTasks'\n//import classNames from 'classnames';\n\n//import Radium, {StyleRoot} from 'radium';\n//import wtf from './SpecialBtn.module.css';\n\nclass App extends Component {\n  //data\n  state = {\n    tasks: [\n      {id: 'qrwrwq', todo: 'Find work', deadline : 'Lunes', location: 'Poplado'},\n      {id: 'egewhw', todo: 'buy shoes', deadline : 'Martes', location: 'Floresta'},\n      {id: 'asfasv', todo: 'mail package', deadline : 'Jueves', location: 'Laureles'}\n    ],\n    maxReact: [\n      {id: 'xvlwil', lesson: '90. (for props Changes)', completion: false },\n      {id: 'bbbskk', lesson: '91. (for state Changes)', completion: false },\n      {id: 'kjhck2', lesson: '92. Using useEffect() in Functional Components ', completion: false },   \n    ],\n    Monday: [\n      {id: 'morning', task: \"\"},\n      {id: 'afternoon', task: \"\"},\n      {id: 'evening', task: \"\"}\n    ],\n    Tuesday: [\n      {id: 'morning', task: \"\"},\n      {id: 'afternoon', task: \"\"},\n      {id: 'evening', task: \"\"}\n    ],   \n    showTasks: false, \n    showTasksToday: false\n\n  };\n\n  //show list of tasks\n  toggleShowTasksHandler = () => {\n    const doesShow = this.state.showTasks;\n    this.setState({showTasks: !doesShow}) \n\n\n    //tryout\n    const Monday = [...this.state.Monday]\n\n    \n    Monday[0].task = 'higher love'\n\n    this.setState({Monday: Monday})\n    }\n\n  //delete a task \n  deleteTaskhandler = (taskIndex) => {\n    //get tasks array\n    const tasks = [...this.state.tasks];  \n    //splice task of interst\n    tasks.splice(taskIndex, 1);\n    //update new list of tasks to state\n    this.setState({tasks : tasks})\n  }\n\n  //dynamic edit task\n  taskChangeHandler = (event, taskChangedId) => {\n\n    //find the task that matches the taskChangedId\n    const foundTaskId = this.state.tasks.findIndex(currentId => {\n      return currentId.id === taskChangedId\n    })\n\n    //create new task item that we will put into array\n    const updatedTask = {...this.state.tasks[foundTaskId]}\n    updatedTask.todo = event.target.value\n\n    //pull out the states tasks array\n    const tasks = [...this.state.tasks]\n    \n    //update the task with id of interest w/ new task description\n    tasks[foundTaskId] = updatedTask\n    \n    //update the state\n    this.setState({tasks: tasks})\n    }\n\n   addTaskTodayHandler = (event, taskChangedId) => {\n    \n    //pull out the states tasks array\n    const Monday = [...this.state.Monday]\n\n    //update the task with id of interest w/ new task description\n    Monday[0].task = 'higher love'\n\n   }\n   \n   displayTodayScheduleHandler = () => {\n    const doesShowToday = this.state.showTasksToday;\n    this.setState({showTasksToday: !doesShowToday}) \n   }\n\n  render() {\n    //console.log(this.state.Monday[0])\n    \n    console.log(this.state.Monday[0])\n\n    //let newShit = \n    //this.setState (Monday: this.state.Monday[0].taskTime.afternoon) = thisData\n    //console.log(this.state.Monday[0].taskTime.afternoon)\n    let displayTasks = null;\n    \n    //clicking on the show Tasks button to show available tasks\n      //tasks, clicked, changed will be sent to <Tasks>\n\n    if (this.state.showTasks) {\n      displayTasks = (\n        \n            <Tasks \n              tasks={this.state.tasks}\n              clicked = {this.deleteTaskhandler}\n              changed = {this.taskChangeHandler}\n            />\n      ) \n    } \n\n    let displayTasksToday = null;\n\n    if (this.state.showTasksToday) {\n      displayTasksToday = (\n        \n            <TodayTasks\n              Monday = {this.state.Monday} \n            />\n      ) \n    } \n\n     let tasklength = this.state.tasks.length\n\n     console.log(tasklength)\n    \n    return (\n      <div className={rocky.App}>  \n        <Cockpit\n        clicked = {this.toggleShowTasksHandler}\n        tasks = {this.state.tasks}\n        todayClicked = {this.displayTodayScheduleHandler}\n     />\n     {displayTasks}\n     {displayTasksToday}\n\n      </div>\n     \n      \n    );\n    \n  }\n}\n//<p>this class is {classes}</p>\n//export default Radium(App);\nexport default App\n//<p className={rocky[classes]}>Things to Do!</p>\n\n\n\n//using css modules on multiple classNames \n//{classNames({[styles.foo]: true, [styles.bar]: true})}\n//<p className={classNames({[rocky[classes]]: true, [rocky.red]: true})}>Things to Do!</p>"]},"metadata":{},"sourceType":"module"}
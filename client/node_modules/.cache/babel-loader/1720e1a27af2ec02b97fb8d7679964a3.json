{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Objectives/TimeBudget/WeeklyTimeBudget.js\";\nimport React, { Component } from 'react';\nimport classes from './WeeklyTimeBudget.module.css';\nimport StoreDataContext from '../../../../context/StoreDataContext';\nimport ObjectiveData from '../../../../containers/Store/ObjectiveData';\nimport PickedDayBudget from './PickedDayBudget/PickedDayBudget';\nimport daily from './PickedDayBudget/PickedDayBudget.module.css'; //import classes2 from '../DailyTimeBudget/DailyTimeBudget.module.css';\n//each day have a predetermined amt of time for each category\n//then each day you can balance it according to 24 hours\n//after balancing for each day, you have to go back to balance the weekly total\n\nclass WeeklyTimeBudget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addHourToActivityPickedDay = activity => {\n      let pickedDay = this.state.pickedDay;\n      let allDaysTimeBudget = this.state.dailyBudget;\n\n      let pickedDayDailyBudget = _objectSpread({}, this.state.dailyBudget[pickedDay]);\n\n      let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n      let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount + 1;\n      let pickedDayUpdatedActivityHourCount = pickedDayCurrentActivityHourCount + 1;\n      pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n      pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n      allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n      this.setState({\n        dailyBudget: allDaysTimeBudget\n      });\n      this.addHourToActivity(activity); //this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.deductHourToActivityPickedDay = activity => {\n      let pickedDay = this.state.pickedDay;\n      let allDaysTimeBudget = this.state.dailyBudget;\n\n      let pickedDayDailyBudget = _objectSpread({}, this.state.dailyBudget[pickedDay]);\n\n      let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n      let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount - 1;\n      let pickedDayUpdatedActivityHourCount = pickedDayCurrentActivityHourCount - 1;\n      pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n      pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n      allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n      this.setState({\n        dailyBudget: allDaysTimeBudget\n      });\n      this.deductHourToActivity(activity);\n    };\n\n    this.addHourToActivity = activity => {\n      let activityWeekCategories = _objectSpread({}, this.state.activityWeekCategories);\n\n      let currentTotalHourCount = activityWeekCategories.totalHours;\n      let currentActivityHourCount = activityWeekCategories[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let updatedTotalHourCount = currentTotalHourCount + 1;\n      activityWeekCategories.totalHours = updatedTotalHourCount;\n      let updatedActivityHourCount = currentActivityHourCount + 1;\n      activityWeekCategories[activity] = updatedActivityHourCount;\n      this.setState({\n        activityWeekCategories: activityWeekCategories\n      }); //this.deductHourToActivity(activity);\n      //this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.deductHourToActivity = activity => {\n      let activityWeekCategories = _objectSpread({}, this.state.activityWeekCategories);\n\n      let currentTotalHourCount = activityWeekCategories.totalHours;\n      let currentActivityHourCount = activityWeekCategories[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let updatedTotalHourCount = currentTotalHourCount - 1;\n      activityWeekCategories.totalHours = updatedTotalHourCount;\n      let updatedActivityHourCount = currentActivityHourCount - 1;\n      activityWeekCategories[activity] = updatedActivityHourCount;\n      this.setState({\n        activityWeekCategories: activityWeekCategories\n      });\n    };\n\n    this.pickDayHandler = event => {\n      let contentViewObject = {\n        target: {\n          value: '12'\n        }\n      };\n      let pickedDay = event.target.value; //alert(pickedDay);\n\n      this.setState({\n        pickedDay: pickedDay\n      }, () => this.context.contentViewHandler(contentViewObject));\n    };\n\n    this.initialState = () => {\n      let dataBudget = this.context.dataBudget.dailyBudget;\n      let activityWeekCategories = this.context.dataBudget.activityWeekCategories;\n      this.setState({\n        dataBudget: dataBudget,\n        activityWeekCategories: activityWeekCategories,\n        word: 'chicken'\n      });\n    };\n\n    this.requestDataHandler = () => {\n      //let contentChoice = event.target.value; //'' number used in displayContent component\n      let newContentChoice = '';\n      let typeOfData = ''; //string: syllabus,tasks,events,objectives\n\n      let handlerChoice = ''; //string: '#' handler inside of database\n\n      let dataLocation = ''; // string: where obj found inside database\n\n      let infoType = ''; //string: index/id/\n\n      let info = ''; //string: actual info\n      //let today = calendarObj();\n\n      typeOfData = 'tasks';\n      handlerChoice = '1';\n      dataLocation = '';\n      infoType = null;\n      info = null;\n      newContentChoice = '12';\n      let dataRequestMessage = {\n        typeOfData: 'obj',\n        handlerChoice: '1',\n        dataLocation: dataLocation,\n        infoType: infoType,\n        info: info\n      }; // alert(newContentChoice);\n\n      let contentViewObject = {\n        target: {\n          value: newContentChoice\n        }\n      }; //this.context.dataRequestHandler(dataRequestMessage);\n\n      this.context.contentViewHandler(contentViewObject);\n    };\n\n    this.word = 'chicken';\n    this.thisWeek = new ObjectiveData();\n    this.thisWeek.timeBudgetDay();\n    this.state = {\n      activityWeekCategories: '',\n      dailyBudget: '',\n      pickedDay: ''\n    };\n    this.state = {\n      word: 'chicken',\n      activityWeekCategories: this.thisWeek.activityWeekCategories,\n      dailyBudget: this.thisWeek.dailyBudget,\n      pickedDay: ''\n    };\n\n    this.initialDataRequest = () => {\n      let dataRequestMessage = {\n        typeOfData: 'obj',\n        handlerChoice: '1',\n        dataLocation: '',\n        infoType: '',\n        info: ''\n      };\n      this.context.dataRequestHandler(dataRequestMessage);\n    };\n  }\n\n  render() {\n    //when first starting -> fetch data, store it as local data\n    //once all editing done, data gets sent back to objData\n    if (this.context.dataBudget) {\n      this.initialState();\n    }\n\n    let disabledDeductBtnWeek = _objectSpread({}, this.state.activityWeekCategories);\n\n    for (let key in disabledDeductBtnWeek) {\n      disabledDeductBtnWeek[key] = disabledDeductBtnWeek[key] <= 0;\n    }\n\n    let displayDailyTimeBudget = null;\n    let pickedDay = this.state.pickedDay;\n    displayDailyTimeBudget = Object.keys(this.state.activityWeekCategories).map(eachCategory => {\n      let moreButtonDisabled = null;\n      let lessButtonDisabled = null;\n\n      if (this.state.activityWeekCategories.totalHours >= 168) {\n        moreButtonDisabled = true;\n      }\n\n      if (this.state.activityWeekCategories[eachCategory] <= 0) {\n        lessButtonDisabled = true;\n      }\n\n      let disabled24hr = null;\n      let pickDayLess0hours = null;\n\n      if (pickedDay) {\n        if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n          disabled24hr = true;\n        }\n\n        if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n          pickDayLess0hours = true;\n        }\n      }\n\n      return (// <PickedDayBudget\n        //   key={eachCategory.concat(eachCategory)}\n        //   activity={eachCategory}\n        //   hours={this.state.activityWeekCategories[eachCategory]}\n        //   reduce={() => this.deductHourToActivity(eachCategory)}\n        //   add={() => this.addHourToActivity(eachCategory)}\n        //   reducePickedDay={() =>\n        //     this.deductHourToActivityPickedDay(eachCategory)\n        //   }\n        //   addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n        //   pickedDay={this.state.pickedDay}\n        //   dailyBudget={this.state.dailyBudget}\n        //   //disabled24hr={disabled24hr}\n        //   moreButtonDisabled={moreButtonDisabled}\n        //   lessButtonDisabled={lessButtonDisabled}\n        //   disabled24hr={disabled24hr}\n        //   pickDayLess0hours={pickDayLess0hours}\n        // />\n        React.createElement(\"div\", {\n          className: daily.DailyTimeBudget,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: daily.DailyTimeBudget,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: daily.Activity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, eachCategory.toUpperCase()), React.createElement(\"div\", {\n          className: daily.ActivityHours,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, this.state.activityWeekCategories[eachCategory]), React.createElement(\"button\", {\n          className: daily.Less,\n          onClick: () => this.deductHourToActivity(eachCategory),\n          disabled: lessButtonDisabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, \"Less\"), React.createElement(\"button\", {\n          className: daily.More,\n          onClick: () => this.addHourToActivity(eachCategory) // disabled={this.props.moreButtonDisabled}\n          ,\n          disabled: moreButtonDisabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, \"More\")))\n      );\n    }); //if display displayPickedDay if its true\n\n    let displayPickedDay = null;\n\n    if (this.state.pickedDay) {\n      let pickedDayBudget = _objectSpread({}, this.state.dailyBudget);\n\n      let foundDayBudget = _objectSpread({}, this.state.dailyBudget[pickedDay]);\n\n      displayPickedDay = Object.keys(this.state.dailyBudget[pickedDay]).map(eachCategory => {\n        let disabled24hr = null;\n        let pickDayLess0hours = null;\n\n        if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n          disabled24hr = true;\n        }\n\n        if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n          pickDayLess0hours = true;\n        }\n\n        return React.createElement(PickedDayBudget, {\n          key: eachCategory.concat(eachCategory),\n          activity: eachCategory,\n          hours: foundDayBudget[eachCategory],\n          reducePickedDay: () => this.deductHourToActivityPickedDay(eachCategory),\n          addPickedDay: () => this.addHourToActivityPickedDay(eachCategory),\n          pickedDay: this.state.pickedDay,\n          dailyBudget: this.state.dailyBudget,\n          disabled24hr: disabled24hr,\n          pickDayLess0hours: pickDayLess0hours,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        });\n      });\n    }\n\n    let PickDaysOfWeekTimeBudget = React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"dropdownMenu2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Monday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Monday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Tuesday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Tuesday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Wednesday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Wednesday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Thursday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Thursday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Friday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Friday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Saturday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Saturday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2 dropdown-item\",\n      value: \"Sunday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Sunday\"));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Inside WeeklyTimeBudget\"), React.createElement(\"label\", {\n      className: \"btn  dropdown m-2 active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success dropdown-toggle\",\n      type: \"button\",\n      id: \"dropdownMenu2\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Pick Day to edit Time Budget\"), PickDaysOfWeekTimeBudget), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Time Budget for Week\"), displayDailyTimeBudget));\n  }\n\n}\n\nWeeklyTimeBudget.contextType = StoreDataContext;\nexport default WeeklyTimeBudget; //24 hours a day //broken down into .5 hour\n//\n// class WeeklyTimeBudget extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.thisWeek = new ObjectiveData();\n//     this.thisWeek.timeBudgetDay();\n//     this.state = {\n//       activityWeekCategories: '',\n//       dailyBudget: '',\n//       pickedDay: ''\n//     };\n//     // this.state = {\n//     //   activityWeekCategories: this.thisWeek.activityWeekCategories,\n//     //   dailyBudget: this.thisWeek.dailyBudget,\n//     //   pickedDay: ''\n//     // };\n//     this.initialDataRequest = () => {\n//       let dataRequestMessage = {\n//         typeOfData: 'obj',\n//         handlerChoice: '1',\n//         dataLocation: '',\n//         infoType: '',\n//         info: ''\n//       };\n//       this.context.dataRequestHandler(dataRequestMessage);\n//     };\n//   }\n//   requestDataHandler = () => {\n//     //let contentChoice = event.target.value; //'' number used in displayContent component\n//     let newContentChoice = '';\n//     let typeOfData = ''; //string: syllabus,tasks,events,objectives\n//     let handlerChoice = ''; //string: '#' handler inside of database\n//     let dataLocation = ''; // string: where obj found inside database\n//     let infoType = ''; //string: index/id/\n//     let info = ''; //string: actual info\n//     //let today = calendarObj();\n//     typeOfData = 'tasks';\n//     handlerChoice = '1';\n//     dataLocation = '';\n//     infoType = null;\n//     info = null;\n//     newContentChoice = '1';\n//     let dataRequestMessage = {\n//       typeOfData: 'obj',\n//       handlerChoice: '1',\n//       dataLocation: dataLocation,\n//       infoType: infoType,\n//       info: info\n//     };\n//     // alert(newContentChoice);\n//     let contentViewObject = {\n//       target: {\n//         value: newContentChoice\n//       }\n//     };\n//     this.context.dataRequestHandler(dataRequestMessage);\n//     this.context.contentViewHandler(contentViewObject);\n//   };\n//   addHourToActivityPickedDay = activity => {\n//     let pickedDay = this.state.pickedDay;\n//     let allDaysTimeBudget = this.state.dailyBudget;\n//     let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n//     let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n//     let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount + 1;\n//     let pickedDayUpdatedActivityHourCount =\n//       pickedDayCurrentActivityHourCount + 1;\n//     pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n//     pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n//     allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n//     this.setState({ dailyBudget: allDaysTimeBudget });\n//     this.addHourToActivity(activity);\n//     //this.updatePurchaseState(updatedIngredients);\n//   };\n//   deductHourToActivityPickedDay = activity => {\n//     let pickedDay = this.state.pickedDay;\n//     let allDaysTimeBudget = this.state.dailyBudget;\n//     let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n//     let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n//     let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount - 1;\n//     let pickedDayUpdatedActivityHourCount =\n//       pickedDayCurrentActivityHourCount - 1;\n//     pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n//     pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n//     allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n//     this.setState({ dailyBudget: allDaysTimeBudget });\n//     this.deductHourToActivity(activity);\n//   };\n//   addHourToActivity = activity => {\n//     let activityWeekCategories = { ...this.state.activityWeekCategories };\n//     let currentTotalHourCount = activityWeekCategories.totalHours;\n//     let currentActivityHourCount = activityWeekCategories[activity];\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let updatedTotalHourCount = currentTotalHourCount + 1;\n//     activityWeekCategories.totalHours = updatedTotalHourCount;\n//     let updatedActivityHourCount = currentActivityHourCount + 1;\n//     activityWeekCategories[activity] = updatedActivityHourCount;\n//     this.setState({ activityWeekCategories: activityWeekCategories });\n//     //this.deductHourToActivity(activity);\n//     //this.updatePurchaseState(updatedIngredients);\n//   };\n//   deductHourToActivity = activity => {\n//     let activityWeekCategories = { ...this.state.activityWeekCategories };\n//     let currentTotalHourCount = activityWeekCategories.totalHours;\n//     let currentActivityHourCount = activityWeekCategories[activity];\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let updatedTotalHourCount = currentTotalHourCount - 1;\n//     activityWeekCategories.totalHours = updatedTotalHourCount;\n//     let updatedActivityHourCount = currentActivityHourCount - 1;\n//     activityWeekCategories[activity] = updatedActivityHourCount;\n//     this.setState({ activityWeekCategories: activityWeekCategories });\n//   };\n//   pickDayHandler = event => {\n//     let pickedDay = event.target.value;\n//     //alert(pickedDay);\n//     this.setState({\n//       pickedDay: pickedDay\n//     });\n//     let contentViewObject = {\n//       target: {\n//         value: '12'\n//       }\n//     };\n//     this.context.contentViewHandler(contentViewObject);\n//   };\n//   static contextType = StoreDataContext;\n//   initialState = () => {\n//     let dataBudget = this.context.dataBudget.dailyBudget;\n//     let activityWeekCategories = this.context.dataBudget.activityWeekCategories;\n//     this.setState({\n//       dataBudget: dataBudget,\n//       activityWeekCategories: activityWeekCategories\n//     });\n//   };\n//   render() {\n//     //when first starting -> fetch data, store it as local data\n//     //once all editing done, data gets sent back to objData\n//     if (this.context.dataBudget) {\n//       this.initialState();\n//     }\n//     let disabledDeductBtnWeek = { ...this.state.activityWeekCategories };\n//     for (let key in disabledDeductBtnWeek) {\n//       disabledDeductBtnWeek[key] = disabledDeductBtnWeek[key] <= 0;\n//     }\n//     let displayDailyTimeBudget = null;\n//     let pickedDay = this.state.pickedDay;\n//     displayDailyTimeBudget = Object.keys(this.state.activityWeekCategories).map(\n//       eachCategory => {\n//         let moreButtonDisabled = null;\n//         let lessButtonDisabled = null;\n//         if (this.state.activityWeekCategories.totalHours >= 168) {\n//           moreButtonDisabled = true;\n//         }\n//         if (this.state.activityWeekCategories[eachCategory] <= 0) {\n//           lessButtonDisabled = true;\n//         }\n//         let disabled24hr = null;\n//         let pickDayLess0hours = null;\n//         if (pickedDay) {\n//           if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n//             disabled24hr = true;\n//           }\n//           if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n//             pickDayLess0hours = true;\n//           }\n//         }\n//         return (\n//           <PickedDayBudget\n//             key={eachCategory.concat(eachCategory)}\n//             activity={eachCategory}\n//             hours={this.state.activityWeekCategories[eachCategory]}\n//             reduce={() => this.deductHourToActivity(eachCategory)}\n//             add={() => this.addHourToActivity(eachCategory)}\n//             reducePickedDay={() =>\n//               this.deductHourToActivityPickedDay(eachCategory)\n//             }\n//             addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n//             pickedDay={this.state.pickedDay}\n//             dailyBudget={this.state.dailyBudget}\n//             //disabled24hr={disabled24hr}\n//             moreButtonDisabled={moreButtonDisabled}\n//             lessButtonDisabled={lessButtonDisabled}\n//             disabled24hr={disabled24hr}\n//             pickDayLess0hours={pickDayLess0hours}\n//           />\n//         );\n//       }\n//     );\n//     //if display displayPickedDay if its true\n//     let displayPickedDay = null;\n//     if (this.state.pickedDay) {\n//       let pickedDayBudget = { ...this.state.dailyBudget };\n//       let foundDayBudget = { ...this.state.dailyBudget[pickedDay] };\n//       displayPickedDay = Object.keys(this.state.dailyBudget[pickedDay]).map(\n//         eachCategory => {\n//           let disabled24hr = null;\n//           let pickDayLess0hours = null;\n//           if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n//             disabled24hr = true;\n//           }\n//           if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n//             pickDayLess0hours = true;\n//           }\n//           return (\n//             <PickedDayBudget\n//               key={eachCategory.concat(eachCategory)}\n//               activity={eachCategory}\n//               hours={foundDayBudget[eachCategory]}\n//               reducePickedDay={() =>\n//                 this.deductHourToActivityPickedDay(eachCategory)\n//               }\n//               addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n//               pickedDay={this.state.pickedDay}\n//               dailyBudget={this.state.dailyBudget}\n//               disabled24hr={disabled24hr}\n//               pickDayLess0hours={pickDayLess0hours}\n//             />\n//           );\n//         }\n//       );\n//     }\n//     let PickDaysOfWeekTimeBudget = (\n//       <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Monday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Monday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Tuesday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Tuesday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Wednesday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Wednesday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Thursday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Thursday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Friday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Friday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Saturday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Saturday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Sunday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Sunday\n//         </button>\n//       </div>\n//     );\n//     return (\n//       <React.Fragment>\n//         <label className=\"btn  dropdown m-2 active\">\n//           <button\n//             className=\"btn btn-success dropdown-toggle\"\n//             type=\"button\"\n//             id=\"dropdownMenu2\"\n//             data-toggle=\"dropdown\"\n//             aria-haspopup=\"true\"\n//             aria-expanded=\"false\"\n//           >\n//             Pick Day to edit Time Budget\n//           </button>\n//           {PickDaysOfWeekTimeBudget}\n//         </label>\n//         <div>\n//           <h3 className=\"\">Time Budget for Week</h3>\n//           {displayDailyTimeBudget}\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n// export default WeeklyTimeBudget;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Objectives/TimeBudget/WeeklyTimeBudget.js"],"names":["React","Component","classes","StoreDataContext","ObjectiveData","PickedDayBudget","daily","WeeklyTimeBudget","constructor","props","addHourToActivityPickedDay","activity","pickedDay","state","allDaysTimeBudget","dailyBudget","pickedDayDailyBudget","pickedDayCurrentTotalHourCount","totalHours","pickedDayCurrentActivityHourCount","pickedDayUpdatedTotalHourCount","pickedDayUpdatedActivityHourCount","setState","addHourToActivity","deductHourToActivityPickedDay","deductHourToActivity","activityWeekCategories","currentTotalHourCount","currentActivityHourCount","updatedTotalHourCount","updatedActivityHourCount","pickDayHandler","event","contentViewObject","target","value","context","contentViewHandler","initialState","dataBudget","word","requestDataHandler","newContentChoice","typeOfData","handlerChoice","dataLocation","infoType","info","dataRequestMessage","thisWeek","timeBudgetDay","initialDataRequest","dataRequestHandler","render","disabledDeductBtnWeek","key","displayDailyTimeBudget","Object","keys","map","eachCategory","moreButtonDisabled","lessButtonDisabled","disabled24hr","pickDayLess0hours","DailyTimeBudget","Activity","toUpperCase","ActivityHours","Less","More","displayPickedDay","pickedDayBudget","foundDayBudget","concat","PickDaysOfWeekTimeBudget","contextType"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport classes from './WeeklyTimeBudget.module.css';\nimport StoreDataContext from '../../../../context/StoreDataContext';\n\nimport ObjectiveData from '../../../../containers/Store/ObjectiveData';\nimport PickedDayBudget from './PickedDayBudget/PickedDayBudget';\nimport daily from './PickedDayBudget/PickedDayBudget.module.css';\n//import classes2 from '../DailyTimeBudget/DailyTimeBudget.module.css';\n\n//each day have a predetermined amt of time for each category\n//then each day you can balance it according to 24 hours\n//after balancing for each day, you have to go back to balance the weekly total\n\nclass WeeklyTimeBudget extends Component {\n  constructor(props) {\n    super(props);\n    this.word = 'chicken';\n    this.thisWeek = new ObjectiveData();\n    this.thisWeek.timeBudgetDay();\n    this.state = {\n      activityWeekCategories: '',\n      dailyBudget: '',\n      pickedDay: ''\n    };\n\n    this.state = {\n      word: 'chicken',\n      activityWeekCategories: this.thisWeek.activityWeekCategories,\n      dailyBudget: this.thisWeek.dailyBudget,\n      pickedDay: ''\n    };\n    this.initialDataRequest = () => {\n      let dataRequestMessage = {\n        typeOfData: 'obj',\n        handlerChoice: '1',\n        dataLocation: '',\n        infoType: '',\n        info: ''\n      };\n      this.context.dataRequestHandler(dataRequestMessage);\n    };\n  }\n\n  addHourToActivityPickedDay = activity => {\n    let pickedDay = this.state.pickedDay;\n    let allDaysTimeBudget = this.state.dailyBudget;\n    let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n\n    let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n    let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount + 1;\n\n    let pickedDayUpdatedActivityHourCount =\n      pickedDayCurrentActivityHourCount + 1;\n    pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n    pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n    allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n\n    this.setState({ dailyBudget: allDaysTimeBudget });\n    this.addHourToActivity(activity);\n    //this.updatePurchaseState(updatedIngredients);\n  };\n\n  deductHourToActivityPickedDay = activity => {\n    let pickedDay = this.state.pickedDay;\n    let allDaysTimeBudget = this.state.dailyBudget;\n    let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n\n    let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n    let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount - 1;\n\n    let pickedDayUpdatedActivityHourCount =\n      pickedDayCurrentActivityHourCount - 1;\n    pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n    pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n    allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n\n    this.setState({ dailyBudget: allDaysTimeBudget });\n    this.deductHourToActivity(activity);\n  };\n\n  addHourToActivity = activity => {\n    let activityWeekCategories = { ...this.state.activityWeekCategories };\n    let currentTotalHourCount = activityWeekCategories.totalHours;\n    let currentActivityHourCount = activityWeekCategories[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let updatedTotalHourCount = currentTotalHourCount + 1;\n    activityWeekCategories.totalHours = updatedTotalHourCount;\n    let updatedActivityHourCount = currentActivityHourCount + 1;\n    activityWeekCategories[activity] = updatedActivityHourCount;\n\n    this.setState({ activityWeekCategories: activityWeekCategories });\n    //this.deductHourToActivity(activity);\n    //this.updatePurchaseState(updatedIngredients);\n  };\n  deductHourToActivity = activity => {\n    let activityWeekCategories = { ...this.state.activityWeekCategories };\n    let currentTotalHourCount = activityWeekCategories.totalHours;\n    let currentActivityHourCount = activityWeekCategories[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let updatedTotalHourCount = currentTotalHourCount - 1;\n    activityWeekCategories.totalHours = updatedTotalHourCount;\n    let updatedActivityHourCount = currentActivityHourCount - 1;\n    activityWeekCategories[activity] = updatedActivityHourCount;\n\n    this.setState({ activityWeekCategories: activityWeekCategories });\n  };\n\n  pickDayHandler = event => {\n    let contentViewObject = {\n      target: {\n        value: '12'\n      }\n    };\n    let pickedDay = event.target.value;\n    //alert(pickedDay);\n    this.setState(\n      {\n        pickedDay: pickedDay\n      },\n      () => this.context.contentViewHandler(contentViewObject)\n    );\n  };\n\n  initialState = () => {\n    let dataBudget = this.context.dataBudget.dailyBudget;\n    let activityWeekCategories = this.context.dataBudget.activityWeekCategories;\n\n    this.setState({\n      dataBudget: dataBudget,\n      activityWeekCategories: activityWeekCategories,\n      word: 'chicken'\n    });\n  };\n\n  requestDataHandler = () => {\n    //let contentChoice = event.target.value; //'' number used in displayContent component\n    let newContentChoice = '';\n    let typeOfData = ''; //string: syllabus,tasks,events,objectives\n    let handlerChoice = ''; //string: '#' handler inside of database\n    let dataLocation = ''; // string: where obj found inside database\n    let infoType = ''; //string: index/id/\n    let info = ''; //string: actual info\n    //let today = calendarObj();\n\n    typeOfData = 'tasks';\n    handlerChoice = '1';\n    dataLocation = '';\n    infoType = null;\n    info = null;\n    newContentChoice = '12';\n\n    let dataRequestMessage = {\n      typeOfData: 'obj',\n      handlerChoice: '1',\n      dataLocation: dataLocation,\n      infoType: infoType,\n      info: info\n    };\n    // alert(newContentChoice);\n    let contentViewObject = {\n      target: {\n        value: newContentChoice\n      }\n    };\n\n    //this.context.dataRequestHandler(dataRequestMessage);\n\n    this.context.contentViewHandler(contentViewObject);\n  };\n\n  static contextType = StoreDataContext;\n  render() {\n    //when first starting -> fetch data, store it as local data\n    //once all editing done, data gets sent back to objData\n\n    if (this.context.dataBudget) {\n      this.initialState();\n    }\n    let disabledDeductBtnWeek = { ...this.state.activityWeekCategories };\n\n    for (let key in disabledDeductBtnWeek) {\n      disabledDeductBtnWeek[key] = disabledDeductBtnWeek[key] <= 0;\n    }\n\n    let displayDailyTimeBudget = null;\n    let pickedDay = this.state.pickedDay;\n\n    displayDailyTimeBudget = Object.keys(this.state.activityWeekCategories).map(\n      eachCategory => {\n        let moreButtonDisabled = null;\n        let lessButtonDisabled = null;\n\n        if (this.state.activityWeekCategories.totalHours >= 168) {\n          moreButtonDisabled = true;\n        }\n        if (this.state.activityWeekCategories[eachCategory] <= 0) {\n          lessButtonDisabled = true;\n        }\n        let disabled24hr = null;\n        let pickDayLess0hours = null;\n        if (pickedDay) {\n          if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n            disabled24hr = true;\n          }\n          if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n            pickDayLess0hours = true;\n          }\n        }\n        return (\n          // <PickedDayBudget\n          //   key={eachCategory.concat(eachCategory)}\n          //   activity={eachCategory}\n          //   hours={this.state.activityWeekCategories[eachCategory]}\n          //   reduce={() => this.deductHourToActivity(eachCategory)}\n          //   add={() => this.addHourToActivity(eachCategory)}\n          //   reducePickedDay={() =>\n          //     this.deductHourToActivityPickedDay(eachCategory)\n          //   }\n          //   addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n          //   pickedDay={this.state.pickedDay}\n          //   dailyBudget={this.state.dailyBudget}\n          //   //disabled24hr={disabled24hr}\n          //   moreButtonDisabled={moreButtonDisabled}\n          //   lessButtonDisabled={lessButtonDisabled}\n          //   disabled24hr={disabled24hr}\n          //   pickDayLess0hours={pickDayLess0hours}\n          // />\n\n          <div className={daily.DailyTimeBudget}>\n            <div className={daily.DailyTimeBudget}>\n              <div className={daily.Activity}>{eachCategory.toUpperCase()}</div>\n              <div className={daily.ActivityHours}>\n                {this.state.activityWeekCategories[eachCategory]}\n              </div>\n\n              <button\n                className={daily.Less}\n                onClick={() => this.deductHourToActivity(eachCategory)}\n                disabled={lessButtonDisabled}\n              >\n                Less\n              </button>\n\n              <button\n                className={daily.More}\n                onClick={() => this.addHourToActivity(eachCategory)}\n                // disabled={this.props.moreButtonDisabled}\n\n                disabled={moreButtonDisabled}\n              >\n                More\n              </button>\n            </div>\n            {/* <div>{displayPickedDay}</div> */}\n          </div>\n        );\n      }\n    );\n\n    //if display displayPickedDay if its true\n    let displayPickedDay = null;\n\n    if (this.state.pickedDay) {\n      let pickedDayBudget = { ...this.state.dailyBudget };\n      let foundDayBudget = { ...this.state.dailyBudget[pickedDay] };\n\n      displayPickedDay = Object.keys(this.state.dailyBudget[pickedDay]).map(\n        eachCategory => {\n          let disabled24hr = null;\n          let pickDayLess0hours = null;\n          if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n            disabled24hr = true;\n          }\n          if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n            pickDayLess0hours = true;\n          }\n\n          return (\n            <PickedDayBudget\n              key={eachCategory.concat(eachCategory)}\n              activity={eachCategory}\n              hours={foundDayBudget[eachCategory]}\n              reducePickedDay={() =>\n                this.deductHourToActivityPickedDay(eachCategory)\n              }\n              addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n              pickedDay={this.state.pickedDay}\n              dailyBudget={this.state.dailyBudget}\n              disabled24hr={disabled24hr}\n              pickDayLess0hours={pickDayLess0hours}\n            />\n          );\n        }\n      );\n    }\n    let PickDaysOfWeekTimeBudget = (\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Monday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Monday\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Tuesday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Tuesday\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Wednesday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Wednesday\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Thursday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Thursday\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Friday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Friday\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Saturday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Saturday\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary mr-2 dropdown-item\"\n          value=\"Sunday\"\n          onClick={event => this.pickDayHandler(event)}\n        >\n          Sunday\n        </button>\n      </div>\n    );\n    return (\n      <React.Fragment>\n        <div>Inside WeeklyTimeBudget</div>\n        <label className=\"btn  dropdown m-2 active\">\n          <button\n            className=\"btn btn-success dropdown-toggle\"\n            type=\"button\"\n            id=\"dropdownMenu2\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            Pick Day to edit Time Budget\n          </button>\n\n          {PickDaysOfWeekTimeBudget}\n        </label>\n\n        <div>\n          <h3 className=\"\">Time Budget for Week</h3>\n          {displayDailyTimeBudget}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default WeeklyTimeBudget;\n\n//24 hours a day //broken down into .5 hour\n//\n// class WeeklyTimeBudget extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.thisWeek = new ObjectiveData();\n//     this.thisWeek.timeBudgetDay();\n//     this.state = {\n//       activityWeekCategories: '',\n//       dailyBudget: '',\n//       pickedDay: ''\n//     };\n\n//     // this.state = {\n//     //   activityWeekCategories: this.thisWeek.activityWeekCategories,\n//     //   dailyBudget: this.thisWeek.dailyBudget,\n//     //   pickedDay: ''\n//     // };\n//     this.initialDataRequest = () => {\n//       let dataRequestMessage = {\n//         typeOfData: 'obj',\n//         handlerChoice: '1',\n//         dataLocation: '',\n//         infoType: '',\n//         info: ''\n//       };\n//       this.context.dataRequestHandler(dataRequestMessage);\n//     };\n//   }\n\n//   requestDataHandler = () => {\n//     //let contentChoice = event.target.value; //'' number used in displayContent component\n//     let newContentChoice = '';\n//     let typeOfData = ''; //string: syllabus,tasks,events,objectives\n//     let handlerChoice = ''; //string: '#' handler inside of database\n//     let dataLocation = ''; // string: where obj found inside database\n//     let infoType = ''; //string: index/id/\n//     let info = ''; //string: actual info\n//     //let today = calendarObj();\n\n//     typeOfData = 'tasks';\n//     handlerChoice = '1';\n//     dataLocation = '';\n//     infoType = null;\n//     info = null;\n//     newContentChoice = '1';\n\n//     let dataRequestMessage = {\n//       typeOfData: 'obj',\n//       handlerChoice: '1',\n//       dataLocation: dataLocation,\n//       infoType: infoType,\n//       info: info\n//     };\n//     // alert(newContentChoice);\n//     let contentViewObject = {\n//       target: {\n//         value: newContentChoice\n//       }\n//     };\n\n//     this.context.dataRequestHandler(dataRequestMessage);\n\n//     this.context.contentViewHandler(contentViewObject);\n//   };\n\n//   addHourToActivityPickedDay = activity => {\n//     let pickedDay = this.state.pickedDay;\n//     let allDaysTimeBudget = this.state.dailyBudget;\n//     let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n\n//     let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n//     let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount + 1;\n\n//     let pickedDayUpdatedActivityHourCount =\n//       pickedDayCurrentActivityHourCount + 1;\n//     pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n//     pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n//     allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n\n//     this.setState({ dailyBudget: allDaysTimeBudget });\n//     this.addHourToActivity(activity);\n//     //this.updatePurchaseState(updatedIngredients);\n//   };\n\n//   deductHourToActivityPickedDay = activity => {\n//     let pickedDay = this.state.pickedDay;\n//     let allDaysTimeBudget = this.state.dailyBudget;\n//     let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n\n//     let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n//     let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount - 1;\n\n//     let pickedDayUpdatedActivityHourCount =\n//       pickedDayCurrentActivityHourCount - 1;\n//     pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n//     pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n//     allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n\n//     this.setState({ dailyBudget: allDaysTimeBudget });\n//     this.deductHourToActivity(activity);\n//   };\n\n//   addHourToActivity = activity => {\n//     let activityWeekCategories = { ...this.state.activityWeekCategories };\n//     let currentTotalHourCount = activityWeekCategories.totalHours;\n//     let currentActivityHourCount = activityWeekCategories[activity];\n\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let updatedTotalHourCount = currentTotalHourCount + 1;\n//     activityWeekCategories.totalHours = updatedTotalHourCount;\n//     let updatedActivityHourCount = currentActivityHourCount + 1;\n//     activityWeekCategories[activity] = updatedActivityHourCount;\n\n//     this.setState({ activityWeekCategories: activityWeekCategories });\n//     //this.deductHourToActivity(activity);\n//     //this.updatePurchaseState(updatedIngredients);\n//   };\n//   deductHourToActivity = activity => {\n//     let activityWeekCategories = { ...this.state.activityWeekCategories };\n//     let currentTotalHourCount = activityWeekCategories.totalHours;\n//     let currentActivityHourCount = activityWeekCategories[activity];\n\n//     //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n//     let updatedTotalHourCount = currentTotalHourCount - 1;\n//     activityWeekCategories.totalHours = updatedTotalHourCount;\n//     let updatedActivityHourCount = currentActivityHourCount - 1;\n//     activityWeekCategories[activity] = updatedActivityHourCount;\n\n//     this.setState({ activityWeekCategories: activityWeekCategories });\n//   };\n\n//   pickDayHandler = event => {\n//     let pickedDay = event.target.value;\n//     //alert(pickedDay);\n//     this.setState({\n//       pickedDay: pickedDay\n//     });\n//     let contentViewObject = {\n//       target: {\n//         value: '12'\n//       }\n//     };\n\n//     this.context.contentViewHandler(contentViewObject);\n//   };\n//   static contextType = StoreDataContext;\n\n//   initialState = () => {\n//     let dataBudget = this.context.dataBudget.dailyBudget;\n//     let activityWeekCategories = this.context.dataBudget.activityWeekCategories;\n\n//     this.setState({\n//       dataBudget: dataBudget,\n//       activityWeekCategories: activityWeekCategories\n//     });\n//   };\n//   render() {\n//     //when first starting -> fetch data, store it as local data\n//     //once all editing done, data gets sent back to objData\n\n//     if (this.context.dataBudget) {\n//       this.initialState();\n//     }\n//     let disabledDeductBtnWeek = { ...this.state.activityWeekCategories };\n\n//     for (let key in disabledDeductBtnWeek) {\n//       disabledDeductBtnWeek[key] = disabledDeductBtnWeek[key] <= 0;\n//     }\n\n//     let displayDailyTimeBudget = null;\n//     let pickedDay = this.state.pickedDay;\n\n//     displayDailyTimeBudget = Object.keys(this.state.activityWeekCategories).map(\n//       eachCategory => {\n//         let moreButtonDisabled = null;\n//         let lessButtonDisabled = null;\n\n//         if (this.state.activityWeekCategories.totalHours >= 168) {\n//           moreButtonDisabled = true;\n//         }\n//         if (this.state.activityWeekCategories[eachCategory] <= 0) {\n//           lessButtonDisabled = true;\n//         }\n//         let disabled24hr = null;\n//         let pickDayLess0hours = null;\n//         if (pickedDay) {\n//           if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n//             disabled24hr = true;\n//           }\n//           if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n//             pickDayLess0hours = true;\n//           }\n//         }\n//         return (\n//           <PickedDayBudget\n//             key={eachCategory.concat(eachCategory)}\n//             activity={eachCategory}\n//             hours={this.state.activityWeekCategories[eachCategory]}\n//             reduce={() => this.deductHourToActivity(eachCategory)}\n//             add={() => this.addHourToActivity(eachCategory)}\n//             reducePickedDay={() =>\n//               this.deductHourToActivityPickedDay(eachCategory)\n//             }\n//             addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n//             pickedDay={this.state.pickedDay}\n//             dailyBudget={this.state.dailyBudget}\n//             //disabled24hr={disabled24hr}\n//             moreButtonDisabled={moreButtonDisabled}\n//             lessButtonDisabled={lessButtonDisabled}\n//             disabled24hr={disabled24hr}\n//             pickDayLess0hours={pickDayLess0hours}\n//           />\n//         );\n//       }\n//     );\n\n//     //if display displayPickedDay if its true\n//     let displayPickedDay = null;\n\n//     if (this.state.pickedDay) {\n//       let pickedDayBudget = { ...this.state.dailyBudget };\n//       let foundDayBudget = { ...this.state.dailyBudget[pickedDay] };\n\n//       displayPickedDay = Object.keys(this.state.dailyBudget[pickedDay]).map(\n//         eachCategory => {\n//           let disabled24hr = null;\n//           let pickDayLess0hours = null;\n//           if (this.state.dailyBudget[pickedDay].totalHours >= 24) {\n//             disabled24hr = true;\n//           }\n//           if (this.state.dailyBudget[pickedDay][eachCategory] <= 0) {\n//             pickDayLess0hours = true;\n//           }\n\n//           return (\n//             <PickedDayBudget\n//               key={eachCategory.concat(eachCategory)}\n//               activity={eachCategory}\n//               hours={foundDayBudget[eachCategory]}\n//               reducePickedDay={() =>\n//                 this.deductHourToActivityPickedDay(eachCategory)\n//               }\n//               addPickedDay={() => this.addHourToActivityPickedDay(eachCategory)}\n//               pickedDay={this.state.pickedDay}\n//               dailyBudget={this.state.dailyBudget}\n//               disabled24hr={disabled24hr}\n//               pickDayLess0hours={pickDayLess0hours}\n//             />\n//           );\n//         }\n//       );\n//     }\n//     let PickDaysOfWeekTimeBudget = (\n//       <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Monday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Monday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Tuesday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Tuesday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Wednesday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Wednesday\n//         </button>\n\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Thursday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Thursday\n//         </button>\n\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Friday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Friday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Saturday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Saturday\n//         </button>\n//         <button\n//           type=\"button\"\n//           className=\"btn btn-secondary mr-2 dropdown-item\"\n//           value=\"Sunday\"\n//           onClick={event => this.pickDayHandler(event)}\n//         >\n//           Sunday\n//         </button>\n//       </div>\n//     );\n//     return (\n//       <React.Fragment>\n//         <label className=\"btn  dropdown m-2 active\">\n//           <button\n//             className=\"btn btn-success dropdown-toggle\"\n//             type=\"button\"\n//             id=\"dropdownMenu2\"\n//             data-toggle=\"dropdown\"\n//             aria-haspopup=\"true\"\n//             aria-expanded=\"false\"\n//           >\n//             Pick Day to edit Time Budget\n//           </button>\n\n//           {PickDaysOfWeekTimeBudget}\n//         </label>\n\n//         <div>\n//           <h3 className=\"\">Time Budget for Week</h3>\n//           {displayDailyTimeBudget}\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n// export default WeeklyTimeBudget;\n"]},"metadata":{},"sourceType":"module"}
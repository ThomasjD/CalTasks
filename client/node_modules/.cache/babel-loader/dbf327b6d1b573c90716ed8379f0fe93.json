{"ast":null,"code":"import _defineProperty from \"/Users/thomasjd/Desktop/caltask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/src/containers/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport rocky from './App.module.css';\nimport Tasks from '../components/Tasks/Tasks'; //import Task from '../components/Tasks/Task/Task'\n\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport classes from '../components/Cockpit/Cockpit.module.css';\nimport Cockpit2 from '../components/Cockpit/Cockpit2';\nimport Navbar2 from '../components/Cockpit/Navbar/Navbar2';\nimport '../components/Tasks/Task/Task';\nimport TodayTasks from '../components/TodayTasks/TodayTasks'; //import MaxReact from '../components/Syllabus/MaxReact'\n\nimport WithClass from '../hoc/WithClass';\nimport NewTaskContext from '../context/newTask-context'; //import DataStructure from './DataStructure';\n//import Student from './Student.css';\n//import StudentTable from './StudentTable'\n// import StudentTable from './StudentTable';\n//import Navbar from '../components/Cockpit/navBar';\n//import Syllabus from '../components/Syllabus/Syllabus';\n//import for bootstraps\n// import axios from 'axios';\n// import { Container, Row, Col } from 'reactstrap';\n// import Post from '../components/Post';\n// import Header from '../components/Header';\n// import SideCard from '../components/SideCard';\n\nclass App extends Component {\n  constructor(props) {\n    // const bigDaddy = {...this.DataStructure}\n    // console.log(bigDaddy.state.ShowView)\n    super(props);\n    this.state = {\n      tasks: [{\n        id: 'qrwrwq',\n        todo: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      }, {\n        id: 'egewhw',\n        todo: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      }, {\n        id: 'asfasv',\n        todo: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }],\n      lastHeaderStatus: true,\n      lastHeader: [],\n      lastTodayTasksHeader: [],\n      maxReact: [{\n        id: 'xvlwil',\n        lesson: '90. (for props Changes)',\n        completion: false\n      }, {\n        id: 'bbbskk',\n        lesson: '91. (for state Changes)',\n        completion: false\n      }, {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }],\n      Monday: [{\n        id: 'morning',\n        timeOfDay: '',\n        task: 'comprar comida'\n      }, {\n        id: 'afternoon',\n        timeOfDay: '',\n        task: 'eat lunch'\n      }, {\n        id: 'evening',\n        timeOfDay: '',\n        task: 'play ball'\n      }],\n      Tuesday: [{\n        id: 'morning',\n        task: ''\n      }, {\n        id: 'afternoon',\n        task: ''\n      }, {\n        id: 'evening',\n        task: ''\n      }],\n      showTasks: false,\n      reRenderTasks: false,\n      reRenderTodayTasks: false,\n      showTasksToday: false,\n      showCockpit: true,\n      showCockpit2: true,\n      showView: '0',\n      showNewTask: false,\n      showSyllabusFromNav: false,\n      showSyllabus: true,\n      students: [{\n        id: 1,\n        name: 'Wasif',\n        age: 21,\n        email: 'wasif@email.com'\n      }, {\n        id: 2,\n        name: 'Ali',\n        age: 19,\n        email: 'ali@email.com'\n      }, {\n        id: 3,\n        name: 'Saad',\n        age: 16,\n        email: 'saad@email.com'\n      }, {\n        id: 4,\n        name: 'Asad',\n        age: 25,\n        email: 'asad@email.com'\n      }],\n      contentChoice: '0'\n    };\n\n    this.contentViewHandler = event => {\n      let newViewChoice = event.target.value;\n      console.log(newViewChoice); //Comparing new contentChoice with previous contentChoice\n      //if newContentChoice === oldContentChoice\n      //turn off the view\n\n      if (newViewChoice === this.state.contentChoice) {\n        return this.setState({\n          contentChoice: '0'\n        });\n      } else {\n        //Setting which Content view to show\n        //there will be only 1 contentChoice stored in state\n        switch (newViewChoice) {\n          case '0':\n            //only cockpit\n            this.setState({\n              contentChoice: '0'\n            });\n            break;\n\n          case '1':\n            //All tasks\n            this.setState({\n              contentChoice: '1'\n            });\n\n            if (this.state.tasks != 0) {\n              this.setState({\n                lastHeader: this.state.tasks[0]\n              });\n            } else {\n              this.setState({\n                lastHeader: this.state.lastHeader\n              });\n            }\n\n            break;\n\n          case '2':\n            //TodaysTasks\n            this.setState({\n              contentChoice: '2'\n            });\n\n            if (this.state.Monday != 0) {\n              this.setState({\n                lastTodayTasksHeader: this.state.Monday[0]\n              });\n            } else {\n              this.setState({\n                lastTodayTasksHeader: this.state.lastTodayTasksHeader\n              });\n            }\n\n            break;\n\n          case '3':\n            //Syllabus\n            this.setState({\n              contentChoice: '3',\n              showSyllabus: true\n            });\n            break;\n        }\n      }\n    };\n\n    this.deleteTaskhandler = taskIndex => {\n      alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTasks: true\n      }); //get tasks array\n\n      const tasks = [...this.state.tasks]; //splice task of interst\n\n      tasks.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        tasks: tasks\n      }); //this.setState({ showTasksCounter: false });\n    };\n\n    this.deleteTodayTaskhandler = taskIndex => {\n      alert('Are you sure you want to delete this task?');\n      this.setState({\n        reRenderTodayTasks: true\n      }); //get tasks array\n\n      const Monday = [...this.state.Monday]; //splice task of interst\n\n      Monday.splice(taskIndex, 1); //update new list of tasks to state\n\n      this.setState({\n        Monday: Monday\n      }); //this.setState({ showTasksCounter: false });\n    };\n\n    this.taskChangeHandler = (event, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      const foundTaskId = this.state.tasks.findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state.tasks[foundTaskId]);\n\n      updatedTask.todo = event.target.value; //pull out the states tasks array\n\n      const tasks = [...this.state.tasks]; //update the task with id of interest w/ new task description\n\n      tasks[foundTaskId] = updatedTask; //update the state\n\n      this.setState({\n        tasks: tasks\n      });\n    };\n\n    this.todayTaskChangeHandler = (event, taskChangedId) => {\n      //find the task that matches the taskChangedId\n      const foundTaskId = this.state.Monday.findIndex(currentId => {\n        return currentId.id === taskChangedId;\n      }); //create new task item that we will put into array\n\n      const updatedTask = _objectSpread({}, this.state.Monday[foundTaskId]);\n\n      updatedTask.todo = event.target.value; //pull out the states tasks array\n\n      const Monday = [...this.state.Monday]; //update the task with id of interest w/ new task description\n\n      Monday[foundTaskId] = updatedTask; //update the state\n\n      this.setState({\n        Monday: Monday\n      });\n    };\n  }\n\n  // componentWillMount() {\n  //   console.log('[App.js] componentWillMount')\n  // }\n  //(year, month, day, hours, minutes, seconds, milliseconds)\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[App.js] shouldComponentUpdate'); // let currentShowTaskStatus = this.state.showTasksCounter;\n    // if (nextState.tasks.length !== this.state.tasks.length) {\n    //   this.setState({ showTasksCounter: false });\n    // }\n\n    return true;\n  }\n\n  componentDidMount() {\n    console.log('[App.js] componentDidMount');\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    console.log('[App.js] componentDidUpdate ');\n\n    if (nextState.tasks.length !== this.state.tasks.length) {\n      this.setState({\n        reRenderTasks: false\n      });\n    }\n  }\n\n  render() {\n    let viewOptions = null;\n\n    if (this.state.showCockpit == true) {\n      viewOptions = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Cockpit, {\n        title: this.props.appTitle,\n        allTasksClicked: this.toggleShowTasksHandler,\n        tasksLength: this.state.tasks.length,\n        todayTasksClicked: this.displayTodayScheduleHandler,\n        deleteCockpit: () => {\n          this.setState({\n            showCockpit: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }));\n    }\n\n    let displayContent = null;\n\n    switch (this.state.contentChoice) {\n      case '0':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, \"Hello Thomas\"), React.createElement(\"img\", {\n          className: classes.logoImage,\n          src: require('../Assets/cockpitIcon.png'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }));\n        break;\n\n      case '1':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, \"tasks\\xA0has\\xA0#\\xA0\", this.state.tasks.length), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Tasks, {\n          reRenderTasks: this.state.reRenderTasks,\n          tasks: this.state.tasks,\n          clicked: this.deleteTaskhandler,\n          changed: this.taskChangeHandler,\n          lastHeader: this.state.lastHeader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n        break;\n\n      case '2':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(TodayTasks, {\n          reRenderTodayTasks: this.state.reRenderTodayTasks,\n          lastTodayTasksHeader: this.state.lastTodayTasksHeader,\n          clicked: this.deleteTodayTaskhandler,\n          changed: this.todayTaskChangeHandler,\n          monday: this.state.Monday,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n        break;\n\n      case '3':\n        displayContent = React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(Cockpit2, {\n          showSyllabusFromNav: this.state.showSyllabusFromNav,\n          showSyllabus: this.state.showSyllabus,\n          tasks: this.state.tasks,\n          lastHeader: this.state.lastHeader,\n          deleteCockpit2: () => {\n            this.setState({\n              showCockpit2: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\");\n        break;\n    }\n\n    return React.createElement(WithClass, {\n      passClass: rocky.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Navbar2, {\n      syllabusClicked: this.showSyllabusHandler,\n      title: this.props.appTitle,\n      allTasksClicked: this.toggleShowTasksHandler,\n      tasksLength: this.state.tasks.length,\n      todayTasksClicked: this.contentViewHandler,\n      deleteCockpit: () => {\n        this.setState({\n          showCockpit: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-group btn-group-toggle\",\n      \"data-toggle\": \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"btn btn-danger m-1 active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"radio\",\n      name: \"options\",\n      id: \"option1\",\n      autoComplete: \"off\",\n      onClick: event => this.contentViewHandler(event),\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), ' ', \"Cockpit\"), React.createElement(\"label\", {\n      className: \"btn btn-primary m-1 active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"radio\",\n      name: \"options\",\n      id: \"option1\",\n      autoComplete: \"off\",\n      onClick: event => this.contentViewHandler(event),\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), ' ', \"All Tasks\"), React.createElement(\"label\", {\n      className: \"btn btn-success m-1 active \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"radio\",\n      name: \"options\",\n      id: \"option2\",\n      autoComplete: \"off\",\n      onClick: event => this.contentViewHandler(event),\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), ' ', \"Todays Tasks\"), React.createElement(\"label\", {\n      className: \"btn btn-warning m-1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"radio\",\n      name: \"options\",\n      id: \"option3\",\n      autoComplete: \"off\",\n      onClick: event => this.contentViewHandler(event),\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), ' ', \"React Syllabus\"))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex flex-row \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card text-white bg-info m-1 p-1 col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, viewOptions)), React.createElement(\"div\", {\n      className: \"card bg-light m-1 p-1 col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, displayContent)))));\n  }\n\n}\n\nApp.getDerivedStateFromProps = (state, props) => {\n  console.log('[App.js] getDerivedStateFromProps', props);\n  return state;\n};\n\nexport default App; //using css modules on multiple classNames\n//{classNames({[styles.foo]: true, [styles.bar]: true})}\n//<p className={classNames({[rocky[classes]]: true, [rocky.red]: true})}","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/src/containers/App.js"],"names":["React","Component","rocky","Tasks","Cockpit","classes","Cockpit2","Navbar2","TodayTasks","WithClass","NewTaskContext","App","constructor","props","state","tasks","id","todo","deadline","location","lastHeaderStatus","lastHeader","lastTodayTasksHeader","maxReact","lesson","completion","Monday","timeOfDay","task","Tuesday","showTasks","reRenderTasks","reRenderTodayTasks","showTasksToday","showCockpit","showCockpit2","showView","showNewTask","showSyllabusFromNav","showSyllabus","students","name","age","email","contentChoice","contentViewHandler","event","newViewChoice","target","value","console","log","setState","deleteTaskhandler","taskIndex","alert","splice","deleteTodayTaskhandler","taskChangeHandler","taskChangedId","foundTaskId","findIndex","currentId","updatedTask","todayTaskChangeHandler","shouldComponentUpdate","nextProps","nextState","componentDidMount","componentDidUpdate","length","render","viewOptions","appTitle","toggleShowTasksHandler","displayTodayScheduleHandler","displayContent","logoImage","require","showSyllabusHandler","getDerivedStateFromProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport rocky from './App.module.css';\nimport Tasks from '../components/Tasks/Tasks';\n//import Task from '../components/Tasks/Task/Task'\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport classes from '../components/Cockpit/Cockpit.module.css';\nimport Cockpit2 from '../components/Cockpit/Cockpit2';\nimport Navbar2 from '../components/Cockpit/Navbar/Navbar2';\nimport '../components/Tasks/Task/Task';\nimport TodayTasks from '../components/TodayTasks/TodayTasks';\n//import MaxReact from '../components/Syllabus/MaxReact'\nimport WithClass from '../hoc/WithClass';\nimport NewTaskContext from '../context/newTask-context';\n//import DataStructure from './DataStructure';\n//import Student from './Student.css';\n//import StudentTable from './StudentTable'\n// import StudentTable from './StudentTable';\n//import Navbar from '../components/Cockpit/navBar';\n//import Syllabus from '../components/Syllabus/Syllabus';\n\n//import for bootstraps\n// import axios from 'axios';\n// import { Container, Row, Col } from 'reactstrap';\n// import Post from '../components/Post';\n// import Header from '../components/Header';\n// import SideCard from '../components/SideCard';\n\nclass App extends Component {\n  constructor(props) {\n    // const bigDaddy = {...this.DataStructure}\n    // console.log(bigDaddy.state.ShowView)\n    super(props);\n  }\n\n  state = {\n    tasks: [\n      {\n        id: 'qrwrwq',\n        todo: 'Find work',\n        deadline: 'Lunes',\n        location: 'Poplado'\n      },\n      {\n        id: 'egewhw',\n        todo: 'buy shoes',\n        deadline: 'Martes',\n        location: 'Floresta'\n      },\n      {\n        id: 'asfasv',\n        todo: 'mail package',\n        deadline: 'Jueves',\n        location: 'Laureles'\n      }\n    ],\n    lastHeaderStatus: true,\n    lastHeader: [],\n    lastTodayTasksHeader: [],\n    maxReact: [\n      { id: 'xvlwil', lesson: '90. (for props Changes)', completion: false },\n      { id: 'bbbskk', lesson: '91. (for state Changes)', completion: false },\n      {\n        id: 'kjhck2',\n        lesson: '92. Using useEffect() in Functional Components ',\n        completion: false\n      }\n    ],\n    Monday: [\n      { id: 'morning', timeOfDay: '', task: 'comprar comida' },\n      { id: 'afternoon', timeOfDay: '', task: 'eat lunch' },\n      { id: 'evening', timeOfDay: '', task: 'play ball' }\n    ],\n    Tuesday: [\n      { id: 'morning', task: '' },\n      { id: 'afternoon', task: '' },\n      { id: 'evening', task: '' }\n    ],\n    showTasks: false,\n    reRenderTasks: false,\n    reRenderTodayTasks: false,\n    showTasksToday: false,\n    showCockpit: true,\n    showCockpit2: true,\n    showView: '0',\n    showNewTask: false,\n    showSyllabusFromNav: false,\n    showSyllabus: true,\n    students: [\n      { id: 1, name: 'Wasif', age: 21, email: 'wasif@email.com' },\n      { id: 2, name: 'Ali', age: 19, email: 'ali@email.com' },\n      { id: 3, name: 'Saad', age: 16, email: 'saad@email.com' },\n      { id: 4, name: 'Asad', age: 25, email: 'asad@email.com' }\n    ],\n    contentChoice: '0'\n  };\n\n  static getDerivedStateFromProps = (state, props) => {\n    console.log('[App.js] getDerivedStateFromProps', props);\n    return state;\n  };\n\n  // componentWillMount() {\n  //   console.log('[App.js] componentWillMount')\n  // }\n\n  //(year, month, day, hours, minutes, seconds, milliseconds)\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[App.js] shouldComponentUpdate');\n    // let currentShowTaskStatus = this.state.showTasksCounter;\n    // if (nextState.tasks.length !== this.state.tasks.length) {\n    //   this.setState({ showTasksCounter: false });\n    // }\n    return true;\n  }\n\n  componentDidMount() {\n    console.log('[App.js] componentDidMount');\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    console.log('[App.js] componentDidUpdate ');\n    if (nextState.tasks.length !== this.state.tasks.length) {\n      this.setState({ reRenderTasks: false });\n    }\n  }\n\n  contentViewHandler = event => {\n    let newViewChoice = event.target.value;\n    console.log(newViewChoice);\n    //Comparing new contentChoice with previous contentChoice\n    //if newContentChoice === oldContentChoice\n    //turn off the view\n    if (newViewChoice === this.state.contentChoice) {\n      return this.setState({ contentChoice: '0' });\n    } else {\n      //Setting which Content view to show\n      //there will be only 1 contentChoice stored in state\n      switch (newViewChoice) {\n        case '0': //only cockpit\n          this.setState({ contentChoice: '0' });\n          break;\n        case '1': //All tasks\n          this.setState({ contentChoice: '1' });\n          if (this.state.tasks != 0) {\n            this.setState({ lastHeader: this.state.tasks[0] });\n          } else {\n            this.setState({ lastHeader: this.state.lastHeader });\n          }\n          break;\n\n        case '2': //TodaysTasks\n          this.setState({ contentChoice: '2' });\n          if (this.state.Monday != 0) {\n            this.setState({ lastTodayTasksHeader: this.state.Monday[0] });\n          } else {\n            this.setState({\n              lastTodayTasksHeader: this.state.lastTodayTasksHeader\n            });\n          }\n          break;\n        case '3': //Syllabus\n          this.setState({ contentChoice: '3', showSyllabus: true });\n\n          break;\n      }\n    }\n  };\n\n  //delete a task\n  deleteTaskhandler = taskIndex => {\n    alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTasks: true });\n\n    //get tasks array\n    const tasks = [...this.state.tasks];\n\n    //splice task of interst\n    tasks.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ tasks: tasks });\n\n    //this.setState({ showTasksCounter: false });\n  };\n\n  deleteTodayTaskhandler = taskIndex => {\n    alert('Are you sure you want to delete this task?');\n    this.setState({ reRenderTodayTasks: true });\n\n    //get tasks array\n    const Monday = [...this.state.Monday];\n\n    //splice task of interst\n    Monday.splice(taskIndex, 1);\n\n    //update new list of tasks to state\n    this.setState({ Monday: Monday });\n\n    //this.setState({ showTasksCounter: false });\n  };\n\n  //dynamic edit task\n  taskChangeHandler = (event, taskChangedId) => {\n    //find the task that matches the taskChangedId\n    const foundTaskId = this.state.tasks.findIndex(currentId => {\n      return currentId.id === taskChangedId;\n    });\n\n    //create new task item that we will put into array\n    const updatedTask = { ...this.state.tasks[foundTaskId] };\n    updatedTask.todo = event.target.value;\n\n    //pull out the states tasks array\n    const tasks = [...this.state.tasks];\n\n    //update the task with id of interest w/ new task description\n    tasks[foundTaskId] = updatedTask;\n\n    //update the state\n    this.setState({ tasks: tasks });\n  };\n\n  //dynamic edit task for Today (Monday)\n  todayTaskChangeHandler = (event, taskChangedId) => {\n    //find the task that matches the taskChangedId\n    const foundTaskId = this.state.Monday.findIndex(currentId => {\n      return currentId.id === taskChangedId;\n    });\n\n    //create new task item that we will put into array\n    const updatedTask = { ...this.state.Monday[foundTaskId] };\n\n    updatedTask.todo = event.target.value;\n\n    //pull out the states tasks array\n    const Monday = [...this.state.Monday];\n\n    //update the task with id of interest w/ new task description\n    Monday[foundTaskId] = updatedTask;\n\n    //update the state\n    this.setState({ Monday: Monday });\n  };\n\n  render() {\n    let viewOptions = null;\n    if (this.state.showCockpit == true) {\n      viewOptions = (\n        <React.Fragment>\n          <Cockpit\n            title={this.props.appTitle}\n            allTasksClicked={this.toggleShowTasksHandler}\n            tasksLength={this.state.tasks.length}\n            todayTasksClicked={this.displayTodayScheduleHandler}\n            deleteCockpit={() => {\n              this.setState({ showCockpit: false });\n            }}\n          />\n        </React.Fragment>\n      );\n    }\n\n    let displayContent = null;\n\n    switch (this.state.contentChoice) {\n      case '0':\n        displayContent = (\n          <React.Fragment>\n            <h3>Hello Thomas</h3>\n            <img\n              className={classes.logoImage}\n              src={require('../Assets/cockpitIcon.png')}\n            />\n          </React.Fragment>\n        );\n        break;\n\n      case '1':\n        displayContent = (\n          <React.Fragment>\n                        <p>tasks has # {this.state.tasks.length}</p>\n                        \n            <Tasks\n              reRenderTasks={this.state.reRenderTasks}\n              tasks={this.state.tasks}\n              clicked={this.deleteTaskhandler}\n              changed={this.taskChangeHandler}\n              lastHeader={this.state.lastHeader}\n            />\n                      \n          </React.Fragment>\n        );\n        break;\n\n      case '2':\n        displayContent = (\n          <React.Fragment>\n                        \n            <TodayTasks\n              reRenderTodayTasks={this.state.reRenderTodayTasks}\n              lastTodayTasksHeader={this.state.lastTodayTasksHeader}\n              clicked={this.deleteTodayTaskhandler}\n              changed={this.todayTaskChangeHandler}\n              monday={this.state.Monday}\n            />\n                      \n          </React.Fragment>\n        );\n        break;\n\n      case '3':\n        displayContent = (\n          <React.Fragment>\n                        \n            <Cockpit2\n              showSyllabusFromNav={this.state.showSyllabusFromNav}\n              showSyllabus={this.state.showSyllabus}\n              tasks={this.state.tasks}\n              lastHeader={this.state.lastHeader}\n              deleteCockpit2={() => {\n                this.setState({ showCockpit2: false });\n              }}\n            />\n                      \n          </React.Fragment>\n        );\n        break;\n    }\n\n    return (\n      <WithClass passClass={rocky.App}>\n        <Navbar2\n          syllabusClicked={this.showSyllabusHandler}\n          title={this.props.appTitle}\n          allTasksClicked={this.toggleShowTasksHandler}\n          tasksLength={this.state.tasks.length}\n          todayTasksClicked={this.contentViewHandler}\n          deleteCockpit={() => {\n            this.setState({ showCockpit: false });\n          }}\n        />\n\n        <div>\n          <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n            <label className=\"btn btn-danger m-1 active\">\n              <button\n                type=\"radio\"\n                name=\"options\"\n                id=\"option1\"\n                autoComplete=\"off\"\n                onClick={event => this.contentViewHandler(event)}\n                value=\"0\"\n              />{' '}\n              Cockpit\n            </label>\n\n            <label className=\"btn btn-primary m-1 active\">\n              <button\n                type=\"radio\"\n                name=\"options\"\n                id=\"option1\"\n                autoComplete=\"off\"\n                onClick={event => this.contentViewHandler(event)}\n                value=\"1\"\n              />{' '}\n              All Tasks\n            </label>\n\n            <label className=\"btn btn-success m-1 active \">\n              <button\n                type=\"radio\"\n                name=\"options\"\n                id=\"option2\"\n                autoComplete=\"off\"\n                onClick={event => this.contentViewHandler(event)}\n                value=\"2\"\n              />{' '}\n              Todays Tasks\n            </label>\n\n            <label className=\"btn btn-warning m-1 \">\n              <button\n                type=\"radio\"\n                name=\"options\"\n                id=\"option3\"\n                autoComplete=\"off\"\n                onClick={event => this.contentViewHandler(event)}\n                value=\"3\"\n              />{' '}\n              React Syllabus\n            </label>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"d-flex flex-row \">\n            <div className=\"card text-white bg-info m-1 p-1 col-3\">\n              <div className=\"p-1 \">{viewOptions}</div>\n            </div>\n            <div className=\"card bg-light m-1 p-1 col-9\">\n              <div className=\"p-1 \">{displayContent}</div>\n            </div>\n          </div>\n        </div>\n      </WithClass>\n    );\n  }\n}\n\nexport default App;\n\n//using css modules on multiple classNames\n//{classNames({[styles.foo]: true, [styles.bar]: true})}\n//<p className={classNames({[rocky[classes]]: true, [rocky.red]: true})}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/UI/Modal/Modal.js\";\nimport React, { useContext } from 'react';\nimport StoreDataContext from '../../../context/StoreDataContext';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux'; //import Backdrop from '../Backdrop/Backdrop';\n\nconst modal = props => {\n  const storeDataContext = useContext(StoreDataContext);\n  let displayModal = null;\n\n  if (storeDataContext.contentChoice === '12') {\n    displayModal = React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.Modal //bind style here to something dynamic, needs to be js object\n      //If props.show = true\n      // -transform to translateY(0)\n      // -which is the position defined in css,\n      ,\n      style: {\n        //set transform property -> vh = viewport (slide it outside of the screen)\n        transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n        opacity: props.show ? '1' : '0' //is show true = opacity 100% if not then 0%\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, props.children));\n  }\n\n  return {\n    displayModal\n  };\n};\n\nexport default modal;\n{\n  /* <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? '1' : '0'\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux> */\n}","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/UI/Modal/Modal.js"],"names":["React","useContext","StoreDataContext","classes","Aux","modal","props","storeDataContext","displayModal","contentChoice","Modal","transform","show","opacity","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB,C,CACA;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAMC,gBAAgB,GAAGN,UAAU,CAACC,gBAAD,CAAnC;AACA,MAAIM,YAAY,GAAG,IAAnB;;AACA,MAAID,gBAAgB,CAACE,aAAjB,KAAmC,IAAvC,EAA6C;AAC3CD,IAAAA,YAAY,GACV,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAEL,OAAO,CAACO,KADrB,CAEE;AACA;AACA;AACA;AALF;AAOE,MAAA,KAAK,EAAE;AACL;AACAC,QAAAA,SAAS,EAAEL,KAAK,CAACM,IAAN,GAAa,eAAb,GAA+B,oBAFrC;AAGLC,QAAAA,OAAO,EAAEP,KAAK,CAACM,IAAN,GAAa,GAAb,GAAmB,GAHvB,CAG2B;;AAH3B,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaGN,KAAK,CAACQ,QAbT,CADF,CADF;AAmBD;;AACD,SAAO;AAAEN,IAAAA;AAAF,GAAP;AACD,CAzBD;;AA2BA,eAAeH,KAAf;AAEA;AACE;;;;;;;;;;;;AAYD","sourcesContent":["import React, { useContext } from 'react';\nimport StoreDataContext from '../../../context/StoreDataContext';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux';\n//import Backdrop from '../Backdrop/Backdrop';\n\nconst modal = props => {\n  const storeDataContext = useContext(StoreDataContext);\n  let displayModal = null;\n  if (storeDataContext.contentChoice === '12') {\n    displayModal = (\n      <Aux>\n        <div\n          className={classes.Modal}\n          //bind style here to something dynamic, needs to be js object\n          //If props.show = true\n          // -transform to translateY(0)\n          // -which is the position defined in css,\n\n          style={{\n            //set transform property -> vh = viewport (slide it outside of the screen)\n            transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: props.show ? '1' : '0' //is show true = opacity 100% if not then 0%\n          }}\n        >\n          {props.children}\n        </div>\n      </Aux>\n    );\n  }\n  return { displayModal };\n};\n\nexport default modal;\n\n{\n  /* <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? '1' : '0'\n          }}\n        >\n          {this.props.children}\n        </div>\n      </Aux> */\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/HowBusyThisWeek/HowBusyThisDay/HowBusyThisDay.js\";\nimport React, { useEffect, useState, useContext } from 'react'; //import rocky from '../../containers/App.module.css'\n// import classNames from 'classnames';\n// import classes from './Cockpit.module.css';\n// import Navbar from './navBar';\n// import DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\n// import Template from '../../Template/Template';\n\nimport TasksContext from '../../../../context/tasksContext';\n\nconst HowBusyThisDay = props => {\n  const taskscContext = useContext(TasksContext); // const (aa,setbb) = useState({\n  // })\n\n  let taskIcon = null;\n  let iconNum = 0;\n\n  if (props.type == 'Saturday' || props.type == 'Sunday') {\n    taskIcon = '*';\n  } else {\n    taskIcon = '$';\n  }\n\n  function repeatStringNumTimes(string, times) {\n    var repeatedString = '';\n\n    while (times > 0) {\n      repeatedString += string;\n      times--;\n    }\n\n    return repeatedString;\n  }\n\n  let iconString = repeatStringNumTimes(taskIcon, props.taskNum);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    key: props.particularKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"text-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.type), React.createElement(\"td\", {\n    className: \"text-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, iconString)));\n};\n\nexport default HowBusyThisDay;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Cockpit/HowBusyThisWeek/HowBusyThisDay/HowBusyThisDay.js"],"names":["React","useEffect","useState","useContext","TasksContext","HowBusyThisDay","props","taskscContext","taskIcon","iconNum","type","repeatStringNumTimes","string","times","repeatedString","iconString","taskNum","particularKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD,C,CACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAMC,aAAa,GAAGJ,UAAU,CAACC,YAAD,CAAhC,CAD8B,CAE9B;AAEA;;AAEA,MAAII,QAAQ,GAAG,IAAf;AACA,MAAIC,OAAO,GAAG,CAAd;;AACA,MAAIH,KAAK,CAACI,IAAN,IAAc,UAAd,IAA4BJ,KAAK,CAACI,IAAN,IAAc,QAA9C,EAAwD;AACtDF,IAAAA,QAAQ,GAAG,GAAX;AACD,GAFD,MAEO;AACLA,IAAAA,QAAQ,GAAG,GAAX;AACD;;AAED,WAASG,oBAAT,CAA8BC,MAA9B,EAAsCC,KAAtC,EAA6C;AAC3C,QAAIC,cAAc,GAAG,EAArB;;AACA,WAAOD,KAAK,GAAG,CAAf,EAAkB;AAChBC,MAAAA,cAAc,IAAIF,MAAlB;AACAC,MAAAA,KAAK;AACN;;AACD,WAAOC,cAAP;AACD;;AACD,MAAIC,UAAU,GAAGJ,oBAAoB,CAACH,QAAD,EAAWF,KAAK,CAACU,OAAjB,CAArC;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEV,KAAK,CAACW,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BX,KAAK,CAACI,IAAjC,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BK,UAA3B,CAFF,CADF,CADF;AAQD,CAhCD;;AAkCA,eAAeV,cAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\n//import rocky from '../../containers/App.module.css'\n// import classNames from 'classnames';\n// import classes from './Cockpit.module.css';\n// import Navbar from './navBar';\n// import DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\n// import Template from '../../Template/Template';\nimport TasksContext from '../../../../context/tasksContext';\n\nconst HowBusyThisDay = props => {\n  const taskscContext = useContext(TasksContext);\n  // const (aa,setbb) = useState({\n\n  // })\n\n  let taskIcon = null;\n  let iconNum = 0;\n  if (props.type == 'Saturday' || props.type == 'Sunday') {\n    taskIcon = '*';\n  } else {\n    taskIcon = '$';\n  }\n\n  function repeatStringNumTimes(string, times) {\n    var repeatedString = '';\n    while (times > 0) {\n      repeatedString += string;\n      times--;\n    }\n    return repeatedString;\n  }\n  let iconString = repeatStringNumTimes(taskIcon, props.taskNum);\n\n  return (\n    <React.Fragment>\n      <tr key={props.particularKey}>\n        <td className=\"text-dark\">{props.type}</td>\n        <td className=\"text-dark\">{iconString}</td>\n      </tr>\n    </React.Fragment>\n  );\n};\n\nexport default HowBusyThisDay;\n"]},"metadata":{},"sourceType":"module"}
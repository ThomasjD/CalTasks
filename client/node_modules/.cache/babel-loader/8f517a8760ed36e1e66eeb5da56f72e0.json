{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Creation/NewEvent.js\";\nimport React, { Component } from 'react';\nimport DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\nimport ReactDatePicker from '../Calendar/ReactDatePicker';\nimport RightCockpitContext from '../../context/RightCockpitContext';\nimport TasksDataContext from '../../context/tasksContext';\nimport Icon from '../Calendar/Icon';\nimport { Form, Input, FormGroup, Container, Label } from 'reactstrap';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport { fi } from 'date-fns/locale';\n\nclass NewEvent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventId: '',\n      //task + date + start time\n      eventTitle: '',\n      eventNote: '',\n      eventCategory: '',\n      //errand,multiday event, single day event, (radial choices)\n      //required\n      StartTimeDate: '',\n      FinishTimeDate: '',\n      showStartTimeDate: false,\n      showFinishTimeDate: false\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let typeOfData = 'tasks';\n      let handlerChoice = '8';\n      let infoType = 'newEvent';\n      let info = this.state;\n      this.setState({\n        blue: 'blue'\n      }, event => this.context.dataRequestHandler(event, typeOfData, handlerChoice, infoType, info)); // this.resetState(event =>\n      //   this.context.dataRequestHandler(\n      //     event,\n      //     typeOfData,\n      //     handlerChoice,\n      //     infoType,\n      //     info\n      //   )\n      // );\n    };\n\n    this.resetState = () => {\n      alert('inside case 8');\n      this.setState({\n        eventId: '',\n        //task + date + start time\n        eventTitle: '',\n        //title, string\n        eventNote: '',\n        //text, string\n        eventCategory: '',\n        //errand,multiday event, single day event, (radial choices)\n        //required\n        assignedTimeStart: '',\n        //14:00:00 GMT-0500 (Colombia Standard Time)\n        assignedDateStart: '',\n        //Thu Jan 16 2020\n        //optional\n        eventDuration: '',\n        //\n        blockOffTimeSlot: '',\n        //T-F  when event will take on time slot for scheduled day\n        assignedTimeStop: '',\n        //00:00 - 24:00, string\n        assignedDateStop: ''\n      }, () => this.context.newContentViewHandler('2', 'Monday')); //send new view\n    };\n\n    this.handleDateChange = date => {\n      //let date = event.target.value;\n      this.setState({\n        startTimeDate: date,\n        showStartTimeDate: true\n      });\n    };\n\n    this.startDateTimeHandler = date => {\n      this.setState({\n        startTimeDate: date,\n        showStartTimeDate: true\n      });\n      console.log(`Inside NewEvent startDateTimeHandler: typeOf date ${typeof date} `);\n    };\n\n    this.finishTimeDateHandler = date => {\n      this.setState({\n        finishTimeDate: date,\n        showFinishTimeDate: true\n      });\n      console.log(`finishTimeHandler in newEvent: ${date}`);\n    };\n\n    this.eventTitleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.eventNoteChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.eventTypeChange = e => {\n      this.setState({\n        eventType: e.target.value\n      });\n    };\n  }\n\n  //static contextType = RightCockpitContext;\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Event Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"eventTitle\",\n      className: \"form-control\",\n      value: this.state.eventTitle,\n      onChange: e => this.eventTitleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Event Type\"), React.createElement(\"select\", {\n      name: \"assignedTimeStart\",\n      className: \"form-control\",\n      placeholder: \"Enter Start Time.\",\n      onChange: e => this.eventTypeChange(e),\n      id: \"assignedTimeStart\",\n      defaultValue: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Appointment\"), React.createElement(\"option\", {\n      value: \"2eeting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Meeting\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"One Time - Scheduled\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"One Time - Unschedule\"), React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Multi Day Event\"))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Note\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"eventNote\",\n      className: \"form-control\",\n      value: this.state.eventNote,\n      onChange: e => this.eventNoteChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(DatePickerPicker, {\n      startDateTimeHandler: date => this.startDateTimeHandler(date),\n      finishTimeDateHandler: date => this.finishTimeHandler(date),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nNewEvent.contextType = TasksDataContext;\nexport default NewEvent;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Creation/NewEvent.js"],"names":["React","Component","DatePickerPicker","ReactDatePicker","RightCockpitContext","TasksDataContext","Icon","Form","Input","FormGroup","Container","Label","DateRangePicker","SingleDatePicker","DayPickerRangeController","fi","NewEvent","state","eventId","eventTitle","eventNote","eventCategory","StartTimeDate","FinishTimeDate","showStartTimeDate","showFinishTimeDate","onSubmit","e","preventDefault","typeOfData","handlerChoice","infoType","info","setState","blue","event","context","dataRequestHandler","resetState","alert","assignedTimeStart","assignedDateStart","eventDuration","blockOffTimeSlot","assignedTimeStop","assignedDateStop","newContentViewHandler","handleDateChange","date","startTimeDate","startDateTimeHandler","console","log","finishTimeDateHandler","finishTimeDate","eventTitleChange","target","name","value","eventNoteChange","eventTypeChange","eventType","render","finishTimeHandler","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\nimport ReactDatePicker from '../Calendar/ReactDatePicker';\nimport RightCockpitContext from '../../context/RightCockpitContext';\nimport TasksDataContext from '../../context/tasksContext';\nimport Icon from '../Calendar/Icon';\nimport { Form, Input, FormGroup, Container, Label } from 'reactstrap';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport {\n  DateRangePicker,\n  SingleDatePicker,\n  DayPickerRangeController\n} from 'react-dates';\nimport { fi } from 'date-fns/locale';\n\nclass NewEvent extends Component {\n  state = {\n    eventId: '', //task + date + start time\n    eventTitle: '',\n    eventNote: '',\n    eventCategory: '', //errand,multiday event, single day event, (radial choices)\n    //required\n    StartTimeDate: '',\n    FinishTimeDate: '',\n\n    showStartTimeDate: false,\n    showFinishTimeDate: false\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    let typeOfData = 'tasks';\n    let handlerChoice = '8';\n    let infoType = 'newEvent';\n    let info = this.state;\n\n    this.setState({ blue: 'blue' }, event =>\n      this.context.dataRequestHandler(\n        event,\n        typeOfData,\n        handlerChoice,\n        infoType,\n        info\n      )\n    );\n\n    // this.resetState(event =>\n    //   this.context.dataRequestHandler(\n    //     event,\n    //     typeOfData,\n    //     handlerChoice,\n    //     infoType,\n    //     info\n    //   )\n    // );\n  };\n\n  resetState = () => {\n    alert('inside case 8');\n    this.setState(\n      {\n        eventId: '', //task + date + start time\n        eventTitle: '', //title, string\n\n        eventNote: '', //text, string\n        eventCategory: '', //errand,multiday event, single day event, (radial choices)\n\n        //required\n        assignedTimeStart: '', //14:00:00 GMT-0500 (Colombia Standard Time)\n        assignedDateStart: '', //Thu Jan 16 2020\n        //optional\n        eventDuration: '', //\n        blockOffTimeSlot: '', //T-F  when event will take on time slot for scheduled day\n        assignedTimeStop: '', //00:00 - 24:00, string\n        assignedDateStop: ''\n      },\n      () => this.context.newContentViewHandler('2', 'Monday')\n    );\n    //send new view\n  };\n  handleDateChange = date => {\n    //let date = event.target.value;\n    this.setState({\n      startTimeDate: date,\n      showStartTimeDate: true\n    });\n  };\n\n  startDateTimeHandler = date => {\n    this.setState({ startTimeDate: date, showStartTimeDate: true });\n\n    console.log(\n      `Inside NewEvent startDateTimeHandler: typeOf date ${typeof date} `\n    );\n  };\n\n  finishTimeDateHandler = date => {\n    this.setState({ finishTimeDate: date, showFinishTimeDate: true });\n    console.log(`finishTimeHandler in newEvent: ${date}`);\n  };\n\n  eventTitleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  eventNoteChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  eventTypeChange = e => {\n    this.setState({\n      eventType: e.target.value\n    });\n  };\n  static contextType = TasksDataContext;\n  //static contextType = RightCockpitContext;\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <form>\n            <div className=\"form-group\">\n              <label>Event Title</label>\n              <input\n                type=\"text\"\n                name=\"eventTitle\"\n                className=\"form-control\"\n                value={this.state.eventTitle}\n                onChange={e => this.eventTitleChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Event Type</label>\n              <select\n                name=\"assignedTimeStart\"\n                className=\"form-control\"\n                placeholder=\"Enter Start Time.\"\n                onChange={e => this.eventTypeChange(e)}\n                id=\"assignedTimeStart\"\n                defaultValue=\"1\"\n              >\n                <option value=\"1\">Appointment</option>\n                <option value=\"2eeting\">Meeting</option>\n                <option value=\"3\">One Time - Scheduled</option>\n                <option value=\"4\">One Time - Unschedule</option>\n                <option value=\"5\">Multi Day Event</option>\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Note</label>\n              <input\n                type=\"text\"\n                name=\"eventNote\"\n                className=\"form-control\"\n                value={this.state.eventNote}\n                onChange={e => this.eventNoteChange(e)}\n              />\n\n              <DatePickerPicker\n                startDateTimeHandler={date => this.startDateTimeHandler(date)}\n                finishTimeDateHandler={date => this.finishTimeHandler(date)}\n              />\n            </div>\n\n            <button onClick={e => this.onSubmit(e)}>Submit</button>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NewEvent;\n"]},"metadata":{},"sourceType":"module"}
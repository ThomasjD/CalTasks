{"ast":null,"code":"import _objectSpread from \"/Users/thomasjd/Desktop/caltask/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Creation/WeeklyTimeBudget/WeeklyTimeBudget.js\";\nimport React, { Component } from 'react';\nimport DailyTimeBudget from '../DailyTimeBudget/DailyTimeBudget';\nimport classes from './WeeklyTimeBudget.module.css'; //import classes2 from '../DailyTimeBudget/DailyTimeBudget.module.css';\n//each day have a predetermined amt of time for each category\n//then each day you can balance it according to 24 hours\n//after balancing for each day, you have to go back to balance the weekly total\n//24 hours a day //broken down into .5 hour\n//\n\nclass weeklyTimeBudget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addHourToActivityPickedDay = activity => {\n      let pickedDay = this.state.pickedDay;\n      let allDaysTimeBudget = this.state.dailyBudget;\n\n      let pickedDayDailyBudget = _objectSpread({}, this.state.dailyBudget[pickedDay]);\n\n      let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n      let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount + 1;\n      let pickedDayUpdatedActivityHourCount = pickedDayCurrentActivityHourCount + 1;\n      pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n      pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n      allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n      this.setState({\n        dailyBudget: allDaysTimeBudget\n      });\n      this.addHourToActivity(activity); //this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.deductHourToActivityPickedDay = activity => {\n      let pickedDay = this.state.pickedDay;\n      let allDaysTimeBudget = this.state.dailyBudget;\n\n      let pickedDayDailyBudget = _objectSpread({}, this.state.dailyBudget[pickedDay]);\n\n      let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n      let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount - 1;\n      let pickedDayUpdatedActivityHourCount = pickedDayCurrentActivityHourCount - 1;\n      pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n      pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n      allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n      this.setState({\n        dailyBudget: allDaysTimeBudget\n      });\n    };\n\n    this.addHourToActivity = activity => {\n      let activityWeekCategories = _objectSpread({}, this.state.activityWeekCategories);\n\n      let currentTotalHourCount = activityWeekCategories.totalHours;\n      let currentActivityHourCount = activityWeekCategories[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let updatedTotalHourCount = currentTotalHourCount + 1;\n      activityWeekCategories.totalHours = updatedTotalHourCount;\n      let updatedActivityHourCount = currentActivityHourCount + 1;\n      activityWeekCategories[activity] = updatedActivityHourCount;\n      this.setState({\n        activityWeekCategories: activityWeekCategories\n      });\n      this.deductHourToActivity(activity); //this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.deductHourToActivity = activity => {\n      let activityWeekCategories = _objectSpread({}, this.state.activityWeekCategories);\n\n      let currentTotalHourCount = activityWeekCategories.totalHours;\n      let currentActivityHourCount = activityWeekCategories[activity]; //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n\n      let updatedTotalHourCount = currentTotalHourCount - 1;\n      activityWeekCategories.totalHours = updatedTotalHourCount;\n      let updatedActivityHourCount = currentActivityHourCount - 1;\n      activityWeekCategories[activity] = updatedActivityHourCount;\n      this.setState({\n        activityWeekCategories: activityWeekCategories\n      });\n    };\n\n    this.pickDayHandler = event => {\n      let pickedDay = event.target.value; //alert(pickedDay);\n\n      this.setState({\n        pickedDay: pickedDay\n      });\n    };\n\n    this.thisWeek = new DailyTimeBudget();\n    this.thisWeek.timeBudgetDay();\n    this.state = {\n      activityWeekCategories: this.thisWeek.activityWeekCategories,\n      dailyBudget: this.thisWeek.dailyBudget,\n      pickedDay: ''\n    };\n  }\n\n  //disablled = when -hours for each category\n  //when totalHours = for week is not balanced\n  //need to balance each day first\n  render() {\n    let disabledDeductBtnWeek = _objectSpread({}, this.state.activityWeekCategories);\n\n    for (let key in disabledDeductBtnWeek) {\n      disabledDeductBtnWeek[key] = disabledDeductBtnWeek[key] = 0;\n    }\n\n    let displayDailyTimeBudget = null;\n    displayDailyTimeBudget = Object.keys(this.state.activityWeekCategories).map(eachCategory => React.createElement(DailyTimeBudget, {\n      key: eachCategory.concat(eachCategory),\n      activity: eachCategory,\n      hours: this.state.activityWeekCategories[eachCategory],\n      reduce: () => this.deductHourToActivity(eachCategory),\n      add: () => this.addHourToActivity(eachCategory),\n      pickedDay: this.state.pickedDay,\n      dailyBudget: this.state.dailyBudget,\n      disabled: disabledDeductBtnWeek,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })); // let dailyBudget = this.props.dailyBudget;\n\n    let displayPickedDay = null;\n    let pickedDay = this.state.pickedDay; //alert(pickedDay);\n\n    let dailyBudget = _objectSpread({}, this.state.dailyBudget);\n\n    let foundDayBudget = dailyBudget[pickedDay];\n\n    if (this.state.pickedDay) {\n      // console.dir(dailyBudget);\n      // console.dir(foundDayBudget.sleep);\n      // alert(`sleep: ${foundDayBudget.sleep}`);\n      displayPickedDay = Object.keys(foundDayBudget).map(eachCategory => {\n        console.log(`eachCategory: ${eachCategory}`);\n        return React.createElement(DailyTimeBudget, {\n          key: eachCategory.concat(eachCategory),\n          activity: eachCategory,\n          hours: foundDayBudget[eachCategory],\n          reduce: () => this.deductHourToActivityPickedDay(eachCategory),\n          add: () => this.addHourToActivityPickedDay(eachCategory),\n          pickedDay: this.state.pickedDay,\n          dailyBudget: this.state.dailyBudget //disabled = {this.disabledDeductBtnWeek}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-group mb-2\",\n      role: \"group\",\n      \"aria-label\": \"Basic example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2\",\n      value: \"Monday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Monday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2\",\n      value: \"Tuesday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Tuesday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2\",\n      value: \"Wednesday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Wednesday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2\",\n      value: \"Thursday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Thursday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2\",\n      value: \"Friday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Friday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2\",\n      value: \"Saturday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Saturday\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary mr-2\",\n      value: \"Sunday\",\n      onClick: event => this.pickDayHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Sunday\")), React.createElement(\"div\", {\n      className: classes.WeeklyTimeBudget,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-8 order-0 float-left align-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Time Budget for Week\"), displayDailyTimeBudget), React.createElement(\"div\", {\n      className: \"col-lg-4 order-1 float-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.state.pickedDay ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, this.state.pickedDay) : null), displayPickedDay))));\n  }\n\n}\n\nexport default weeklyTimeBudget;","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Creation/WeeklyTimeBudget/WeeklyTimeBudget.js"],"names":["React","Component","DailyTimeBudget","classes","weeklyTimeBudget","constructor","props","addHourToActivityPickedDay","activity","pickedDay","state","allDaysTimeBudget","dailyBudget","pickedDayDailyBudget","pickedDayCurrentTotalHourCount","totalHours","pickedDayCurrentActivityHourCount","pickedDayUpdatedTotalHourCount","pickedDayUpdatedActivityHourCount","setState","addHourToActivity","deductHourToActivityPickedDay","activityWeekCategories","currentTotalHourCount","currentActivityHourCount","updatedTotalHourCount","updatedActivityHourCount","deductHourToActivity","pickDayHandler","event","target","value","thisWeek","timeBudgetDay","render","disabledDeductBtnWeek","key","displayDailyTimeBudget","Object","keys","map","eachCategory","concat","displayPickedDay","foundDayBudget","console","log","WeeklyTimeBudget"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DailyTimeBudget from '../DailyTimeBudget/DailyTimeBudget';\nimport classes from './WeeklyTimeBudget.module.css';\n//import classes2 from '../DailyTimeBudget/DailyTimeBudget.module.css';\n\n//each day have a predetermined amt of time for each category\n//then each day you can balance it according to 24 hours\n//after balancing for each day, you have to go back to balance the weekly total\n\n//24 hours a day //broken down into .5 hour\n//\nclass weeklyTimeBudget extends Component {\n  constructor(props) {\n    super(props);\n    this.thisWeek = new DailyTimeBudget();\n    this.thisWeek.timeBudgetDay();\n    this.state = {\n      activityWeekCategories: this.thisWeek.activityWeekCategories,\n      dailyBudget: this.thisWeek.dailyBudget,\n      pickedDay: ''\n    };\n  }\n\n  addHourToActivityPickedDay = activity => {\n    let pickedDay = this.state.pickedDay;\n    let allDaysTimeBudget = this.state.dailyBudget;\n    let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n\n    let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n    let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount + 1;\n\n    let pickedDayUpdatedActivityHourCount =\n      pickedDayCurrentActivityHourCount + 1;\n    pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n    pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n    allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n\n    this.setState({ dailyBudget: allDaysTimeBudget });\n    this.addHourToActivity(activity);\n    //this.updatePurchaseState(updatedIngredients);\n  };\n\n  deductHourToActivityPickedDay = activity => {\n    let pickedDay = this.state.pickedDay;\n    let allDaysTimeBudget = this.state.dailyBudget;\n    let pickedDayDailyBudget = { ...this.state.dailyBudget[pickedDay] };\n\n    let pickedDayCurrentTotalHourCount = pickedDayDailyBudget.totalHours;\n    let pickedDayCurrentActivityHourCount = pickedDayDailyBudget[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let pickedDayUpdatedTotalHourCount = pickedDayCurrentTotalHourCount - 1;\n\n    let pickedDayUpdatedActivityHourCount =\n      pickedDayCurrentActivityHourCount - 1;\n    pickedDayDailyBudget.totalHours = pickedDayUpdatedTotalHourCount;\n    pickedDayDailyBudget[activity] = pickedDayUpdatedActivityHourCount;\n    allDaysTimeBudget[pickedDay] = pickedDayDailyBudget;\n\n    this.setState({ dailyBudget: allDaysTimeBudget });\n  };\n\n  addHourToActivity = activity => {\n    let activityWeekCategories = { ...this.state.activityWeekCategories };\n    let currentTotalHourCount = activityWeekCategories.totalHours;\n    let currentActivityHourCount = activityWeekCategories[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let updatedTotalHourCount = currentTotalHourCount + 1;\n    activityWeekCategories.totalHours = updatedTotalHourCount;\n    let updatedActivityHourCount = currentActivityHourCount + 1;\n    activityWeekCategories[activity] = updatedActivityHourCount;\n\n    this.setState({ activityWeekCategories: activityWeekCategories });\n    this.deductHourToActivity(activity);\n    //this.updatePurchaseState(updatedIngredients);\n  };\n  deductHourToActivity = activity => {\n    let activityWeekCategories = { ...this.state.activityWeekCategories };\n    let currentTotalHourCount = activityWeekCategories.totalHours;\n    let currentActivityHourCount = activityWeekCategories[activity];\n\n    //const [[activity], totalHours] = {...this.state.activityWeekCategories}\n    let updatedTotalHourCount = currentTotalHourCount - 1;\n    activityWeekCategories.totalHours = updatedTotalHourCount;\n    let updatedActivityHourCount = currentActivityHourCount - 1;\n    activityWeekCategories[activity] = updatedActivityHourCount;\n\n    this.setState({ activityWeekCategories: activityWeekCategories });\n  };\n\n  pickDayHandler = event => {\n    let pickedDay = event.target.value;\n    //alert(pickedDay);\n    this.setState({\n      pickedDay: pickedDay\n    });\n  };\n\n  //disablled = when -hours for each category\n  //when totalHours = for week is not balanced\n  //need to balance each day first\n\n  render() {\n    let disabledDeductBtnWeek = { ...this.state.activityWeekCategories };\n    for (let key in disabledDeductBtnWeek) {\n      disabledDeductBtnWeek[key] = disabledDeductBtnWeek[key] = 0;\n    }\n\n    let displayDailyTimeBudget = null;\n\n    displayDailyTimeBudget = Object.keys(\n      this.state.activityWeekCategories\n    ).map(eachCategory => (\n      <DailyTimeBudget\n        key={eachCategory.concat(eachCategory)}\n        activity={eachCategory}\n        hours={this.state.activityWeekCategories[eachCategory]}\n        reduce={() => this.deductHourToActivity(eachCategory)}\n        add={() => this.addHourToActivity(eachCategory)}\n        pickedDay={this.state.pickedDay}\n        dailyBudget={this.state.dailyBudget}\n        disabled={disabledDeductBtnWeek}\n      />\n    ));\n\n    // let dailyBudget = this.props.dailyBudget;\n    let displayPickedDay = null;\n    let pickedDay = this.state.pickedDay;\n    //alert(pickedDay);\n    let dailyBudget = { ...this.state.dailyBudget };\n    let foundDayBudget = dailyBudget[pickedDay];\n    if (this.state.pickedDay) {\n      // console.dir(dailyBudget);\n      // console.dir(foundDayBudget.sleep);\n      // alert(`sleep: ${foundDayBudget.sleep}`);\n\n      displayPickedDay = Object.keys(foundDayBudget).map(eachCategory => {\n        console.log(`eachCategory: ${eachCategory}`);\n        return (\n          <DailyTimeBudget\n            key={eachCategory.concat(eachCategory)}\n            activity={eachCategory}\n            hours={foundDayBudget[eachCategory]}\n            reduce={() => this.deductHourToActivityPickedDay(eachCategory)}\n            add={() => this.addHourToActivityPickedDay(eachCategory)}\n            pickedDay={this.state.pickedDay}\n            dailyBudget={this.state.dailyBudget}\n            //disabled = {this.disabledDeductBtnWeek}\n          />\n        );\n      });\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"btn-group mb-2\" role=\"group\" aria-label=\"Basic example\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            value=\"Monday\"\n            onClick={event => this.pickDayHandler(event)}\n          >\n            Monday\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            value=\"Tuesday\"\n            onClick={event => this.pickDayHandler(event)}\n          >\n            Tuesday\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            value=\"Wednesday\"\n            onClick={event => this.pickDayHandler(event)}\n          >\n            Wednesday\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            value=\"Thursday\"\n            onClick={event => this.pickDayHandler(event)}\n          >\n            Thursday\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            value=\"Friday\"\n            onClick={event => this.pickDayHandler(event)}\n          >\n            Friday\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            value=\"Saturday\"\n            onClick={event => this.pickDayHandler(event)}\n          >\n            Saturday\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            value=\"Sunday\"\n            onClick={event => this.pickDayHandler(event)}\n          >\n            Sunday\n          </button>\n        </div>\n\n        <div className={classes.WeeklyTimeBudget}>\n          <div className=\"container\">\n            <div className=\"col-lg-8 order-0 float-left align-left\">\n              <h3 className=\"\">Time Budget for Week</h3>\n              {displayDailyTimeBudget}\n            </div>\n            <div className=\"col-lg-4 order-1 float-left\">\n              <h4>\n                {this.state.pickedDay ? (\n                  <div>{this.state.pickedDay}</div>\n                ) : null}\n              </h4>\n              {displayPickedDay}\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default weeklyTimeBudget;\n"]},"metadata":{},"sourceType":"module"}
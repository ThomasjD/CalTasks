{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Syllabus/Syllabi.js\";\nimport React, { Component } from 'react'; //import Task from './Task/Task';\n\nimport ErrorBoundary from './../../ErrorBoundary/ErrorBoundary';\nimport student from './../../../containers/Student.css';\nimport Syllabus from './Syllabus';\nimport SyllabusContext from './../../../context/syllabusContext';\n\nclass Syllabi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clickToAddDelete: null\n    };\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n  //rendering current lessons headers\n  renderAllSyllabiTableHeaderHandler() {\n    //alert('inside syllabi renderAllSyllabiTableHeaderHandler()');\n    //this is part of First row of table\n    let clickToAddDelete = null; // if (this.props.showLeftOverLessonsFromOrigSyllabus) {\n    //   clickToAddDelete = 'Click to schedule this lesson';\n    // } else {\n    //   clickToAddDelete = 'Click to Delete Lesson';\n    // }\n    // if (\n    //   this.context.everythingSyllabus.syllabusData.currentShowSyllabusList ===\n    //   true\n    // ) {\n\n    let header = this.context.everythingSyllabus.syllabusData.syllabusHeaders; //lastLessonHeader;\n\n    return header.map((key, index) => {\n      //console.log(`this is the key: (${key}) and the index: (${index})`);\n      switch (key) {\n        case 'syllabusId':\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, \"Click To Delete\");\n          break;\n\n        case 'name':\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, key.toUpperCase());\n          break;\n\n        case 'category':\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, key.toUpperCase());\n          break;\n\n        case 'concentration':\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, key.toUpperCase());\n          break;\n\n        case 'subject':\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, key.toUpperCase());\n          break;\n\n        case 'source':\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, key.toUpperCase());\n          break;\n\n        case 'syllabusCompletionTime':\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \"Required Hours\");\n          break;\n\n        case 'completionStatus':\n          return React.createElement(\"th\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \"Completion Status\");\n          break;\n      }\n    }); //}\n  } //rendering current lessons\n\n\n  allSyllabiHandler() {\n    let arraySyllabi = null;\n    let displaySyllabiInfo = null; //if (this.context.everythingSyllabus.syllabusData) {\n    //[ key1, key2, key3] //name of syllabus obj\n\n    let info = Object.keys(this.context.everythingSyllabus.syllabusData.syllabi);\n    return info.map(syllabusKey => {\n      //array of syllabus object\n      return this.context.everythingSyllabus.syllabusData.syllabi[syllabusKey];\n    }).map((key, index) => {\n      //alert(`syllabus: ${key.name} index: ${key.syllabusCompletionTime}`);\n      return React.createElement(Syllabus, {\n        particularKey: key.name,\n        name: key.name,\n        index: index,\n        category: key.category,\n        concentration: key.concentration,\n        subject: key.subject,\n        source: key.source,\n        syllabusCompletionTime: key.syllabusCompletionTime,\n        completionStatus: key.completionStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    //alert('inside syllabi render()');\n    console.log('[allSyllabus] rendering...'); //<p> contentChoice: {this.props.everything.contentChoice}</p>\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" Syllabi\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.renderAllSyllabiTableHeaderHandler()), this.allSyllabiHandler())));\n  }\n\n}\n\nSyllabi.contextType = SyllabusContext;\nexport default Syllabi; // id=\"students\"","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/ViewContent/Syllabus/Syllabi.js"],"names":["React","Component","ErrorBoundary","student","Syllabus","SyllabusContext","Syllabi","constructor","props","state","clickToAddDelete","renderAllSyllabiTableHeaderHandler","header","context","everythingSyllabus","syllabusData","syllabusHeaders","map","key","index","toUpperCase","allSyllabiHandler","arraySyllabi","displaySyllabiInfo","info","Object","keys","syllabi","syllabusKey","name","category","concentration","subject","source","syllabusCompletionTime","completionStatus","render","console","log","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAGnBC,KAHmB,GAGX;AACNC,MAAAA,gBAAgB,EAAE;AADZ,KAHW;AAElB;;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC,EAAAA,kCAAkC,GAAG;AACnC;AACA;AACA,QAAID,gBAAgB,GAAG,IAAvB,CAHmC,CAKnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIE,MAAM,GAAG,KAAKC,OAAL,CAAaC,kBAAb,CAAgCC,YAAhC,CAA6CC,eAA1D,CAdmC,CAenC;;AACA,WAAOJ,MAAM,CAACK,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChC;AAEA,cAAQD,GAAR;AACE,aAAK,YAAL;AACE,iBAAO;AAAI,YAAA,GAAG,EAAEC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACA;;AACF,aAAK,MAAL;AACE,iBAAO;AAAI,YAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiBD,GAAG,CAACE,WAAJ,EAAjB,CAAP;AACA;;AACF,aAAK,UAAL;AACE,iBAAO;AAAI,YAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiBD,GAAG,CAACE,WAAJ,EAAjB,CAAP;AACA;;AACF,aAAK,eAAL;AACE,iBAAO;AAAI,YAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiBD,GAAG,CAACE,WAAJ,EAAjB,CAAP;AACA;;AACF,aAAK,SAAL;AACE,iBAAO;AAAI,YAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiBD,GAAG,CAACE,WAAJ,EAAjB,CAAP;AACA;;AACF,aAAK,QAAL;AACE,iBAAO;AAAI,YAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiBD,GAAG,CAACE,WAAJ,EAAjB,CAAP;AACA;;AACF,aAAK,wBAAL;AACE,iBAAO;AAAI,YAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACA;;AACF,aAAK,kBAAL;AACE,iBAAO;AAAI,YAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACA;AAxBJ;AA0BD,KA7BM,CAAP,CAhBmC,CA8CnC;AACD,GAjE6B,CAmE9B;;;AACAE,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,YAAY,GAAG,IAAnB;AACA,QAAIC,kBAAkB,GAAG,IAAzB,CAFkB,CAGlB;AACA;;AACA,QAAIC,IAAI,GAAGC,MAAM,CAACC,IAAP,CACT,KAAKb,OAAL,CAAaC,kBAAb,CAAgCC,YAAhC,CAA6CY,OADpC,CAAX;AAIA,WAAOH,IAAI,CACRP,GADI,CACAW,WAAW,IAAI;AAClB;AACA,aAAO,KAAKf,OAAL,CAAaC,kBAAb,CAAgCC,YAAhC,CAA6CY,OAA7C,CACLC,WADK,CAAP;AAGD,KANI,EAOJX,GAPI,CAOA,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACnB;AAEA,aACE,oBAAC,QAAD;AACE,QAAA,aAAa,EAAED,GAAG,CAACW,IADrB;AAEE,QAAA,IAAI,EAAEX,GAAG,CAACW,IAFZ;AAGE,QAAA,KAAK,EAAEV,KAHT;AAIE,QAAA,QAAQ,EAAED,GAAG,CAACY,QAJhB;AAKE,QAAA,aAAa,EAAEZ,GAAG,CAACa,aALrB;AAME,QAAA,OAAO,EAAEb,GAAG,CAACc,OANf;AAOE,QAAA,MAAM,EAAEd,GAAG,CAACe,MAPd;AAQE,QAAA,sBAAsB,EAAEf,GAAG,CAACgB,sBAR9B;AASE,QAAA,gBAAgB,EAAEhB,GAAG,CAACiB,gBATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD,KAvBI,CAAP;AAwBD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAFO,CAIP;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK3B,kCAAL,EAAL,CADF,EAEG,KAAKU,iBAAL,EAFH,CADF,CAHF,CADF;AAYD;;AAxH6B;;AAA1Bf,O,CAOGiC,W,GAAclC,e;AAoHvB,eAAeC,OAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\n//import Task from './Task/Task';\nimport ErrorBoundary from './../../ErrorBoundary/ErrorBoundary';\nimport student from './../../../containers/Student.css';\nimport Syllabus from './Syllabus';\nimport SyllabusContext from './../../../context/syllabusContext';\n\nclass Syllabi extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    clickToAddDelete: null\n  };\n  static contextType = SyllabusContext;\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('[maxReact Lessons.js] shouldComponentUpdate');\n  //   if (nextProps.lessonsLength !== this.props.lessonsLength) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n  //rendering current lessons headers\n  renderAllSyllabiTableHeaderHandler() {\n    //alert('inside syllabi renderAllSyllabiTableHeaderHandler()');\n    //this is part of First row of table\n    let clickToAddDelete = null;\n\n    // if (this.props.showLeftOverLessonsFromOrigSyllabus) {\n    //   clickToAddDelete = 'Click to schedule this lesson';\n    // } else {\n    //   clickToAddDelete = 'Click to Delete Lesson';\n    // }\n    // if (\n    //   this.context.everythingSyllabus.syllabusData.currentShowSyllabusList ===\n    //   true\n    // ) {\n    let header = this.context.everythingSyllabus.syllabusData.syllabusHeaders;\n    //lastLessonHeader;\n    return header.map((key, index) => {\n      //console.log(`this is the key: (${key}) and the index: (${index})`);\n\n      switch (key) {\n        case 'syllabusId':\n          return <th key={index}>Click To Delete</th>;\n          break;\n        case 'name':\n          return <th key={index}>{key.toUpperCase()}</th>;\n          break;\n        case 'category':\n          return <th key={index}>{key.toUpperCase()}</th>;\n          break;\n        case 'concentration':\n          return <th key={index}>{key.toUpperCase()}</th>;\n          break;\n        case 'subject':\n          return <th key={index}>{key.toUpperCase()}</th>;\n          break;\n        case 'source':\n          return <th key={index}>{key.toUpperCase()}</th>;\n          break;\n        case 'syllabusCompletionTime':\n          return <th key={index}>Required Hours</th>;\n          break;\n        case 'completionStatus':\n          return <th key={index}>Completion Status</th>;\n          break;\n      }\n    });\n    //}\n  }\n\n  //rendering current lessons\n  allSyllabiHandler() {\n    let arraySyllabi = null;\n    let displaySyllabiInfo = null;\n    //if (this.context.everythingSyllabus.syllabusData) {\n    //[ key1, key2, key3] //name of syllabus obj\n    let info = Object.keys(\n      this.context.everythingSyllabus.syllabusData.syllabi\n    );\n\n    return info\n      .map(syllabusKey => {\n        //array of syllabus object\n        return this.context.everythingSyllabus.syllabusData.syllabi[\n          syllabusKey\n        ];\n      })\n      .map((key, index) => {\n        //alert(`syllabus: ${key.name} index: ${key.syllabusCompletionTime}`);\n\n        return (\n          <Syllabus\n            particularKey={key.name}\n            name={key.name}\n            index={index}\n            category={key.category}\n            concentration={key.concentration}\n            subject={key.subject}\n            source={key.source}\n            syllabusCompletionTime={key.syllabusCompletionTime}\n            completionStatus={key.completionStatus}\n          />\n        );\n      });\n  }\n\n  render() {\n    //alert('inside syllabi render()');\n    console.log('[allSyllabus] rendering...');\n\n    //<p> contentChoice: {this.props.everything.contentChoice}</p>\n    return (\n      <div>\n        <h3 id=\"title\"> Syllabi</h3>\n\n        <table>\n          <tbody>\n            <tr>{this.renderAllSyllabiTableHeaderHandler()}</tr>\n            {this.allSyllabiHandler()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Syllabi;\n// id=\"students\"\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/thomasjd/Desktop/caltask/client/src/components/Creation/NewEvent.js\";\nimport React, { Component } from 'react';\nimport DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\nimport ReactDatePicker from '../Calendar/ReactDatePicker';\nimport RightCockpitContext from '../../context/RightCockpitContext';\nimport CalendarContext from '../../context/calendarContext';\nimport Icon from '../Calendar/Icon';\nimport { Form, Input, FormGroup, Container, Label } from 'reactstrap';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport { fi } from 'date-fns/locale'; // onSubmit = e => {\n// e.preventDefault();\n// const [newEvent, setNewEvent] = useState({\n//   title: ''\n// });\n// setNewEvent({\n//   [e.target.name]: e.target.value\n// });\n// let bigEvent = { [e.target.name]: e.target.value };\n// props.newestEvent(bigEvent);\n// };\n\nclass NewEvent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventId: '',\n      //task + date + start time\n      eventTitle: '',\n      //title, string\n      eventNote: '',\n      //text, string\n      eventCategory: '',\n      //errand,multiday event, single day event, (radial choices)\n      //required\n      assignedTimeStart: '',\n      //14:00:00 GMT-0500 (Colombia Standard Time)\n      assignedDateStart: '',\n      //Thu Jan 16 2020\n      //optional\n      eventDuration: '',\n      //\n      blockOffTimeSlot: '',\n      //T-F  when event will take on time slot for scheduled day\n      assignedTimeStop: '',\n      //00:00 - 24:00, string\n      assignedDateStop: '',\n      startDate1: '',\n      startDate2: null\n    };\n\n    this.onSubmit = e => {\n      //send state to Store, reset empty state, go to new view: events/tasks for specific day,\n      e.preventDefault(); //this.props.newestEvent(this.state);\n\n      this.resetState(this.context.newestEvent(this.state));\n    };\n\n    this.resetState = () => {\n      this.setState({\n        eventId: '',\n        //task + date + start time\n        eventTitle: '',\n        //title, string\n        eventNote: '',\n        //text, string\n        eventCategory: '',\n        //errand,multiday event, single day event, (radial choices)\n        //required\n        assignedTimeStart: '',\n        //14:00:00 GMT-0500 (Colombia Standard Time)\n        assignedDateStart: '',\n        //Thu Jan 16 2020\n        //optional\n        eventDuration: '',\n        //\n        blockOffTimeSlot: '',\n        //T-F  when event will take on time slot for scheduled day\n        assignedTimeStop: '',\n        //00:00 - 24:00, string\n        assignedDateStop: ''\n      }, () => this.context.newContentViewHandler('2', 'Monday')); //send new view\n    };\n\n    this.handleDateChange = date => {\n      //let date = event.target.value;\n      this.setState({\n        date: date,\n        showPickedDate: true\n      });\n    };\n\n    this.startDateTimeHandler = date => {\n      //alert(JSON.stringify(date));\n      console.log(date);\n      let scheduledStartDateTime = JSON.stringify(date);\n      console.log(scheduledStartDateTime);\n      this.setState({\n        startDate1: date,\n        day: '1'\n      }); //startDate1: Thu Jan 23 2020 16:30:00 GMT-0500 (Colombia Standard Time)\n\n      console.log(`Inside NewEvent startDateTimeHandler: ${date} `);\n    };\n\n    this.finishTimeHandler = date => {\n      this.setState({\n        startDate2: JSON.stringify(date)\n      });\n      console.log(`finishTimeHandler in newEvent: ${date}`);\n    };\n\n    this.eventTitleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.eventNoteChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Event Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"eventTitle\",\n      className: \"form-control\",\n      value: this.state.eventTitle,\n      onChange: e => this.eventTitleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Note\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"eventNote\",\n      className: \"form-control\",\n      value: this.state.eventNote,\n      onChange: e => this.eventNoteChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(DatePickerPicker, {\n      startDateTimeHandler: date => this.startDateTimeHandler(date),\n      finishTimeHandler: date => this.finishTimeHandler(date),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n} // {this.state.showPickedDate ? { showCurrentPickedDate } : null}\n\n\nNewEvent.contextType = CalendarContext;\nNewEvent.contextType = RightCockpitContext;\nexport default NewEvent; // <div className=\"form-group\">\n//             <label for=\"exampleFormControlTextarea1\">Example textarea</label>\n//             <textarea\n//               value = 'Search on Ebay'\n//               className=\"form-control\"\n//               rows=\"3\">\n//                </textarea>\n//           </div>","map":{"version":3,"sources":["/Users/thomasjd/Desktop/caltask/client/src/components/Creation/NewEvent.js"],"names":["React","Component","DatePickerPicker","ReactDatePicker","RightCockpitContext","CalendarContext","Icon","Form","Input","FormGroup","Container","Label","DateRangePicker","SingleDatePicker","DayPickerRangeController","fi","NewEvent","state","eventId","eventTitle","eventNote","eventCategory","assignedTimeStart","assignedDateStart","eventDuration","blockOffTimeSlot","assignedTimeStop","assignedDateStop","startDate1","startDate2","onSubmit","e","preventDefault","resetState","context","newestEvent","setState","newContentViewHandler","handleDateChange","date","showPickedDate","startDateTimeHandler","console","log","scheduledStartDateTime","JSON","stringify","day","finishTimeHandler","eventTitleChange","target","name","value","eventNoteChange","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DatePickerPicker from '../../containers/RightCockpit/DatePicker.js';\nimport ReactDatePicker from '../Calendar/ReactDatePicker';\nimport RightCockpitContext from '../../context/RightCockpitContext';\nimport CalendarContext from '../../context/calendarContext';\nimport Icon from '../Calendar/Icon';\nimport { Form, Input, FormGroup, Container, Label } from 'reactstrap';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport {\n  DateRangePicker,\n  SingleDatePicker,\n  DayPickerRangeController\n} from 'react-dates';\nimport { fi } from 'date-fns/locale';\n\n// onSubmit = e => {\n// e.preventDefault();\n\n// const [newEvent, setNewEvent] = useState({\n//   title: ''\n// });\n\n// setNewEvent({\n//   [e.target.name]: e.target.value\n// });\n// let bigEvent = { [e.target.name]: e.target.value };\n// props.newestEvent(bigEvent);\n// };\n\nclass NewEvent extends Component {\n  //startDate1: Thu Jan 16 2020 14:00:00 GMT-0500 (Colombia Standard Time)\n  state = {\n    eventId: '', //task + date + start time\n    eventTitle: '', //title, string\n\n    eventNote: '', //text, string\n    eventCategory: '', //errand,multiday event, single day event, (radial choices)\n\n    //required\n    assignedTimeStart: '', //14:00:00 GMT-0500 (Colombia Standard Time)\n    assignedDateStart: '', //Thu Jan 16 2020\n    //optional\n    eventDuration: '', //\n    blockOffTimeSlot: '', //T-F  when event will take on time slot for scheduled day\n    assignedTimeStop: '', //00:00 - 24:00, string\n    assignedDateStop: '',\n    startDate1: '',\n    startDate2: null\n  };\n\n  onSubmit = e => {\n    //send state to Store, reset empty state, go to new view: events/tasks for specific day,\n    e.preventDefault();\n\n    //this.props.newestEvent(this.state);\n\n    this.resetState(this.context.newestEvent(this.state));\n  };\n\n  resetState = () => {\n    this.setState(\n      {\n        eventId: '', //task + date + start time\n        eventTitle: '', //title, string\n\n        eventNote: '', //text, string\n        eventCategory: '', //errand,multiday event, single day event, (radial choices)\n\n        //required\n        assignedTimeStart: '', //14:00:00 GMT-0500 (Colombia Standard Time)\n        assignedDateStart: '', //Thu Jan 16 2020\n        //optional\n        eventDuration: '', //\n        blockOffTimeSlot: '', //T-F  when event will take on time slot for scheduled day\n        assignedTimeStop: '', //00:00 - 24:00, string\n        assignedDateStop: ''\n      },\n      () => this.context.newContentViewHandler('2', 'Monday')\n    );\n    //send new view\n  };\n  handleDateChange = date => {\n    //let date = event.target.value;\n    this.setState({ date: date, showPickedDate: true });\n  };\n\n  startDateTimeHandler = date => {\n    //alert(JSON.stringify(date));\n    console.log(date);\n    let scheduledStartDateTime = JSON.stringify(date);\n    console.log(scheduledStartDateTime);\n    this.setState({ startDate1: date, day: '1' });\n    //startDate1: Thu Jan 23 2020 16:30:00 GMT-0500 (Colombia Standard Time)\n\n    console.log(`Inside NewEvent startDateTimeHandler: ${date} `);\n  };\n\n  finishTimeHandler = date => {\n    this.setState({ startDate2: JSON.stringify(date) });\n    console.log(`finishTimeHandler in newEvent: ${date}`);\n  };\n\n  eventTitleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  eventNoteChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  static contextType = CalendarContext;\n  static contextType = RightCockpitContext;\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <form>\n            <div className=\"form-group\">\n              <label>Event Title</label>\n              <input\n                type=\"text\"\n                name=\"eventTitle\"\n                className=\"form-control\"\n                value={this.state.eventTitle}\n                onChange={e => this.eventTitleChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Note</label>\n              <input\n                type=\"text\"\n                name=\"eventNote\"\n                className=\"form-control\"\n                value={this.state.eventNote}\n                onChange={e => this.eventNoteChange(e)}\n              />\n\n              <DatePickerPicker\n                startDateTimeHandler={date => this.startDateTimeHandler(date)}\n                finishTimeHandler={date => this.finishTimeHandler(date)}\n              />\n            </div>\n\n            <button onClick={e => this.onSubmit(e)}>Submit</button>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n// {this.state.showPickedDate ? { showCurrentPickedDate } : null}\nexport default NewEvent;\n\n// <div className=\"form-group\">\n//             <label for=\"exampleFormControlTextarea1\">Example textarea</label>\n//             <textarea\n//               value = 'Search on Ebay'\n//               className=\"form-control\"\n//               rows=\"3\">\n//                </textarea>\n//           </div>\n"]},"metadata":{},"sourceType":"module"}